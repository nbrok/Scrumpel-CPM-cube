 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 1 - 2/2/2018 12:56:16


       1/       0 :                     	cpu	z80
       2/       0 :                     ;**************************************************************
       3/       0 :                     ;*
       4/       0 :                     ;*             C P / M   version   2 . 2
       5/       0 :                     ;*
       6/       0 :                     ;*   Reconstructed from memory image on February 27, 1981
       7/       0 :                     ;*
       8/       0 :                     ;*                by Clark A. Calkins
       9/       0 :                     ;*
      10/       0 :                     ;* Optimized for Z80 and some additions Nick Brok
      11/       0 :                     ;**************************************************************
      12/       0 :                     ;
      13/       0 :                     ;   Set memory limit here. This is the amount of contigeous
      14/       0 :                     ; ram starting from 0000. CP/M will reside at the end of this space.
      15/       0 :                     ;
      16/       0 :                     
      17/       0 : =3H                 iobyte	equ	3		;i/o definition byte.
      18/       0 : =4H                 tdrive	equ	4		;current drive name and user number.
      19/       0 : =5H                 entry	equ	5		;entry point for the cp/m bdos.
      20/       0 : =5CH                tfcb	equ	5ch		;default file control block.
      21/       0 : =80H                tbuff	equ	80h		;i/o buffer and command line storage.
      22/       0 : =100H               tbase	equ	100h		;transiant program storage area.
      23/       0 :                     ;
      24/       0 :                     ;   Set control character equates.
      25/       0 :                     ;
      26/       0 : =3H                 cntrlc	equ	3		;control-c
      27/       0 : =5H                 cntrle	equ	05h		;control-e
      28/       0 : =8H                 bs	equ	08h		;backspace
      29/       0 : =9H                 tab	equ	09h		;tab
      30/       0 : =AH                 lf	equ	0ah		;line feed
      31/       0 : =CH                 ff	equ	0ch		;form feed
      32/       0 : =DH                 cr	equ	0dh		;carriage return
      33/       0 : =10H                cntrlp	equ	10h		;control-p
      34/       0 : =12H                cntrlr	equ	12h		;control-r
      35/       0 : =13H                cntrls	equ	13h		;control-s
      36/       0 : =15H                cntrlu	equ	15h		;control-u
      37/       0 : =18H                cntrlx	equ	18h		;control-x
      38/       0 : =1AH                cntrlz	equ	1ah		;control-z (end-of-file mark)
      39/       0 : =7FH                del	equ	7FH		;rubout
      40/       0 :                     ;
      41/       0 :                     ;   Set origin for CP/M
      42/       0 :                     ;
      43/    C000 :                     	org	0c000h
      44/    C000 :                     ;
      45/    C000 : C3 2F C3            cbase	jp	command		;execute command processor (ccp).
      46/    C003 : C3 2B C3            	jp	clearbuf	;entry to empty input buffer before starting ccp.
      47/    C006 :                     
      48/    C006 :                     ;
      49/    C006 :                     ;   Standard cp/m ccp input buffer. Format is (max length),
      50/    C006 :                     ; (actual length), (char #1), (char #2), (char #3), etc.
      51/    C006 :                     ;
      52/    C006 : 7F                  inbuff	db	127		;length of input buffer.
      53/    C007 : 00                  	db	0		;current length of contents.
      54/    C008 : 43 6F 70 79 72 69   	db	"Copyright"
                    67 68 74 
      55/    C011 : 20 31 39 37 39 20   	db	" 1979 (c) by Digital Research      "
                    28 63 29 20 62 79 
                    20 44 69 67 69 74 
                    61 6C 20 52 65 73 
                    65 61 72 63 68 20 
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 2 - 2/2/2018 12:56:16


                    20 20 20 20 20 
      56/    C034 : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
      57/    C040 : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 
      58/    C04B : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
      59/    C057 : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 
      60/    C062 : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 
      61/    C06F : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
      62/    C07B : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 
      63/    C088 : 08 C0               inpoint dw	inbuff+2	;input line pointer
      64/    C08A : 00 00               namepnt dw	0		;input line pointer used for error message. Points to
      65/    C08C :                     ;			;start of name in error.
      66/    C08C :                     ;
      67/    C08C :                     ;   Routine to print (A) on the console. All registers used.
      68/    C08C :                     ;
      69/    C08C : 5F                  print	ld	e,a		;setup bdos call.
      70/    C08D : 0E 02               	ld	c,2
      71/    C08F : C3 05 00            	jp	entry
      72/    C092 :                     ;
      73/    C092 :                     ;   Routine to print (A) on the console and to save (BC).
      74/    C092 :                     ;
      75/    C092 : C5                  printb	push	bc
      76/    C093 : CD 8C C0            	call	print
      77/    C096 : C1                  	pop	bc
      78/    C097 : C9                  	ret	
      79/    C098 :                     ;
      80/    C098 :                     ;   Routine to send a carriage return, line feed combination
      81/    C098 :                     ; to the console.
      82/    C098 :                     ;
      83/    C098 : 3E 0D               crlf	ld	a,cr
      84/    C09A : CD 92 C0            	call	printb
      85/    C09D : 3E 0A               	ld	a,lf
      86/    C09F : 18 F1               	jr	printb
      87/    C0A1 :                     ;
      88/    C0A1 :                     ;   Routine to send one space to the console and save (BC).
      89/    C0A1 :                     ;
      90/    C0A1 : 3E 20               space	ld	a,' '
      91/    C0A3 : 18 ED               	jr	printb
      92/    C0A5 :                     ;
      93/    C0A5 :                     ;   Routine to print character string pointed to be (BC) on the
      94/    C0A5 :                     ; console. It must terminate with a null byte.
      95/    C0A5 :                     ;
      96/    C0A5 : C5                  pline	push	bc
      97/    C0A6 : CD 98 C0            	call	crlf
      98/    C0A9 : E1                  	pop	hl
      99/    C0AA : 7E                  pline2	ld	a,(hl)
     100/    C0AB : B7                  	or	a
     101/    C0AC : C8                  	ret	z
     102/    C0AD : 23                  	inc	hl
     103/    C0AE : E5                  	push	hl
     104/    C0AF : CD 8C C0            	call	print
     105/    C0B2 : E1                  	pop	hl
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 3 - 2/2/2018 12:56:16


     106/    C0B3 : 18 F5               	jr	pline2
     107/    C0B5 :                     ;
     108/    C0B5 :                     ;   Routine to reset the disk system.
     109/    C0B5 :                     ;
     110/    C0B5 : 0E 0D               resdsk	ld	c,13
     111/    C0B7 : C3 05 00            	jp	entry
     112/    C0BA :                     ;
     113/    C0BA :                     ;   Routine to select disk (A).
     114/    C0BA :                     ;
     115/    C0BA : 5F                  dsksel	ld	e,a
     116/    C0BB : 0E 0E               	ld	c,14
     117/    C0BD : C3 05 00            	jp	entry
     118/    C0C0 :                     ;
     119/    C0C0 :                     ;   Routine to call bdos and save the return code. The zero
     120/    C0C0 :                     ; flag is set on a return of 0ffh.
     121/    C0C0 :                     ;
     122/    C0C0 : CD 05 00            entry1	call	entry
     123/    C0C3 : 32 96 C7            	ld	(rtncode),A	;save return code.
     124/    C0C6 : 3C                  	inc	a		;set zero if 0ffh returned.
     125/    C0C7 : C9                  	ret	
     126/    C0C8 :                     ;
     127/    C0C8 :                     ;   Routine to open a file. (DE) must point to the FCB.
     128/    C0C8 :                     ;
     129/    C0C8 : 0E 0F               open	ld	c,15
     130/    C0CA : 18 F4               	jr	entry1
     131/    C0CC :                     ;
     132/    C0CC :                     ;   Routine to open file at (FCB).
     133/    C0CC :                     ;
     134/    C0CC : AF                  openfcb xor	a		;clear the record number byte at fcb+32
     135/    C0CD : 32 95 C7            	ld	(fcb+32),a
     136/    C0D0 : 11 75 C7            	ld	de,fcb
     137/    C0D3 : 18 F3               	jr	open
     138/    C0D5 :                     ;
     139/    C0D5 :                     ;   Routine to close a file. (DE) points to FCB.
     140/    C0D5 :                     ;
     141/    C0D5 : 0E 10               close	ld	c,16
     142/    C0D7 : 18 E7               	jr	entry1
     143/    C0D9 :                     ;
     144/    C0D9 :                     ;   Routine to search for the first file with ambigueous name
     145/    C0D9 :                     ; (DE).
     146/    C0D9 :                     ;
     147/    C0D9 : 0E 11               srchfst ld	c,17
     148/    C0DB : 18 E3               	jr	entry1
     149/    C0DD :                     ;
     150/    C0DD :                     ;   Search for the next ambigeous file name.
     151/    C0DD :                     ;
     152/    C0DD : 0E 12               srchnxt ld	c,18
     153/    C0DF : 18 DF               	jr	entry1
     154/    C0E1 :                     ;
     155/    C0E1 :                     ;   Search for file at (FCB).
     156/    C0E1 :                     ;
     157/    C0E1 : 11 75 C7            srchfcb ld	de,fcb
     158/    C0E4 : 18 F3               	jr	srchfst
     159/    C0E6 :                     ;
     160/    C0E6 :                     ;   Routine to delete a file pointed to by (DE).
     161/    C0E6 :                     ;
     162/    C0E6 : 0E 13               delete	ld	c,19
     163/    C0E8 : C3 05 00            	jp	entry
     164/    C0EB :                     ;
     165/    C0EB :                     ;   Routine to call the bdos and set the zero flag if a zero
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 4 - 2/2/2018 12:56:16


     166/    C0EB :                     ; status is returned.
     167/    C0EB :                     ;
     168/    C0EB : CD 05 00            entry2	call	entry
     169/    C0EE : B7                  	or	a		;set zero flag if appropriate.
     170/    C0EF : C9                  	ret	
     171/    C0F0 :                     ;
     172/    C0F0 :                     ;   Routine to read the next record from a sequential file.
     173/    C0F0 :                     ; (DE) points to the FCB.
     174/    C0F0 :                     ;
     175/    C0F0 : 0E 14               rdrec	ld	c,20
     176/    C0F2 : 18 F7               	jr	entry2
     177/    C0F4 :                     ;
     178/    C0F4 :                     ;   Routine to read file at (FCB).
     179/    C0F4 :                     ;
     180/    C0F4 : 11 75 C7            readfcb ld	de,fcb
     181/    C0F7 : 18 F7               	jr	rdrec
     182/    C0F9 :                     ;
     183/    C0F9 :                     ;   Routine to write the next record of a sequential file.
     184/    C0F9 :                     ; (DE) points to the FCB.
     185/    C0F9 :                     ;
     186/    C0F9 : 0E 15               wrtrec	ld	c,21
     187/    C0FB : 18 EE               	jr	entry2
     188/    C0FD :                     ;
     189/    C0FD :                     ;   Routine to create the file pointed to by (DE).
     190/    C0FD :                     ;
     191/    C0FD : 0E 16               create 	ld	c,22
     192/    C0FF : C3 C0 C0            	jp	entry1
     193/    C102 :                     ;
     194/    C102 :                     ;   Routine to rename the file pointed to by (DE). Note that
     195/    C102 :                     ; the new name starts at (DE+16).
     196/    C102 :                     ;
     197/    C102 : 0E 17               renam	ld	c,23
     198/    C104 : C3 05 00            	jp	entry
     199/    C107 :                     ;
     200/    C107 :                     ;   Get the current user code.
     201/    C107 :                     ;
     202/    C107 : 1E FF               getusr	ld	e,0ffh
     203/    C109 :                     ;
     204/    C109 :                     ;   Routne to get or set the current user code.
     205/    C109 :                     ; If (E) is FF then this is a GET, else it is a SET.
     206/    C109 :                     ;
     207/    C109 :                     getsetuc
     208/    C109 : 0E 20               	ld	c,32
     209/    C10B : C3 05 00            	jp	entry
     210/    C10E :                     ;
     211/    C10E :                     ;   Routine to set the current drive byte at (TDRIVE).
     212/    C10E :                     ;
     213/    C10E : CD 07 C1            setcdrv call	getusr		;get user number
     214/    C111 : 87                  	add	a,a		;and shift into the upper 4 bits.
     215/    C112 : 87                  	add	a,a
     216/    C113 : 87                  	add	a,a
     217/    C114 : 87                  	add	a,a
     218/    C115 : 21 97 C7            	ld	hl,cdrive	;now add in the current drive number.
     219/    C118 : B6                  	or	(hl)
     220/    C119 : 32 04 00            	ld	(tdrive),a	;and save.
     221/    C11C : C9                  	ret	
     222/    C11D :                     ;
     223/    C11D :                     ;   Move currently active drive down to (TDRIVE).
     224/    C11D :                     ;
     225/    C11D : 3A 97 C7            movecd	ld	a,(cdrive)
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 5 - 2/2/2018 12:56:16


     226/    C120 : 32 04 00            	ld	(tdrive),a
     227/    C123 : C9                  	ret	
     228/    C124 :                     ;
     229/    C124 :                     ;   Routine to convert (A) into upper case ascii. Only letters
     230/    C124 :                     ; are affected.
     231/    C124 :                     ;
     232/    C124 : FE 41               upper	cp	'A'		;check for letters in the range of 'a' to 'z'.
     233/    C126 : D8                  	ret	c
     234/    C127 : FE 7B               	cp	'{'
     235/    C129 : D0                  	ret	nc
     236/    C12A : E6 5F               	and	5fh		;convert it if found.
     237/    C12C : C9                  	ret	
     238/    C12D :                     ;
     239/    C12D :                     ;   Routine to get a line of input. We must check to see if the
     240/    C12D :                     ; user is in (BATCH) mode. If so, then read the input from file
     241/    C12D :                     ; ($$$.SUB). At the end, reset to console input.
     242/    C12D :                     ;
     243/    C12D : 3A 53 C7            getinp	ld	a,(batch)	;if =0, then use console input.
     244/    C130 : B7                  	or	a
     245/    C131 : CA 89 C1            	jp	z,getinp1
     246/    C134 :                     ;
     247/    C134 :                     ;   Use the submit file ($$$.sub) which is prepared by a
     248/    C134 :                     ; SUBMIT run. It must be on drive (A) and it will be deleted
     249/    C134 :                     ; if and error occures (like eof).
     250/    C134 :                     ;
     251/    C134 : 3A 97 C7            	ld	a,(cdrive)	;select drive 0 if need be.
     252/    C137 : B7                  	or	a
     253/    C138 : 3E 00               	ld	a,0		;always use drive A for submit.
     254/    C13A : C4 BA C0            	call	nz,dsksel	;select it if required.
     255/    C13D : 11 54 C7            	ld	de,batchfcb
     256/    C140 : CD C8 C0            	call	open		;look for it.
     257/    C143 : CA 89 C1            	jp	z,getinp1	;if not there, use normal input.
     258/    C146 : 3A 63 C7            	ld	a,(batchfcb+15)	;get last record number+1.
     259/    C149 : 3D                  	dec	a
     260/    C14A : 32 74 C7            	ld	(batchfcb+32),a
     261/    C14D : 11 54 C7            	ld	de,batchfcb
     262/    C150 : CD F0 C0            	call	rdrec		;read last record.
     263/    C153 : C2 89 C1            	jp	nz,getinp1	;quit on end of file.
     264/    C156 :                     ;
     265/    C156 :                     ;   Move this record into input buffer.
     266/    C156 :                     ;
     267/    C156 : 11 07 C0            	ld	de,inbuff+1
     268/    C159 : 21 80 00            	ld	hl,tbuff	;data was read into buffer here.
     269/    C15C : 06 80               	ld	b,128		;all 128 characters may be used.
     270/    C15E : CD 11 C4            	call	hl2de		;(HL) to (DE), (B) bytes.
     271/    C161 : 21 62 C7            	ld	hl,batchfcb+14
     272/    C164 : 36 00               	ld	(hl),0		;zero out the 's2' byte.
     273/    C166 : 23                  	inc	hl		;and decrement the record count.
     274/    C167 : 35                  	dec	(hl)
     275/    C168 : 11 54 C7            	ld	de,batchfcb	;close the batch file now.
     276/    C16B : CD D5 C0            	call	close
     277/    C16E : CA 89 C1            	jp	z,getinp1	;quit on an error.
     278/    C171 : 3A 97 C7            	ld	a,(cdrive)	;re-select previous drive if need be.
     279/    C174 : B7                  	or	a
     280/    C175 : C4 BA C0            	call	nz,dsksel	;don't do needless selects.
     281/    C178 :                     ;
     282/    C178 :                     ;   Print line just read on console.
     283/    C178 :                     ;
     284/    C178 : 21 08 C0            	ld	hl,inbuff+2
     285/    C17B : CD AA C0            	call	pline2
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 6 - 2/2/2018 12:56:16


     286/    C17E : CD B3 C1            	call	chkcon		;check console, quit on a key.
     287/    C181 : 28 17               	jr	z,getinp2	;jump if no key is pressed.
     288/    C183 :                     ;
     289/    C183 :                     ;   Terminate the submit job on any keyboard input. Delete this
     290/    C183 :                     ; file such that it is not re-started and jump to normal keyboard
     291/    C183 :                     ; input section.
     292/    C183 :                     ;
     293/    C183 : CD CE C1            	call	delbatch	;delete the batch file.
     294/    C186 : C3 54 C3            	jp	cmmnd1		;and restart command input.
     295/    C189 :                     ;
     296/    C189 :                     ;   Get here for normal keyboard input. Delete the submit file
     297/    C189 :                     ; incase there was one.
     298/    C189 :                     ;
     299/    C189 : CD CE C1            getinp1	call	delbatch	;delete file ($$$.sub).
     300/    C18C : CD 0E C1            	call	setcdrv		;reset active disk.
     301/    C18F : 0E 0A               	ld	c,10		;get line from console device.
     302/    C191 : 11 06 C0            	ld	de,inbuff
     303/    C194 : CD 05 00            	call	entry
     304/    C197 : CD 1D C1            	call	movecd		;reset current drive (again).
     305/    C19A :                     ;
     306/    C19A :                     ;   Convert input line to upper case.
     307/    C19A :                     ;
     308/    C19A : 21 07 C0            getinp2	ld	hl,inbuff+1
     309/    C19D : 46                  	ld	b,(hl)		;(B)=character counter.
     310/    C19E : 23                  getinp3 inc	hl
     311/    C19F : 78                  	ld	a,b		;end of the line?
     312/    C1A0 : B7                  	or	a
     313/    C1A1 : 28 08               	jr	z,getinp4
     314/    C1A3 : 7E                  	ld	a,(hl)		;convert to upper case.
     315/    C1A4 : CD 24 C1            	call	upper
     316/    C1A7 : 77                  	ld	(hl),a
     317/    C1A8 : 05                  	dec	b		;adjust character count.
     318/    C1A9 : 18 F3               	jr	getinp3
     319/    C1AB : 77                  getinp4 ld	(hl),a		;add trailing null.
     320/    C1AC : 21 08 C0            	ld	hl,inbuff+2
     321/    C1AF : 22 88 C0            	ld	(inpoint),hl	;reset input line pointer.
     322/    C1B2 : C9                  	ret	
     323/    C1B3 :                     ;
     324/    C1B3 :                     ;   Routine to check the console for a key pressed. The zero
     325/    C1B3 :                     ; flag is set is none, else the character is returned in (A).
     326/    C1B3 :                     ;
     327/    C1B3 : 0E 0B               chkcon	ld	c,11		;check console.
     328/    C1B5 : CD 05 00            	call	entry
     329/    C1B8 : B7                  	or	a
     330/    C1B9 : C8                  	ret	z		;return if nothing.
     331/    C1BA : 0E 01               	ld	c,1		;else get character.
     332/    C1BC : CD 05 00            	call	entry
     333/    C1BF : B7                  	or	a		;clear zero flag and return.
     334/    C1C0 : C9                  	ret	
     335/    C1C1 :                     ;
     336/    C1C1 :                     ;   Routine to get the currently active drive number.
     337/    C1C1 :                     ;
     338/    C1C1 : 0E 19               getdsk	ld	c,25
     339/    C1C3 : C3 05 00            	jp	entry
     340/    C1C6 :                     ;
     341/    C1C6 :                     ;   Set the standard dma address.
     342/    C1C6 :                     ;
     343/    C1C6 : 11 80 00            stddma	ld	de,tbuff
     344/    C1C9 :                     ;
     345/    C1C9 :                     ;   Routine to set the dma address to (DE).
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 7 - 2/2/2018 12:56:16


     346/    C1C9 :                     ;
     347/    C1C9 : 0E 1A               dmaset	ld	c,26
     348/    C1CB : C3 05 00            	jp	entry
     349/    C1CE :                     ;
     350/    C1CE :                     ;  Delete the batch file created by SUBMIT.
     351/    C1CE :                     ;
     352/    C1CE :                     delbatch
     353/    C1CE : 21 53 C7            	ld	hl,batch	;is batch active?
     354/    C1D1 : 7E                  	ld	a,(hl)
     355/    C1D2 : B7                  	or	a
     356/    C1D3 : C8                  	ret	z
     357/    C1D4 : 36 00               	ld	(hl),0		;yes, de-activate it.
     358/    C1D6 : AF                  	xor	a
     359/    C1D7 : CD BA C0            	call	dsksel		;select drive 0 for sure.
     360/    C1DA : 11 54 C7            	ld	de,batchfcb	;and delete this file.
     361/    C1DD : CD E6 C0            	call	delete
     362/    C1E0 : 3A 97 C7            	ld	a,(cdrive)	;reset current drive.
     363/    C1E3 : C3 BA C0            	jp	dsksel
     364/    C1E6 :                     ;
     365/    C1E6 :                     ;   Check to two strings at (PATTRN1) and (PATTRN2). They must be
     366/    C1E6 :                     ; the same or we halt....
     367/    C1E6 :                     ;
     368/    C1E6 : 11 00 C3            verify	ld	de,pattrn1	;these are the serial number bytes.
     369/    C1E9 : 21 A8 C7            	ld	hl,pattrn2	;ditto, but how could they be different?
     370/    C1EC : 06 06               	ld	b,6		;6 bytes each.
     371/    C1EE : 1A                  verify1	ld	a,(de)
     372/    C1EF : BE                  	cp	(hl)
     373/    C1F0 : C2 A1 C3            	jp	nz,halt		;jump to halt routine.
     374/    C1F3 : 13                  	inc	de
     375/    C1F4 : 23                  	inc	hl
     376/    C1F5 : 05                  	dec	b
     377/    C1F6 : 20 F6               	jr	nz,verify1
     378/    C1F8 : C9                  	ret	
     379/    C1F9 :                     ;
     380/    C1F9 :                     ;   Print back file name with a '?' to indicate a syntax error.
     381/    C1F9 :                     ;
     382/    C1F9 : CD 98 C0            synerr	call	crlf		;end current line.
     383/    C1FC : 2A 8A C0            	ld	hl,(namepnt)	;this points to name in error.
     384/    C1FF : 7E                  synerr1	ld	a,(hl)		;print it until a space or null is found.
     385/    C200 : FE 20               	cp	' '
     386/    C202 : 28 0B               	jr	z,synerr2
     387/    C204 : B7                  	or	a
     388/    C205 : 28 08               	jr	z,synerr2
     389/    C207 : E5                  	push	hl
     390/    C208 : CD 8C C0            	call	print
     391/    C20B : E1                  	pop	hl
     392/    C20C : 23                  	inc	hl
     393/    C20D : 18 F0               	jr	synerr1
     394/    C20F : 3E 3F               synerr2 ld	a,'?'		;add trailing '?'.
     395/    C211 : CD 8C C0            	call	print
     396/    C214 : CD 98 C0            	call	crlf
     397/    C217 : CD CE C1            	call	delbatch	;delete any batch file.
     398/    C21A : C3 54 C3            	jp	cmmnd1		;and restart from console input.
     399/    C21D :                     ;
     400/    C21D :                     ;   Check character at (DE) for legal command input. Note that the
     401/    C21D :                     ; zero flag is set if the character is a delimiter.
     402/    C21D :                     ;
     403/    C21D : 1A                  check	ld	a,(de)
     404/    C21E : B7                  	or	a
     405/    C21F : C8                  	ret	z
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 8 - 2/2/2018 12:56:16


     406/    C220 : FE 20               	cp	' '		;control characters are not legal here.
     407/    C222 : DA F9 C1            	jp	c,synerr
     408/    C225 : C8                  	ret	z		;check for valid delimiter.
     409/    C226 : FE 3D               	cp	'='
     410/    C228 : C8                  	ret	z
     411/    C229 : FE 5F               	cp	'_'
     412/    C22B : C8                  	ret	z
     413/    C22C : FE 2E               	cp	'.'
     414/    C22E : C8                  	ret	z
     415/    C22F : FE 3A               	cp	':'
     416/    C231 : C8                  	ret	z
     417/    C232 : FE 3B               	cp	03bh ; ';'
     418/    C234 : C8                  	ret	z
     419/    C235 : FE 3C               	cp	'<'
     420/    C237 : C8                  	ret	z
     421/    C238 : FE 3E               	cp	'>'
     422/    C23A : C8                  	ret	z
     423/    C23B : C9                  	ret	
     424/    C23C :                     ;
     425/    C23C :                     ;   Get the next non-blank character from (DE).
     426/    C23C :                     ;
     427/    C23C :                     nonblank
     428/    C23C : 1A                  	ld	a,(de)
     429/    C23D : B7                  	or	a		;string ends with a null.
     430/    C23E : C8                  	ret	z
     431/    C23F : FE 20               	cp	' '
     432/    C241 : C0                  	ret	nz
     433/    C242 : 13                  	inc	de
     434/    C243 : 18 F7               	jr	nonblank
     435/    C245 :                     ;
     436/    C245 :                     ;   Add (HL)=(HL)+(A)
     437/    C245 :                     ;
     438/    C245 : 85                  addhl	add	a,l
     439/    C246 : 6F                  	ld	l,a
     440/    C247 : D0                  	ret	nc		;take care of any carry.
     441/    C248 : 24                  	inc	h
     442/    C249 : C9                  	ret	
     443/    C24A :                     ;
     444/    C24A :                     ;   Convert the first name in (FCB).
     445/    C24A :                     ;
     446/    C24A : 3E 00               convfst ld	a,0
     447/    C24C :                     ;
     448/    C24C :                     ;   Format a file name (convert * to '?', etc.). On return,
     449/    C24C :                     ; (A)=0 is an unambigeous name was specified. Enter with (A) equal to
     450/    C24C :                     ; the position within the fcb for the name (either 0 or 16).
     451/    C24C :                     ;
     452/    C24C : 21 75 C7            convert ld	hl,fcb
     453/    C24F : CD 45 C2            	call	addhl
     454/    C252 : E5                  	push	hl
     455/    C253 : E5                  	push	hl
     456/    C254 : AF                  	xor	a
     457/    C255 : 32 98 C7            	ld	(chgdrv),a	;initialize drive change flag.
     458/    C258 : 2A 88 C0            	ld	hl,(inpoint)	;set (HL) as pointer into input line.
     459/    C25B : EB                  	ex	de,hl
     460/    C25C : CD 3C C2            	call	nonblank	;get next non-blank character.
     461/    C25F : EB                  	ex	de,hl
     462/    C260 : 22 8A C0            	ld	(namepnt),hl	;save pointer here for any error message.
     463/    C263 : EB                  	ex	de,hl
     464/    C264 : E1                  	pop	hl
     465/    C265 : 1A                  	ld	a,(de)		;get first character.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 9 - 2/2/2018 12:56:16


     466/    C266 : B7                  	or	a
     467/    C267 : 28 0A               	jr	z,convrt1
     468/    C269 : DE 40               	sbc	a,'A'-1		;might be a drive name, convert to binary.
     469/    C26B : 47                  	ld	b,a		;and save.
     470/    C26C : 13                  	inc	de		;check next character for a ':'.
     471/    C26D : 1A                  	ld	a,(de)
     472/    C26E : FE 3A               	cp	':'
     473/    C270 : 28 07               	jr	z,convrt2
     474/    C272 : 1B                  	dec	de		;nope, move pointer back to the start of the line.
     475/    C273 : 3A 97 C7            convrt1 ld	a,(cdrive)
     476/    C276 : 77                  	ld	(hl),a
     477/    C277 : 18 06               	jr	convrt3
     478/    C279 : 78                  convrt2 ld	a,b
     479/    C27A : 32 98 C7            	ld	(chgdrv),a	;set change in drives flag.
     480/    C27D : 70                  	ld	(hl),b
     481/    C27E : 13                  	inc	de
     482/    C27F :                     ;
     483/    C27F :                     ;   Convert the basic file name.
     484/    C27F :                     ;
     485/    C27F : 06 08               convrt3 ld	b,08h
     486/    C281 : CD 1D C2            convrt4 call	check
     487/    C284 : 28 16               	jr	z,convrt8
     488/    C286 : 23                  	inc	hl
     489/    C287 : FE 2A               	cp	'*'		;note that an '*' will fill the remaining
     490/    C289 : 20 04               	jr	nz,convrt5	;field with '?'.
     491/    C28B : 36 3F               	ld	(hl),'?'
     492/    C28D : 18 02               	jr	convrt6
     493/    C28F : 77                  convrt5 ld	(hl),a
     494/    C290 : 13                  	inc	de
     495/    C291 : 05                  convrt6 dec	b
     496/    C292 : 20 ED               	jr	nz,convrt4
     497/    C294 : CD 1D C2            CONVRT7 call	check		;get next delimiter.
     498/    C297 : 28 09               	jr	z,getext
     499/    C299 : 13                  	inc	de
     500/    C29A : 18 F8               	jr	convrt7
     501/    C29C : 23                  convrt8 inc	hl		;blank fill the file name.
     502/    C29D : 36 20               	ld	(hl),' '
     503/    C29F : 05                  	dec	b
     504/    C2A0 : 20 FA               	jr	nz,convrt8
     505/    C2A2 :                     ;
     506/    C2A2 :                     ;   Get the extension and convert it.
     507/    C2A2 :                     ;
     508/    C2A2 : 06 03               getext	ld	b,03h
     509/    C2A4 : FE 2E               	cp	'.'
     510/    C2A6 : 20 1D               	jr	nz,getext5
     511/    C2A8 : 13                  	inc	de
     512/    C2A9 : CD 1D C2            getext1 call	check
     513/    C2AC : 28 17               	jr	z,getext5
     514/    C2AE : 23                  	inc	hl
     515/    C2AF : FE 2A               	cp	'*'
     516/    C2B1 : 20 04               	jr	nz,getext2
     517/    C2B3 : 36 3F               	ld	(hl),'?'
     518/    C2B5 : 18 02               	jr	getext3
     519/    C2B7 : 77                  getext2 ld	(hl),a
     520/    C2B8 : 13                  	inc	de
     521/    C2B9 : 05                  getext3 dec	b
     522/    C2BA : 20 ED               	jr	nz,getext1
     523/    C2BC : CD 1D C2            getext4 call	check
     524/    C2BF : CA CB C2            	jp	z,getext6
     525/    C2C2 : 13                  	inc	de
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 10 - 2/2/2018 12:56:16


     526/    C2C3 : 18 F7               	jr	getext4
     527/    C2C5 : 23                  getext5 inc	hl
     528/    C2C6 : 36 20               	ld	(hl),' '
     529/    C2C8 : 05                  	dec	b
     530/    C2C9 : 20 FA               	jr	nz,getext5
     531/    C2CB : 06 03               getext6 ld	b,3
     532/    C2CD : 23                  getext7 inc	hl
     533/    C2CE : 36 00               	ld	(hl),0
     534/    C2D0 : 05                  	dec	b
     535/    C2D1 : 20 FA               	jr	nz,getext7
     536/    C2D3 : EB                  	ex	de,hl
     537/    C2D4 : 22 88 C0            	ld	(inpoint),hl	;save input line pointer.
     538/    C2D7 : E1                  	pop	hl
     539/    C2D8 :                     ;
     540/    C2D8 :                     ;   Check to see if this is an ambigeous file name specification.
     541/    C2D8 :                     ; Set the (A) register to non zero if it is.
     542/    C2D8 :                     ;
     543/    C2D8 : 01 0B 00            	ld	bc,11		;set name length.
     544/    C2DB : 23                  getext8 inc	hl
     545/    C2DC : 7E                  	ld	a,(hl)
     546/    C2DD : FE 3F               	cp	'?'		;any question marks?
     547/    C2DF : 20 01               	jr	nz,getext9
     548/    C2E1 : 04                  	inc	b		;count them.
     549/    C2E2 : 0D                  getext9 dec	c
     550/    C2E3 : 20 F6               	jr	nz,getext8
     551/    C2E5 : 78                  	ld	a,b
     552/    C2E6 : B7                  	or	a
     553/    C2E7 : C9                  	ret	
     554/    C2E8 :                     ;
     555/    C2E8 :                     ;   CP/M command table. Note commands can be either 3 or 4 characters long.
     556/    C2E8 :                     ;
     557/    C2E8 : =6H                 numcmds equ	6		;number of commands
     558/    C2E8 : 44 49 52 20         cmdtbl	db	"DIR "
     559/    C2EC : 45 52 41 20         	db	"ERA "
     560/    C2F0 : 54 59 50 45         	db	"TYPE"
     561/    C2F4 : 53 41 56 45         	db	"SAVE"
     562/    C2F8 : 52 45 4E 20         	db	"REN "
     563/    C2FC : 55 53 45 52         	db	"USER"
     564/    C300 :                     ;
     565/    C300 :                     ;   The following six bytes must agree with those at (PATTRN2)
     566/    C300 :                     ; or cp/m will HALT. Why?
     567/    C300 :                     ;
     568/    C300 : 00 16 00 00 00 00   pattrn1 db	0,22,0,0,0,0	;(* serial number bytes *).
     569/    C306 :                     ;
     570/    C306 :                     ;   Search the command table for a match with what has just
     571/    C306 :                     ; been entered. If a match is found, then we jump to the
     572/    C306 :                     ; proper section. Else jump to (UNKNOWN).
     573/    C306 :                     ; On return, the (C) register is set to the command number
     574/    C306 :                     ; that matched (or NUMCMDS+1 if no match).
     575/    C306 :                     ;
     576/    C306 : 21 E8 C2            search	ld	hl,cmdtbl
     577/    C309 : 0E 00               	ld	c,0
     578/    C30B : 79                  search1 ld	a,c
     579/    C30C : FE 06               	cp	numcmds		;this commands exists.
     580/    C30E : D0                  	ret	nc
     581/    C30F : 11 76 C7            	ld	de,fcb+1	;check this one.
     582/    C312 : 06 04               	ld	b,4		;max command length.
     583/    C314 : 1A                  search2 ld	a,(de)
     584/    C315 : BE                  	cp	(hl)
     585/    C316 : 20 0C               	jr	nz,search3	;not a match.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 11 - 2/2/2018 12:56:16


     586/    C318 : 13                  	inc	de
     587/    C319 : 23                  	inc	hl
     588/    C31A : 05                  	dec	b
     589/    C31B : 20 F7               	jr	nz,search2
     590/    C31D : 1A                  	ld	a,(de)		;allow a 3 character command to match.
     591/    C31E : FE 20               	cp	' '
     592/    C320 : 20 06               	jr	nz,search4
     593/    C322 : 79                  	ld	a,c		;set return register for this command.
     594/    C323 : C9                  	ret	
     595/    C324 : 23                  search3 inc	hl
     596/    C325 : 05                  	dec	b
     597/    C326 : 20 FC               	jr	nz,search3
     598/    C328 : 0C                  search4 inc	c
     599/    C329 : 18 E0               	jr	search1
     600/    C32B :                     ;
     601/    C32B :                     ;   Set the input buffer to empty and then start the command
     602/    C32B :                     ; processor (ccp).
     603/    C32B :                     ;
     604/    C32B :                     clearbuf
     605/    C32B : AF                  	xor	a
     606/    C32C : 32 07 C0            	ld	(inbuff+1),a	;second byte is actual length.
     607/    C32F :                     ;
     608/    C32F :                     ;**************************************************************
     609/    C32F :                     ;*
     610/    C32F :                     ;*
     611/    C32F :                     ;* C C P  -   C o n s o l e   C o m m a n d   P r o c e s s o r
     612/    C32F :                     ;*
     613/    C32F :                     ;**************************************************************
     614/    C32F :                     ;*
     615/    C32F : 31 53 C7            command ld	sp,ccpstack	;setup stack area.
     616/    C332 : C5                  	push	bc		;note that (C) should be equal to:
     617/    C333 : 79                  	ld	a,c		;(uuuudddd) where 'uuuu' is the user number
     618/    C334 : 1F                  	rra			;and 'dddd' is the drive number.
     619/    C335 : 1F                  	rra	
     620/    C336 : 1F                  	rra	
     621/    C337 : 1F                  	rra	
     622/    C338 : E6 0F               	and	0fh		;isolate the user number.
     623/    C33A : 5F                  	ld	e,a
     624/    C33B : CD 09 C1            	call	getsetuc	;and set it.
     625/    C33E : CD B5 C0            	call	resdsk		;reset the disk system.
     626/    C341 : 32 53 C7            	ld	(batch),a	;clear batch mode flag.
     627/    C344 : C1                  	pop	bc
     628/    C345 : 79                  	ld	a,c
     629/    C346 : E6 0F               	and	0fh		;isolate the drive number.
     630/    C348 : 32 97 C7            	ld	(cdrive),a	;and save.
     631/    C34B : CD BA C0            	call	dsksel		;...and select.
     632/    C34E : 3A 07 C0            	ld	a,(inbuff+1)
     633/    C351 : B7                  	or	a		;anything in input buffer already?
     634/    C352 : 20 16               	jr	nz,cmmnd2	;yes, we just process it.
     635/    C354 :                     ;
     636/    C354 :                     ;   Entry point to get a command line from the console.
     637/    C354 :                     ;
     638/    C354 : 31 53 C7            cmmnd1	ld	sp,ccpstack	;set stack straight.
     639/    C357 : CD 98 C0            	call	crlf		;start a new line on the screen.
     640/    C35A : CD C1 C1            	call	getdsk		;get current drive.
     641/    C35D : C6 41               	add	a,'A'
     642/    C35F : CD 8C C0            	call	print		;print current drive.
     643/    C362 : 3E 3E               	ld	a,'>'
     644/    C364 : CD 8C C0            	call	print		;and add prompt.
     645/    C367 : CD 2D C1            	call	getinp		;get line from user.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 12 - 2/2/2018 12:56:16


     646/    C36A :                     ;
     647/    C36A :                     ;   Process command line here.
     648/    C36A :                     ;
     649/    C36A : 11 80 00            cmmnd2	ld	de,tbuff
     650/    C36D : CD C9 C1            	call	dmaset		;set standard dma address.
     651/    C370 : CD C1 C1            	call	getdsk
     652/    C373 : 32 97 C7            	ld	(cdrive),a	;set current drive.
     653/    C376 : CD 4A C2            	call	convfst		;convert name typed in.
     654/    C379 : C4 F9 C1            	call	nz,synerr	;wild cards are not allowed.
     655/    C37C : 3A 98 C7            	ld	a,(chgdrv)	;if a change in drives was indicated,
     656/    C37F : B7                  	or	a		;then treat this as an unknown command
     657/    C380 : C2 56 C6            	jp	nz,unknown	;which gets executed.
     658/    C383 : CD 06 C3            	call	search		;else search command table for a match.
     659/    C386 :                     ;
     660/    C386 :                     ;   Note that an unknown command returns
     661/    C386 :                     ; with (A) pointing to the last address
     662/    C386 :                     ; in our table which is (UNKNOWN).
     663/    C386 :                     ;
     664/    C386 : 21 93 C3            	ld	hl,cmdadr	;now, look thru our address table for command (A).
     665/    C389 : 5F                  	ld	e,a		;set (DE) to command number.
     666/    C38A : 16 00               	ld	d,0
     667/    C38C : 19                  	add	hl,de
     668/    C38D : 19                  	add	hl,de		;(HL)=(CMDADR)+2*(command number).
     669/    C38E : 7E                  	ld	a,(hl)		;now pick out this address.
     670/    C38F : 23                  	inc	hl
     671/    C390 : 66                  	ld	h,(hl)
     672/    C391 : 6F                  	ld	l,a
     673/    C392 : E9                  	jp	(hl)		;now execute it.
     674/    C393 :                     ;
     675/    C393 :                     ;   CP/M command address table.
     676/    C393 :                     ;
     677/    C393 : 45 C4 E0 C4 1D C5   cmdadr	dw	direct,erase,type,save
                    6A C5 
     678/    C39B : C8 C5 3F C6 56 C6   	dw	rename,user,unknown
     679/    C3A1 :                     ;
     680/    C3A1 :                     ;   Halt the system. Reason for this is unknown at present.
     681/    C3A1 :                     ;
     682/    C3A1 : 21 F3 76            halt	ld	hl,76f3h	;'DI HLT' instructions.
     683/    C3A4 : 22 00 C0            	ld	(cbase),hl
     684/    C3A7 : 21 00 C0            	ld	hl,cbase
     685/    C3AA : E9                  	jp	(hl)
     686/    C3AB :                     ;
     687/    C3AB :                     ;   Read error while TYPEing a file.
     688/    C3AB :                     ;
     689/    C3AB : 01 B1 C3            rderror ld	bc,rderr
     690/    C3AE : C3 A5 C0            	jp	pline
     691/    C3B1 : 52 65 61 64 20 65   rderr 	db	"Read error"
                    72 72 6F 72 
     692/    C3BB : 00                  	db	0
     693/    C3BC :                     ;
     694/    C3BC :                     ;   Required file was not located.
     695/    C3BC :                     ;
     696/    C3BC : 01 C2 C3            none	ld	bc,nofile
     697/    C3BF : C3 A5 C0            	jp	pline
     698/    C3C2 : 4E 6F 20 66 69 6C   nofile	db	"No file"
                    65 
     699/    C3C9 : 00                  	db	0
     700/    C3CA :                     ;
     701/    C3CA :                     ;   Decode a command of the form 'A>filename number{ filename}.
     702/    C3CA :                     ; Note that a drive specifier is not allowed on the first file
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 13 - 2/2/2018 12:56:16


     703/    C3CA :                     ; name. On return, the number is in register (A). Any error
     704/    C3CA :                     ; causes 'filename?' to be printed and the command is aborted.
     705/    C3CA :                     ;
     706/    C3CA : CD 4A C2            decode	call	convfst		;convert filename.
     707/    C3CD : 3A 98 C7            	ld	a,(chgdrv)	;do not allow a drive to be specified.
     708/    C3D0 : B7                  	or	a
     709/    C3D1 : C2 F9 C1            	jp	nz,synerr
     710/    C3D4 : 21 76 C7            	ld	hl,fcb+1	;convert number now.
     711/    C3D7 : 01 0B 00            	ld	bc,11		;(B)=sum register, (C)=max digit count.
     712/    C3DA : 7E                  decode1 ld	a,(hl)
     713/    C3DB : FE 20               	cp	' '		;a space terminates the numeral.
     714/    C3DD : 28 24               	jr	z,decode3
     715/    C3DF : 23                  	inc	hl
     716/    C3E0 : D6 30               	sub	'0'		;make binary from ascii.
     717/    C3E2 : FE 0A               	cp	10		;legal digit?
     718/    C3E4 : D2 F9 C1            	jp	nc,synerr
     719/    C3E7 : 57                  	ld	d,a		;yes, save it in (D).
     720/    C3E8 : 78                  	ld	a,b		;compute (B)=(B)*10 and check for overflow.
     721/    C3E9 : E6 E0               	and	0e0h
     722/    C3EB : C2 F9 C1            	jp	nz,synerr
     723/    C3EE : 78                  	ld	a,b
     724/    C3EF : 07                  	rlca	
     725/    C3F0 : 07                  	rlca	
     726/    C3F1 : 07                  	rlca			;(A)=(B)*8
     727/    C3F2 : 80                  	add	a,b		;.......*9
     728/    C3F3 : DA F9 C1            	jp	c,synerr
     729/    C3F6 : 80                  	add	a,b		;.......*10
     730/    C3F7 : DA F9 C1            	jp	c,synerr
     731/    C3FA : 82                  	add	a,d		;add in new digit now.
     732/    C3FB : DA F9 C1            decode2 jp	c,synerr
     733/    C3FE : 47                  	ld	b,a		;and save result.
     734/    C3FF : 0D                  	dec	c		;only look at 11 digits.
     735/    C400 : 20 D8               	jr	nz,decode1
     736/    C402 : C9                  	ret	
     737/    C403 : 7E                  decode3 ld	a,(hl)		;spaces must follow (why?).
     738/    C404 : FE 20               	cp	' '
     739/    C406 : C2 F9 C1            	jp	nz,synerr
     740/    C409 : 23                  	inc	hl
     741/    C40A : 0D                  decode4:dec	c
     742/    C40B : 20 F6               	jr	nz,decode3
     743/    C40D : 78                  	ld	a,b		;set (A)=the numeric value entered.
     744/    C40E : C9                  	ret	
     745/    C40F :                     ;
     746/    C40F :                     ;   Move 3 bytes from (HL) to (DE). Note that there is only
     747/    C40F :                     ; one reference to this at (A2D5h).
     748/    C40F :                     ;
     749/    C40F : 06 03               move3	ld	b,3
     750/    C411 :                     ;
     751/    C411 :                     ;   Move (B) bytes from (HL) to (DE).
     752/    C411 :                     ;
     753/    C411 : 7E                  hl2de	ld	a,(hl)
     754/    C412 : 12                  	ld	(de),a
     755/    C413 : 23                  	inc	hl
     756/    C414 : 13                  	inc	de
     757/    C415 : 05                  	dec	b
     758/    C416 : 20 F9               	jr	nz,hl2de
     759/    C418 : C9                  	ret	
     760/    C419 :                     ;
     761/    C419 :                     ;   Compute (HL)=(TBUFF)+(A)+(C) and get the byte that's here.
     762/    C419 :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 14 - 2/2/2018 12:56:16


     763/    C419 : 21 80 00            extract ld	hl,tbuff
     764/    C41C : 81                  	add	a,c
     765/    C41D : CD 45 C2            	call	addhl
     766/    C420 : 7E                  	ld	a,(hl)
     767/    C421 : C9                  	ret	
     768/    C422 :                     ;
     769/    C422 :                     ;  Check drive specified. If it means a change, then the new
     770/    C422 :                     ; drive will be selected. In any case, the drive byte of the
     771/    C422 :                     ; fcb will be set to null (means use current drive).
     772/    C422 :                     ;
     773/    C422 : AF                  dselect xor	a		;null out first byte of fcb.
     774/    C423 : 32 75 C7            	ld	(fcb),a
     775/    C426 : 3A 98 C7            	ld	a,(chgdrv)	;a drive change indicated?
     776/    C429 : B7                  	or	a
     777/    C42A : C8                  	ret	z
     778/    C42B : 3D                  	dec	a		;yes, is it the same as the current drive?
     779/    C42C : 21 97 C7            	ld	hl,cdrive
     780/    C42F : BE                  	cp	(hl)
     781/    C430 : C8                  	ret	z
     782/    C431 : C3 BA C0            	jp	dsksel		;no. Select it then.
     783/    C434 :                     ;
     784/    C434 :                     ;   Check the drive selection and reset it to the previous
     785/    C434 :                     ; drive if it was changed for the preceeding command.
     786/    C434 :                     ;
     787/    C434 : 3A 98 C7            resetdr ld	a,(chgdrv)	;drive change indicated?
     788/    C437 : B7                  	or	a
     789/    C438 : C8                  	ret	z
     790/    C439 : 3D                  	dec	a		;yes, was it a different drive?
     791/    C43A : 21 97 C7            	ld	hl,cdrive
     792/    C43D : BE                  	cp	(hl)
     793/    C43E : C8                  	ret	z
     794/    C43F : 3A 97 C7            	ld	a,(cdrive)	;yes, re-select our old drive.
     795/    C442 : C3 BA C0            	jp	dsksel
     796/    C445 :                     ;
     797/    C445 :                     ;**************************************************************
     798/    C445 :                     ;*
     799/    C445 :                     ;*           D I R E C T O R Y   C O M M A N D
     800/    C445 :                     ;*
     801/    C445 :                     ;**************************************************************
     802/    C445 :                     ;
     803/    C445 : CD 4A C2            direct	call	convfst		;convert file name.
     804/    C448 : CD 22 C4            	call	dselect		;select indicated drive.
     805/    C44B : 21 76 C7            	ld	hl,fcb+1	;was any file indicated?
     806/    C44E : 7E                  	ld	a,(hl)
     807/    C44F : FE 20               	cp	' '
     808/    C451 : 20 08               	jr	nz,direct2
     809/    C453 : 06 0B               	ld	b,11		;no. Fill field with '?' - same as *.*.
     810/    C455 : 36 3F               direct1 ld	(hl),'?'
     811/    C457 : 23                  	inc	hl
     812/    C458 : 05                  	dec	b
     813/    C459 : 20 FA               	jr	nz,direct1
     814/    C45B : 1E 00               direct2 ld	e,0		;set initial cursor position.
     815/    C45D : D5                  	push	de
     816/    C45E : CD E1 C0            	call	srchfcb		;get first file name.
     817/    C461 : CC BC C3            	call	z,none		;none found at all?
     818/    C464 : CA DC C4            direct3 jp	z,direct9	;terminate if no more names.
     819/    C467 : 3A 96 C7            	ld	a,(rtncode)	;get file's position in segment (0-3).
     820/    C46A : 0F                  	rrca	
     821/    C46B : 0F                  	rrca	
     822/    C46C : 0F                  	rrca	
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 15 - 2/2/2018 12:56:16


     823/    C46D : E6 60               	and	60h		;(A)=position*32
     824/    C46F : 4F                  	ld	c,a
     825/    C470 : 3E 0A               	ld	a,10
     826/    C472 : CD 19 C4            	call	extract		;extract the tenth entry in fcb.
     827/    C475 : 17                  	rla			;check system file status bit.
     828/    C476 : 38 5A               	jr	c,direct8	;we don't list them.
     829/    C478 : D1                  	pop	de
     830/    C479 : 7B                  	ld	a,e		;bump name count.
     831/    C47A : 1C                  	inc	e
     832/    C47B : D5                  	push	de
     833/    C47C : E6 03               	and	03h		;at end of line?
     834/    C47E : F5                  	push	af
     835/    C47F : 20 14               	jr	nz,direct4
     836/    C481 : CD 98 C0            	call	crlf		;yes, end this line and start another.
     837/    C484 : C5                  	push	bc
     838/    C485 : CD C1 C1            	call	getdsk		;start line with ('A:').
     839/    C488 : C1                  	pop	bc
     840/    C489 : C6 41               	add	a,'A'
     841/    C48B : CD 92 C0            	call	printb
     842/    C48E : 3E 3A               	ld	a,':'
     843/    C490 : CD 92 C0            	call	printb
     844/    C493 : 18 08               	jr	direct5
     845/    C495 : CD A1 C0            direct4 call	space		;add seperator between file names.
     846/    C498 : 3E 3A               	ld	a,':'
     847/    C49A : CD 92 C0            	call	printb
     848/    C49D : CD A1 C0            direct5 call	space
     849/    C4A0 : 06 01               	ld	b,1		;'extract' each file name character at a time.
     850/    C4A2 : 78                  direct6 ld	a,b
     851/    C4A3 : CD 19 C4            	call	extract
     852/    C4A6 : E6 7F               	and	7fh		;strip bit 7 (status bit).
     853/    C4A8 : FE 20               	cp	' '		;are we at the end of the name?
     854/    C4AA : 20 13               	jr	nz,drect65
     855/    C4AC : F1                  	pop	af		;yes, don't print spaces at the end of a line.
     856/    C4AD : F5                  	push	af
     857/    C4AE : FE 03               	cp	3
     858/    C4B0 : 20 0B               	jr	nz,drect63
     859/    C4B2 : 3E 09               	ld	a,9		;first check for no extension.
     860/    C4B4 : CD 19 C4            	call	extract
     861/    C4B7 : E6 7F               	and	7fh
     862/    C4B9 : FE 20               	cp	' '
     863/    C4BB : 28 14               	jr	z,direct7	;don't print spaces.
     864/    C4BD : 3E 20               drect63 ld	a,' '		;else print them.
     865/    C4BF : CD 92 C0            drect65 call	printb
     866/    C4C2 : 04                  	inc	b		;bump to next character psoition.
     867/    C4C3 : 78                  	ld	a,b
     868/    C4C4 : FE 0C               	cp	12		;end of the name?
     869/    C4C6 : 30 09               	jr	nc,direct7
     870/    C4C8 : FE 09               	cp	9		;nope, starting extension?
     871/    C4CA : 20 D6               	jr	nz,direct6
     872/    C4CC : CD A1 C0            	call	space		;yes, add seperating space.
     873/    C4CF : 18 D1               	jr	direct6
     874/    C4D1 : F1                  direct7 pop	af		;get the next file name.
     875/    C4D2 : CD B3 C1            direct8 call	chkcon		;first check console, quit on anything.
     876/    C4D5 : 20 05               	jr	nz,direct9
     877/    C4D7 : CD DD C0            	call	srchnxt		;get next name.
     878/    C4DA : 18 88               	jr	direct3		;and continue with our list.
     879/    C4DC : D1                  direct9 pop	de		;restore the stack and return to command level.
     880/    C4DD : C3 2E C7            	jp	getback
     881/    C4E0 :                     ;
     882/    C4E0 :                     ;**************************************************************
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 16 - 2/2/2018 12:56:16


     883/    C4E0 :                     ;*
     884/    C4E0 :                     ;*                E R A S E   C O M M A N D
     885/    C4E0 :                     ;*
     886/    C4E0 :                     ;**************************************************************
     887/    C4E0 :                     ;
     888/    C4E0 : CD 4A C2            erase	call	convfst		;convert file name.
     889/    C4E3 : FE 0B               	cp	11		;was '*.*' entered?
     890/    C4E5 : 20 1B               	jr	nz,erase1
     891/    C4E7 : 01 12 C5            	ld	bc,yesno	;yes, ask for confirmation.
     892/    C4EA : CD A5 C0            	call	pline
     893/    C4ED : CD 2D C1            	call	getinp
     894/    C4F0 : 21 07 C0            	ld	hl,inbuff+1
     895/    C4F3 : 35                  	dec	(hl)		;must be exactly 'y'.
     896/    C4F4 : C2 54 C3            	jp	nz,cmmnd1
     897/    C4F7 : 23                  	inc	hl
     898/    C4F8 : 7E                  	ld	a,(hl)
     899/    C4F9 : FE 79               	cp	'y'
     900/    C4FB : C2 54 C3            	jp	nz,cmmnd1
     901/    C4FE : 23                  	inc	hl
     902/    C4FF : 22 88 C0            	ld	(inpoint),hl	;save input line pointer.
     903/    C502 : CD 22 C4            erase1	call	dselect		;select desired disk.
     904/    C505 : 11 75 C7            	ld	de,fcb
     905/    C508 : CD E6 C0            	call	delete		;delete the file.
     906/    C50B : 3C                  	inc	a
     907/    C50C : CC BC C3            	call	z,none		;not there?
     908/    C50F : C3 2E C7            	jp	getback		;return to command level now.
     909/    C512 : 41 6C 6C 20 28 79   yesno	db	"All (y/n)?"
                    2F 6E 29 3F 
     910/    C51C : 00                  	db	0
     911/    C51D :                     ;
     912/    C51D :                     ;**************************************************************
     913/    C51D :                     ;*
     914/    C51D :                     ;*            T Y P E   C O M M A N D
     915/    C51D :                     ;*
     916/    C51D :                     ;**************************************************************
     917/    C51D :                     ;
     918/    C51D : CD 4A C2            type	call	convfst		;convert file name.
     919/    C520 : C2 F9 C1            	jp	nz,synerr	;wild cards not allowed.
     920/    C523 : CD 22 C4            	call	dselect		;select indicated drive.
     921/    C526 : CD CC C0            	call	openfcb		;open the file.
     922/    C529 : 28 39               	jr	z,type5		;not there?
     923/    C52B : CD 98 C0            	call	crlf		;ok, start a new line on the screen.
     924/    C52E : 21 99 C7            	ld	hl,nbytes	;initialize byte counter.
     925/    C531 : 36 FF               	ld	(hl),0ffh	;set to read first sector.
     926/    C533 : 21 99 C7            type1	ld	hl,nbytes
     927/    C536 : 7E                  type2	ld	a,(hl)		;have we written the entire sector?
     928/    C537 : FE 80               	cp	128
     929/    C539 : DA 45 C5            	jp	c,type3
     930/    C53C : E5                  	push	hl		;yes, read in the next one.
     931/    C53D : CD F4 C0            	call	readfcb
     932/    C540 : E1                  	pop	hl
     933/    C541 : 20 1A               	jr	nz,type4	;end or error?
     934/    C543 : AF                  	xor	a		;ok, clear byte counter.
     935/    C544 : 77                  	ld	(hl),a
     936/    C545 : 34                  type3	inc	(hl)		;count this byte.
     937/    C546 : 21 80 00            	ld	hl,tbuff	;and get the (A)th one from the buffer (TBUFF).
     938/    C549 : CD 45 C2            	call	addhl
     939/    C54C : 7E                  	ld	a,(hl)
     940/    C54D : FE 1A               	cp	cntrlz		;end of file mark?
     941/    C54F : CA 2E C7            	jp	z,getback
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 17 - 2/2/2018 12:56:16


     942/    C552 : CD 8C C0            	call	print		;no, print it.
     943/    C555 : CD B3 C1            	call	chkcon		;check console, quit if anything ready.
     944/    C558 : C2 2E C7            	jp	nz,getback
     945/    C55B : 18 D6               	jr	type1
     946/    C55D :                     ;
     947/    C55D :                     ;   Get here on an end of file or read error.
     948/    C55D :                     ;
     949/    C55D : 3D                  type4	dec	a		;read error?
     950/    C55E : CA 2E C7            	jp	z,getback
     951/    C561 : CD AB C3            	call	rderror		;yes, print message.
     952/    C564 : CD 34 C4            type5	call	resetdr		;and reset proper drive
     953/    C567 : C3 F9 C1            	jp	synerr		;now print file name with problem.
     954/    C56A :                     ;
     955/    C56A :                     ;**************************************************************
     956/    C56A :                     ;*
     957/    C56A :                     ;*            S A V E   C O M M A N D
     958/    C56A :                     ;*
     959/    C56A :                     ;**************************************************************
     960/    C56A :                     ;
     961/    C56A : CD CA C3            save	call	decode		;get numeric number that follows SAVE.
     962/    C56D : F5                  	push	af		;save number of pages to write.
     963/    C56E : CD 4A C2            	call	convfst		;convert file name.
     964/    C571 : C2 F9 C1            	jp	nz,synerr	;wild cards not allowed.
     965/    C574 : CD 22 C4            	call	dselect		;select specified drive.
     966/    C577 : 11 75 C7            	ld	de,fcb		;now delete this file.
     967/    C57A : D5                  	push	de
     968/    C57B : CD E6 C0            	call	delete
     969/    C57E : D1                  	pop	de
     970/    C57F : CD FD C0            	call	create		;and create it again.
     971/    C582 : 28 2F               	jr	z,save3		;can't create?
     972/    C584 : AF                  	xor	a		;clear record number byte.
     973/    C585 : 32 95 C7            	ld	(fcb+32),a
     974/    C588 : F1                  	pop	af		;convert pages to sectors.
     975/    C589 : 6F                  	ld	l,a
     976/    C58A : 26 00               	ld	h,0
     977/    C58C : 29                  	add	hl,hl		;(HL)=number of sectors to write.
     978/    C58D : 11 00 01            	ld	de,tbase	;and we start from here.
     979/    C590 : 7C                  save1	ld	a,h		;done yet?
     980/    C591 : B5                  	or	l
     981/    C592 : 28 16               	jr	z,save2
     982/    C594 : 2B                  	dec	hl		;nope, count this and compute the start
     983/    C595 : E5                  	push	hl		;of the next 128 byte sector.
     984/    C596 : 21 80 00            	ld	hl,128
     985/    C599 : 19                  	add	hl,de
     986/    C59A : E5                  	push	hl		;save it and set the transfer address.
     987/    C59B : CD C9 C1            	call	dmaset
     988/    C59E : 11 75 C7            	ld	de,fcb		;write out this sector now.
     989/    C5A1 : CD F9 C0            	call	wrtrec
     990/    C5A4 : D1                  	pop	de		;reset (DE) to the start of the last sector.
     991/    C5A5 : E1                  	pop	hl		;restore sector count.
     992/    C5A6 : 20 0B               	jr	nz,save3	;write error?
     993/    C5A8 : 18 E6               	jr	save1
     994/    C5AA :                     ;
     995/    C5AA :                     ;   Get here after writing all of the file.
     996/    C5AA :                     ;
     997/    C5AA : 11 75 C7            save2	ld	de,fcb		;now close the file.
     998/    C5AD : CD D5 C0            	call	close
     999/    C5B0 : 3C                  	inc	a		;did it close ok?
    1000/    C5B1 : 20 06               	jr	nz,save4
    1001/    C5B3 :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 18 - 2/2/2018 12:56:16


    1002/    C5B3 :                     ;   Print out error message (no space).
    1003/    C5B3 :                     ;
    1004/    C5B3 : 01 BF C5            save3	ld	bc,nospace
    1005/    C5B6 : CD A5 C0            	call	pline
    1006/    C5B9 : CD C6 C1            save4	call	stddma		;reset the standard dma address.
    1007/    C5BC : C3 2E C7            	jp	getback
    1008/    C5BF : 4E 6F 20 73 70 61   nospace db	"No space"
                    63 65 
    1009/    C5C7 : 00                  	db	0
    1010/    C5C8 :                     ;
    1011/    C5C8 :                     ;**************************************************************
    1012/    C5C8 :                     ;*
    1013/    C5C8 :                     ;*           R E N A M E   C O M M A N D
    1014/    C5C8 :                     ;*
    1015/    C5C8 :                     ;**************************************************************
    1016/    C5C8 :                     ;
    1017/    C5C8 : CD 4A C2            rename	call	convfst		;convert first file name.
    1018/    C5CB : C2 F9 C1            	jp	nz,synerr	;wild cards not allowed.
    1019/    C5CE : 3A 98 C7            	ld	a,(chgdrv)	;remember any change in drives specified.
    1020/    C5D1 : F5                  	push	af
    1021/    C5D2 : CD 22 C4            	call	dselect		;and select this drive.
    1022/    C5D5 : CD E1 C0            	call	srchfcb		;is this file present?
    1023/    C5D8 : 20 50               	jr	nz,rename6	;yes, print error message.
    1024/    C5DA : 21 75 C7            	ld	hl,fcb		;yes, move this name into second slot.
    1025/    C5DD : 11 85 C7            	ld	de,fcb+16
    1026/    C5E0 : 06 10               	ld	b,16
    1027/    C5E2 : CD 11 C4            	call	hl2de
    1028/    C5E5 : 2A 88 C0            	ld	hl,(inpoint)	;get input pointer.
    1029/    C5E8 : EB                  	ex	de,hl
    1030/    C5E9 : CD 3C C2            	call	nonblank	;get next non blank character.
    1031/    C5EC : FE 3D               	cp	'='		;only allow an '=' or '_' seperator.
    1032/    C5EE : 28 04               	jr	z,rename1
    1033/    C5F0 : FE 5F               	cp	'_'
    1034/    C5F2 : 20 30               	jr	nz,rename5
    1035/    C5F4 : EB                  rename1 ex	de,hl
    1036/    C5F5 : 23                  	inc	hl		;ok, skip seperator.
    1037/    C5F6 : 22 88 C0            	ld	(inpoint),hl	;save input line pointer.
    1038/    C5F9 : CD 4A C2            	call	convfst		;convert this second file name now.
    1039/    C5FC : 20 26               	jr	nz,rename5	;again, no wild cards.
    1040/    C5FE : F1                  	pop	af		;if a drive was specified, then it
    1041/    C5FF : 47                  	ld	b,a		;must be the same as before.
    1042/    C600 : 21 98 C7            	ld	hl,chgdrv
    1043/    C603 : 7E                  	ld	a,(hl)
    1044/    C604 : B7                  	or	a
    1045/    C605 : 28 04               	jr	z,rename2
    1046/    C607 : B8                  	cp	b
    1047/    C608 : 70                  	ld	(hl),b
    1048/    C609 : 20 19               	jr	nz,rename5	;they were different, error.
    1049/    C60B : 70                  rename2 ld	(hl),b		;	reset as per the first file specification.
    1050/    C60C : AF                  	xor	a
    1051/    C60D : 32 75 C7            	ld	(fcb),a		;clear the drive byte of the fcb.
    1052/    C610 : CD E1 C0            rename3 call	srchfcb		;and go look for second file.
    1053/    C613 : 28 09               	jr	z,rename4	;doesn't exist?
    1054/    C615 : 11 75 C7            	ld	de,fcb
    1055/    C618 : CD 02 C1            	call	renam		;ok, rename the file.
    1056/    C61B : C3 2E C7            	jp	getback
    1057/    C61E :                     ;
    1058/    C61E :                     ;   Process rename errors here.
    1059/    C61E :                     ;
    1060/    C61E : CD BC C3            rename4 call	none		;file not there.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 19 - 2/2/2018 12:56:16


    1061/    C621 : C3 2E C7            	jp	getback
    1062/    C624 : CD 34 C4            rename5 call	resetdr		;bad command format.
    1063/    C627 : C3 F9 C1            	jp	synerr
    1064/    C62A : 01 33 C6            rename6 ld	bc,exists	;destination file already exists.
    1065/    C62D : CD A5 C0            	call	pline
    1066/    C630 : C3 2E C7            	jp	getback
    1067/    C633 : 46 69 6C 65 20 65   exists	db	"File exists"
                    78 69 73 74 73 
    1068/    C63E : 00                  	db	0
    1069/    C63F :                     ;
    1070/    C63F :                     ;**************************************************************
    1071/    C63F :                     ;*
    1072/    C63F :                     ;*             U S E R   C O M M A N D
    1073/    C63F :                     ;*
    1074/    C63F :                     ;**************************************************************
    1075/    C63F :                     ;
    1076/    C63F : CD CA C3            user	call	decode		;get numeric value following command.
    1077/    C642 : FE 10               	cp	16		;legal user number?
    1078/    C644 : D2 F9 C1            	jp	nc,synerr
    1079/    C647 : 5F                  	ld	e,a		;yes but is there anything else?
    1080/    C648 : 3A 76 C7            	ld	a,(fcb+1)
    1081/    C64B : FE 20               	cp	' '
    1082/    C64D : CA F9 C1            	jp	z,synerr	;yes, that is not allowed.
    1083/    C650 : CD 09 C1            	call	getsetuc	;ok, set user code.
    1084/    C653 : C3 31 C7            	jp	getback1
    1085/    C656 :                     ;
    1086/    C656 :                     ;**************************************************************
    1087/    C656 :                     ;*
    1088/    C656 :                     ;*        T R A N S I A N T   P R O G R A M   C O M M A N D
    1089/    C656 :                     ;*
    1090/    C656 :                     ;**************************************************************
    1091/    C656 :                     ;
    1092/    C656 : CD E6 C1            unknown call	verify		;check for valid system (why?).
    1093/    C659 : 3A 76 C7            	ld	a,(fcb+1)	;anything to execute?
    1094/    C65C : FE 20               	cp	' '
    1095/    C65E : 20 14               	jr	nz,unkwn1
    1096/    C660 : 3A 98 C7            	ld	a,(chgdrv)	;nope, only a drive change?
    1097/    C663 : B7                  	or	a
    1098/    C664 : CA 31 C7            	jp	z,getback1	;neither???
    1099/    C667 : 3D                  	dec	a
    1100/    C668 : 32 97 C7            	ld	(cdrive),a	;ok, store new drive.
    1101/    C66B : CD 1D C1            	call	movecd		;set (TDRIVE) also.
    1102/    C66E : CD BA C0            	call	dsksel		;and select this drive.
    1103/    C671 : C3 31 C7            	jp	getback1	;then return.
    1104/    C674 :                     ;
    1105/    C674 :                     ;   Here a file name was typed. Prepare to execute it.
    1106/    C674 :                     ;
    1107/    C674 : 11 7E C7            unkwn1	ld	de,fcb+9	;an extension specified?
    1108/    C677 : 1A                  	ld	a,(de)
    1109/    C678 : FE 20               	cp	' '
    1110/    C67A : C2 F9 C1            	jp	nz,synerr	;yes, not allowed.
    1111/    C67D : D5                  unkwn2	push	de
    1112/    C67E : CD 22 C4            	call	dselect		;select specified drive.
    1113/    C681 : D1                  	pop	de
    1114/    C682 : 21 2B C7            	ld	hl,comfile	;set the extension to 'COM'.
    1115/    C685 : CD 0F C4            	call	move3
    1116/    C688 : CD CC C0            	call	openfcb		;and open this file.
    1117/    C68B : CA 13 C7            	jp	z,unkwn9	;not present?
    1118/    C68E :                     ;
    1119/    C68E :                     ;   Load in the program.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 20 - 2/2/2018 12:56:16


    1120/    C68E :                     ;
    1121/    C68E : 21 00 01            	ld	hl,tbase	;store the program starting here.
    1122/    C691 : E5                  unkwn3	push	hl
    1123/    C692 : EB                  	ex	de,hl
    1124/    C693 : CD C9 C1            	call	dmaset		;set transfer address.
    1125/    C696 : 11 75 C7            	ld	de,fcb		;and read the next record.
    1126/    C699 : CD F0 C0            	call	rdrec
    1127/    C69C : 20 10               	jr	nz,unkwn4	;end of file or read error?
    1128/    C69E : E1                  	pop	hl		;nope, bump pointer for next sector.
    1129/    C69F : 11 80 00            	ld	de,128
    1130/    C6A2 : 19                  	add	hl,de
    1131/    C6A3 : 11 00 C0            	ld	de,cbase	;enough room for the whole file?
    1132/    C6A6 : 7D                  	ld	a,l
    1133/    C6A7 : 93                  	sub	e
    1134/    C6A8 : 7C                  	ld	a,h
    1135/    C6A9 : 9A                  	sbc	a,d
    1136/    C6AA : 30 6D               	jr	nc,unkwn0	;no, it can't fit.
    1137/    C6AC : 18 E3               	jr	unkwn3
    1138/    C6AE :                     ;
    1139/    C6AE :                     ;   Get here after finished reading.
    1140/    C6AE :                     ;
    1141/    C6AE : E1                  unkwn4	pop	hl
    1142/    C6AF : 3D                  	dec	a		;normal end of file?
    1143/    C6B0 : C2 19 C7            	jp	nz,unkwn0
    1144/    C6B3 : CD 34 C4            	call	resetdr		;yes, reset previous drive.
    1145/    C6B6 : CD 4A C2            	call	convfst		;convert the first file name that follows
    1146/    C6B9 : 21 98 C7            	ld	hl,chgdrv	;command name.
    1147/    C6BC : E5                  	push	hl
    1148/    C6BD : 7E                  	ld	a,(hl)		;set drive code in default fcb.
    1149/    C6BE : 32 75 C7            	ld	(fcb),a
    1150/    C6C1 : 3E 10               	ld	a,16		;put second name 16 bytes later.
    1151/    C6C3 : CD 4C C2            	call	convert		;convert second file name.
    1152/    C6C6 : E1                  	pop	hl
    1153/    C6C7 : 7E                  	ld	a,(hl)		;and set the drive for this second file.
    1154/    C6C8 : 32 85 C7            	ld	(fcb+16),a
    1155/    C6CB : AF                  	xor	a		;clear record byte in fcb.
    1156/    C6CC : 32 95 C7            	ld	(fcb+32),a
    1157/    C6CF : 11 5C 00            	ld	de,tfcb		;move it into place at(005Ch).
    1158/    C6D2 : 21 75 C7            	ld	hl,fcb
    1159/    C6D5 : 06 21               	ld	b,33
    1160/    C6D7 : CD 11 C4            	call	hl2de
    1161/    C6DA : 21 08 C0            	ld	hl,inbuff+2	;now move the remainder of the input
    1162/    C6DD : 7E                  unkwn5	ld	a,(hl)		;line down to (0080h). Look for a non blank.
    1163/    C6DE : B7                  	or	a		;or a null.
    1164/    C6DF : 28 07               	jr	z,unkwn6
    1165/    C6E1 : FE 20               	cp	' '
    1166/    C6E3 : 28 03               	jr	z,unkwn6
    1167/    C6E5 : 23                  	inc	hl
    1168/    C6E6 : 18 F5               	jr	unkwn5
    1169/    C6E8 :                     ;
    1170/    C6E8 :                     ;   Do the line move now. It ends in a null byte.
    1171/    C6E8 :                     ;
    1172/    C6E8 : 06 00               unkwn6	ld	b,0		;keep a character count.
    1173/    C6EA : 11 81 00            	ld	de,tbuff+1	;data gets put here.
    1174/    C6ED : 7E                  unkwn7	ld	a,(hl)		;move it now.
    1175/    C6EE : 12                  	ld	(de),a
    1176/    C6EF : B7                  	or	a
    1177/    C6F0 : 28 05               	jr	z,unkwn8
    1178/    C6F2 : 04                  	inc	b
    1179/    C6F3 : 23                  	inc	hl
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 21 - 2/2/2018 12:56:16


    1180/    C6F4 : 13                  	inc	de
    1181/    C6F5 : 18 F6               	jr	unkwn7
    1182/    C6F7 : 78                  unkwn8	ld	a,b		;now store the character count.
    1183/    C6F8 : 32 80 00            	ld	(tbuff),a
    1184/    C6FB : CD 98 C0            	call	crlf		;clean up the screen.
    1185/    C6FE : CD C6 C1            	call	stddma		;set standard transfer address.
    1186/    C701 : CD 0E C1            	call	setcdrv		;reset current drive.
    1187/    C704 : CD 00 01            	call	tbase		;and execute the program.
    1188/    C707 :                     ;
    1189/    C707 :                     ;   Transiant programs return here (or reboot).
    1190/    C707 :                     ;
    1191/    C707 : 31 53 C7            	ld	sp,batch	;set stack first off.
    1192/    C70A : CD 1D C1            	call	movecd		;move current drive into place (TDRIVE).
    1193/    C70D : CD BA C0            	call	dsksel		;and reselect it.
    1194/    C710 : C3 54 C3            	jp	cmmnd1		;back to comand mode.
    1195/    C713 :                     ;
    1196/    C713 :                     ;   Get here if some error occured.
    1197/    C713 :                     ;
    1198/    C713 : CD 34 C4            unkwn9	call	resetdr		;inproper format.
    1199/    C716 : C3 F9 C1            	jp	synerr
    1200/    C719 : 01 22 C7            UNKWN0	ld	bc,badload	;read error or won't fit.
    1201/    C71C : CD A5 C0            	call	pline
    1202/    C71F : C3 2E C7            	jp	getback
    1203/    C722 : 42 61 64 20 6C 6F   badload db	"Bad load"
                    61 64 
    1204/    C72A : 00                  	db	0
    1205/    C72B : 43 4F 4D            comfile db	"COM"		;command file extension.
    1206/    C72E :                     ;
    1207/    C72E :                     ;   Get here to return to command level. We will reset the
    1208/    C72E :                     ; previous active drive and then either return to command
    1209/    C72E :                     ; level directly or print error message and then return.
    1210/    C72E :                     ;
    1211/    C72E : CD 34 C4            getback	call	resetdr		;reset previous drive.
    1212/    C731 :                     getback1
    1213/    C731 : CD 4A C2            	call	convfst		;convert first name in (FCB).
    1214/    C734 : 3A 76 C7            	ld	a,(fcb+1)	;if this was just a drive change request,
    1215/    C737 : D6 20               	sub	' '		;make sure it was valid.
    1216/    C739 : 21 98 C7            	ld	hl,chgdrv
    1217/    C73C : B6                  	or	(hl)
    1218/    C73D : C2 F9 C1            	jp	nz,synerr
    1219/    C740 : C3 54 C3            	jp	cmmnd1		;ok, return to command level.
    1220/    C743 :                     ;
    1221/    C743 :                     ;   ccp stack area.
    1222/    C743 :                     ;
    1223/    C743 : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 00 00 00 
    1224/    C753 :                     
    1225/    C753 : =C753H              ccpstack	equ	$	;end of ccp stack area.
    1226/    C753 :                     ;
    1227/    C753 :                     ;   Batch (or SUBMIT) processing information storage.
    1228/    C753 :                     ;
    1229/    C753 : 00                  batch		db	0		;batch mode flag (0=not active).
    1230/    C754 : 00                  batchfcb	db	0
    1231/    C755 : 24 24 24 20 20 20   		db "$$$     SUB"
                    20 20 53 55 42 
    1232/    C760 : 00 00 00 00 00 00   		db 0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
    1233/    C76C : 00 00 00 00 00 00   		db 0,0,0,0,0,0,0,0,0
                    00 00 00 
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 22 - 2/2/2018 12:56:16


    1234/    C775 :                     ;
    1235/    C775 :                     ;   File control block setup by the CCP.
    1236/    C775 :                     ;
    1237/    C775 : 00                  fcb	db	0
    1238/    C776 : 20 20 20 20 20 20   	db	"           "
                    20 20 20 20 20 
    1239/    C781 : 00 00 00 00 00      	db	0,0,0,0,0
    1240/    C786 : 20 20 20 20 20 20   	db	"           "
                    20 20 20 20 20 
    1241/    C791 : 00 00 00 00 00      	db	0,0,0,0,0
    1242/    C796 : 00                  rtncode db	0		;status returned from bdos call.
    1243/    C797 : 00                  cdrive	db	0		;currently active drive.
    1244/    C798 : 00                  chgdrv	db	0		;change in drives flag (0=no change).
    1245/    C799 : 00 00               nbytes	dw	0		;byte counter used by TYPE.
    1246/    C79B :                     ;
    1247/    C79B :                     ;   Room for expansion?
    1248/    C79B :                     ;
    1249/    C79B : 00 00 00 00 00 00   	db	0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 
    1250/    C7A8 :                     ;
    1251/    C7A8 :                     ;   Note that the following six bytes must match those at
    1252/    C7A8 :                     ; (PATTRN1) or cp/m will HALT. Why?
    1253/    C7A8 :                     ;
    1254/    C7A8 : 00 16 00 00 00 00   pattrn2 db	0,22,0,0,0,0	;(* serial number bytes *).
    1255/    C7AE :                     ;
    1256/    C7AE :                     ;**************************************************************
    1257/    C7AE :                     ;*
    1258/    C7AE :                     ;*                    B D O S   E N T R Y
    1259/    C7AE :                     ;*
    1260/    C7AE :                     ;**************************************************************
    1261/    C7AE :                     ;
    1262/    C7AE : C3 B9 C7            fbase	jp	fbase1
    1263/    C7B1 :                     ;
    1264/    C7B1 :                     ;   Bdos error table.
    1265/    C7B1 :                     ;
    1266/    C7B1 : 41 C8               BADSCTR		DW	ERROR1		;bad sector on read or write.
    1267/    C7B3 : 4D C8               BADSLCT		DW	ERROR2		;bad disk select.
    1268/    C7B5 : 52 C8               RODISK		DW	ERROR3		;disk is read only.
    1269/    C7B7 : 57 C8               ROFILE		DW	ERROR4		;file is read only.
    1270/    C7B9 :                     ;
    1271/    C7B9 :                     ;   Entry into bdos. (DE) or (E) are the parameters passed. The
    1272/    C7B9 :                     ; function number desired is in register (C).
    1273/    C7B9 :                     ;
    1274/    C7B9 : EB                  fbase1	ex	de,hl		;save the (DE) parameters.
    1275/    C7BA : 22 CC CA            	ld	(params),hl
    1276/    C7BD : EB                  	ex	de,hl
    1277/    C7BE : 7B                  	ld	a,e		;and save register (E) in particular.
    1278/    C7BF : 32 F9 D4            	ld	(eparam),a
    1279/    C7C2 : 21 00 00            	ld	hl,0
    1280/    C7C5 : 22 CE CA            	ld	(status),hl	;clear return status.
    1281/    C7C8 : 39                  	add	hl,sp
    1282/    C7C9 : 22 98 CA            	ld	(usrstack),hl	;save users stack pointer.
    1283/    C7CC : 31 CA CA            	ld	sp,stkarea	;and set our own.
    1284/    C7CF : AF                  	xor	a		;clear auto select storage space.
    1285/    C7D0 : 32 03 D5            	ld	(autoflag),a
    1286/    C7D3 : 32 01 D5            	ld	(auto),a
    1287/    C7D6 : 21 99 D4            	ld	hl,goback	;set return address.
    1288/    C7D9 : E5                  	push	hl
    1289/    C7DA : 79                  	ld	a,c		;get function number.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 23 - 2/2/2018 12:56:16


    1290/    C7DB : FE 29               	cp	nfuncts		;valid function number?
    1291/    C7DD : D0                  	ret	nc
    1292/    C7DE : 4B                  	ld	c,e		;keep single register function here.
    1293/    C7DF : 21 EF C7            	ld	hl,functns	;now look thru the function table.
    1294/    C7E2 : 5F                  	ld	e,a
    1295/    C7E3 : 16 00               	ld	d,0		;(DE)=function number.
    1296/    C7E5 : 19                  	add	hl,de
    1297/    C7E6 : 19                  	add	hl,de		;(HL)=(start of table)+2*(function number).
    1298/    C7E7 : 5E                  	ld	e,(hl)
    1299/    C7E8 : 23                  	inc	hl
    1300/    C7E9 : 56                  	ld	d,(hl)		;now (DE)=address for this function.
    1301/    C7EA : 2A CC CA            	ld	hl,(params)	;retrieve parameters.
    1302/    C7ED : EB                  	ex	de,hl		;now (DE) has the original parameters.
    1303/    C7EE : E9                  	jp	(hl)		;execute desired function.
    1304/    C7EF :                     ;
    1305/    C7EF :                     ;   BDOS function jump table.
    1306/    C7EF :                     ;
    1307/    C7EF : =29H                nfuncts equ	41		;number of functions in followin table.
    1308/    C7EF :                     ;
    1309/    C7EF : 26 D5 53 CA 31 C9   functns	dw	wboot,getcon,outcon,getrdr,punch,list,dircio,getiob
                    59 CA 35 D5 32 D5 
                    5F CA 77 CA 
    1310/    C7FF : 7D CA 82 CA 7F C9   	dw	setiob,prtstr,rdbuff,getcsts,getver,rstdsk,setdsk,openfil
                    88 CA A5 D3 AA D3 
                    6D D3 C3 D3 
    1311/    C80F : CC D3 D2 D3 EE D3   	dw	closefil,getfst,getnxt,delfile,readseq,wrtseq,fcreate
                    FD D3 06 D4 0C D4 
                    12 D4 
    1312/    C81D : 1B D4 24 D4 2A D4   	dw	renfile,getlog,getcrnt,putdma,getaloc,wrtprtd,getrov,setattr
                    30 D4 37 D4 A4 CC 
                    3D D4 43 D4 
    1313/    C82D : 4C D4 53 D4 66 D4   	dw	getparm,getuser,rdrandom,wtrandom,filesize,setran,logoff,rtn
                    6C D4 72 D4 36 D3 
                    78 D4 8E CA 
    1314/    C83D : 8E CA BE D4         	dw	rtn,wtspecl
    1315/    C841 :                     ;
    1316/    C841 :                     ;   Bdos error message section.
    1317/    C841 :                     ;
    1318/    C841 : 21 70 C8            error1	ld	hl,badsec	;bad sector message.
    1319/    C844 : CD 8B C8            	call	prterr		;print it and get a 1 char responce.
    1320/    C847 : FE 03               	cp	cntrlc		;re-boot request (control-c)?
    1321/    C849 : CA 00 00            	jp	z,0		;yes.
    1322/    C84C : C9                  	ret			;no, return to retry i/o function.
    1323/    C84D :                     ;
    1324/    C84D : 21 7B C8            error2	ld	hl,badsel	;bad drive selected.
    1325/    C850 : 18 08               	jr	error5
    1326/    C852 :                     ;
    1327/    C852 : 21 87 C8            error3	ld	hl,diskro	;disk is read only.
    1328/    C855 : 18 03               	jr	error5
    1329/    C857 :                     ;
    1330/    C857 : 21 82 C8            ERROR4	ld	hl,filero	;file is read only.
    1331/    C85A :                     ;
    1332/    C85A : CD 8B C8            ERROR5	call	prterr
    1333/    C85D : C3 00 00            	jp	0		;always reboot on these errors.
    1334/    C860 :                     ;
    1335/    C860 : 42 64 6F 73 20 45   bdoserr	db	"Bdos Err On "
                    72 72 20 4F 6E 20 
    1336/    C86C : 20 3A 20 24         bdosdrv db	" : $"
    1337/    C870 : 42 61 64 20 53 65   badsec	db	"Bad Sector$"
                    63 74 6F 72 24 
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 24 - 2/2/2018 12:56:16


    1338/    C87B : 53 65 6C 65 63 74   badsel	db	"Select$"
                    24 
    1339/    C882 : 46 69 6C 65 20      filero	db	"File "
    1340/    C887 : 52 2F 4F 24         diskro	db	"R/O$"
    1341/    C88B :                     ;
    1342/    C88B :                     ;   Print bdos error message.
    1343/    C88B :                     ;
    1344/    C88B : E5                  prterr	push	hl		;save second message pointer.
    1345/    C88C : CD 68 C9            	call	outcrlf		;send (cr)(lf).
    1346/    C88F : 3A CB CA            	ld	a,(active)	;get active drive.
    1347/    C892 : C6 41               	add	a,'A'		;make ascii.
    1348/    C894 : 32 6C C8            	ld	(bdosdrv),a	;and put in message.
    1349/    C897 : 01 60 C8            	ld	bc,bdoserr	;and print it.
    1350/    C89A : CD 72 C9            	call	prtmesg
    1351/    C89D : C1                  	pop	bc		;print second message line now.
    1352/    C89E : CD 72 C9            	call	prtmesg
    1353/    C8A1 :                     ;
    1354/    C8A1 :                     ;   Get an input character. We will check our 1 character
    1355/    C8A1 :                     ; buffer first. This may be set by the console status routine.
    1356/    C8A1 :                     ;
    1357/    C8A1 : 21 97 CA            getchar ld	hl,charbuf	;check character buffer.
    1358/    C8A4 : 7E                  	ld	a,(hl)		;anything present already?
    1359/    C8A5 : 36 00               	ld	(hl),0		;...either case clear it.
    1360/    C8A7 : B7                  	or	a
    1361/    C8A8 : C0                  	ret	nz		;yes, use it.
    1362/    C8A9 : C3 2C D5            	jp	conin		;nope, go get a character responce.
    1363/    C8AC :                     ;
    1364/    C8AC :                     ;   Input and echo a character.
    1365/    C8AC :                     ;
    1366/    C8AC : CD A1 C8            getecho call	getchar		;input a character.
    1367/    C8AF : CD BA C8            	call	chkchar		;carriage control?
    1368/    C8B2 : D8                  	ret	c		;no, a regular control char so don't echo.
    1369/    C8B3 : F5                  	push	af		;ok, save character now.
    1370/    C8B4 : 4F                  	ld	c,a
    1371/    C8B5 : CD 31 C9            	call	outcon		;and echo it.
    1372/    C8B8 : F1                  	pop	af		;get character and return.
    1373/    C8B9 : C9                  	ret	
    1374/    C8BA :                     ;
    1375/    C8BA :                     ;   Check character in (A). Set the zero flag on a carriage
    1376/    C8BA :                     ; control character and the carry flag on any other control
    1377/    C8BA :                     ; character.
    1378/    C8BA :                     ;
    1379/    C8BA : FE 0D               chkchar cp	cr		;check for CR, LF, backspace,
    1380/    C8BC : C8                  	ret	z		;or a tab.
    1381/    C8BD : FE 0A               	cp	lf
    1382/    C8BF : C8                  	ret	z
    1383/    C8C0 : FE 09               	cp	tab
    1384/    C8C2 : C8                  	ret	z
    1385/    C8C3 : FE 08               	cp	bs
    1386/    C8C5 : C8                  	ret	z
    1387/    C8C6 : FE 20               	cp	' '		;other control char? Set carry flag.
    1388/    C8C8 : C9                  	ret	
    1389/    C8C9 :                     ;
    1390/    C8C9 :                     ;   Check the console during output. Halt on a control-s, then
    1391/    C8C9 :                     ; reboot on a control-c. If anything else is ready, clear the
    1392/    C8C9 :                     ; zero flag and return (the calling routine may want to do
    1393/    C8C9 :                     ; something).
    1394/    C8C9 :                     ;
    1395/    C8C9 :                     ckconsol
    1396/    C8C9 : 3A 97 CA            	ld	a,(charbuf)	;check buffer.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 25 - 2/2/2018 12:56:16


    1397/    C8CC : B7                  	or	a		;if anything, just return without checking.
    1398/    C8CD : 20 1A               	jr	nz,ckcon2
    1399/    C8CF : CD 29 D5            	call	const		;nothing in buffer. Check console.
    1400/    C8D2 : E6 01               	and	01h		;look at bit 0.
    1401/    C8D4 : C8                  	ret	z		;return if nothing.
    1402/    C8D5 : CD 2C D5            	call	conin		;ok, get it.
    1403/    C8D8 : FE 13               	cp	cntrls		;if not control-s, return with zero cleared.
    1404/    C8DA : 20 0A               	jr	nz,ckcon1
    1405/    C8DC : CD 2C D5            	call	conin		;halt processing until another char
    1406/    C8DF : FE 03               	cp	cntrlc		;is typed. Control-c?
    1407/    C8E1 : CA 00 00            	jp	z,0		;yes, reboot now.
    1408/    C8E4 : AF                  	xor	a		;no, just pretend nothing was ever ready.
    1409/    C8E5 : C9                  	ret	
    1410/    C8E6 : 32 97 CA            ckcon1	ld	(charbuf),a	;save character in buffer for later processing.
    1411/    C8E9 : 3E 01               ckcon2	ld	a,1		;set (A) to non zero to mean something is ready.
    1412/    C8EB : C9                  	ret	
    1413/    C8EC :                     ;
    1414/    C8EC :                     ;   Output (C) to the screen. If the printer flip-flop flag
    1415/    C8EC :                     ; is set, we will send character to printer also. The console
    1416/    C8EC :                     ; will be checked in the process.
    1417/    C8EC :                     ;
    1418/    C8EC : 3A 93 CA            outchar ld	a,(outflag)	;check output flag.
    1419/    C8EF : B7                  	or	a		;anything and we won't generate output.
    1420/    C8F0 : 20 13               	jr	nz,outchr1
    1421/    C8F2 : C5                  	push	bc
    1422/    C8F3 : CD C9 C8            	call	ckconsol	;check console (we don't care whats there).
    1423/    C8F6 : C1                  	pop	bc
    1424/    C8F7 : C5                  	push	bc
    1425/    C8F8 : CD 2F D5            	call	conout		;output (C) to the screen.
    1426/    C8FB : C1                  	pop	bc
    1427/    C8FC : C5                  	push	bc
    1428/    C8FD : 3A 96 CA            	ld	a,(prtflag)	;check printer flip-flop flag.
    1429/    C900 : B7                  	or	a
    1430/    C901 : C4 32 D5            	call	nz,list		;print it also if non-zero.
    1431/    C904 : C1                  	pop	bc
    1432/    C905 : 79                  outchr1 ld	a,c		;update cursors position.
    1433/    C906 : 21 95 CA            	ld	hl,curpos
    1434/    C909 : FE 7F               	cp	del		;rubouts don't do anything here.
    1435/    C90B : C8                  	ret	z
    1436/    C90C : 34                  	inc	(hl)		;bump line pointer.
    1437/    C90D : FE 20               	cp	' '		;and return if a normal character.
    1438/    C90F : D0                  	ret	nc
    1439/    C910 : 35                  	dec	(hl)		;restore and check for the start of the line.
    1440/    C911 : 7E                  	ld	a,(hl)
    1441/    C912 : B7                  	or	a
    1442/    C913 : C8                  	ret	z		;ingnore control characters at the start of the line.
    1443/    C914 : 79                  	ld	a,c
    1444/    C915 : FE 08               	cp	bs		;is it a backspace?
    1445/    C917 : 20 02               	jr	nz,outchr2
    1446/    C919 : 35                  	dec	(hl)		;yes, backup pointer.
    1447/    C91A : C9                  	ret	
    1448/    C91B : FE 0A               outchr2 cp	lf		;is it a line feed?
    1449/    C91D : C0                  	ret	nz		;ignore anything else.
    1450/    C91E : 36 00               	ld	(hl),0		;reset pointer to start of line.
    1451/    C920 : C9                  	ret	
    1452/    C921 :                     ;
    1453/    C921 :                     ;   Output (A) to the screen. If it is a control character
    1454/    C921 :                     ; (other than carriage control), use ^x format.
    1455/    C921 :                     ;
    1456/    C921 : 79                  showit	ld	a,c
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 26 - 2/2/2018 12:56:16


    1457/    C922 : CD BA C8            	CALL	CHKCHAR		;check character.
    1458/    C925 : 30 0A               	jr	nc,outcon	;not a control, use normal output.
    1459/    C927 : F5                  	push	af
    1460/    C928 : 0E 5E               	ld	c,'^'		;for a control character, preceed it with '^'.
    1461/    C92A : CD EC C8            	call	outchaR
    1462/    C92D : F1                  	pop	af
    1463/    C92E : F6 40               	or	'@'		;and then use the letter equivelant.
    1464/    C930 : 4F                  	ld	c,a
    1465/    C931 :                     ;
    1466/    C931 :                     ;   Function to output (C) to the console device and expand tabs
    1467/    C931 :                     ; if necessary.
    1468/    C931 :                     ;
    1469/    C931 : 79                  outcon	ld	a,c
    1470/    C932 : FE 09               	cp	tab		;is it a tab?
    1471/    C934 : C2 EC C8            	jp	nz,outchar	;use regular output.
    1472/    C937 : 0E 20               outcon1 ld	c,' '		;yes it is, use spaces instead.
    1473/    C939 : CD EC C8            	call	outchar
    1474/    C93C : 3A 95 CA            	ld	a,(curpos)	;go until the cursor is at a multiple of 8
    1475/    C93F :                     
    1476/    C93F : E6 07               	and	07h		;position.
    1477/    C941 : 20 F4               	jr	nz,outcon1
    1478/    C943 : C9                  	ret	
    1479/    C944 :                     ;
    1480/    C944 :                     ;   Echo a backspace character. Erase the prevoius character
    1481/    C944 :                     ; on the screen.
    1482/    C944 :                     ;
    1483/    C944 : CD 4C C9            backup	call	backup1		;backup the screen 1 place.
    1484/    C947 : 0E 20               	ld	c,' '		;then blank that character.
    1485/    C949 : CD 2F D5            	call	conout
    1486/    C94C : 0E 08               backup1 ld	c,bs		;then back space once more.
    1487/    C94E : C3 2F D5            	jp	conout
    1488/    C951 :                     ;
    1489/    C951 :                     ;   Signal a deleted line. Print a '#' at the end and start
    1490/    C951 :                     ; over.
    1491/    C951 :                     ;
    1492/    C951 : 0E 23               newline ld	c,'#'
    1493/    C953 : CD EC C8            	call	outchar		;print this.
    1494/    C956 : CD 68 C9            	call	outcrlf		;start new line.
    1495/    C959 : 3A 95 CA            newln1	ld	a,(curpos)	;move the cursor to the starting position.
    1496/    C95C : 21 94 CA            	ld	hl,starting
    1497/    C95F : BE                  	cp	(hl)
    1498/    C960 : D0                  	ret	nc		;there yet?
    1499/    C961 : 0E 20               	ld	c,' '
    1500/    C963 : CD EC C8            	call	outchar		;nope, keep going.
    1501/    C966 : 18 F1               	jr	newln1
    1502/    C968 :                     ;
    1503/    C968 :                     ;   Output a (cr) (lf) to the console device (screen).
    1504/    C968 :                     ;
    1505/    C968 : 0E 0D               outcrlf ld	c,cr
    1506/    C96A : CD EC C8            	call	outchar
    1507/    C96D : 0E 0A               	ld	c,lf
    1508/    C96F : C3 EC C8            	jp	outchar
    1509/    C972 :                     ;
    1510/    C972 :                     ;   Print message pointed to by (BC). It will end with a '$'.
    1511/    C972 :                     ;
    1512/    C972 : 0A                  prtmesg ld	a,(bc)		;check for terminating character.
    1513/    C973 : FE 24               	cp	'$'
    1514/    C975 : C8                  	ret	z
    1515/    C976 : 03                  	inc	bc
    1516/    C977 : C5                  	push	bc		;otherwise, bump pointer and print it.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 27 - 2/2/2018 12:56:16


    1517/    C978 : 4F                  	ld	c,a
    1518/    C979 : CD 31 C9            	call	outcon
    1519/    C97C : C1                  	pop	bc
    1520/    C97D : 18 F3               	jr	prtmesg
    1521/    C97F :                     ;
    1522/    C97F :                     ;   Function to execute a buffered read.
    1523/    C97F :                     ;
    1524/    C97F : 3A 95 CA            rdbuff	ld	a,(curpos)	;use present location as starting one.
    1525/    C982 : 32 94 CA            	ld	(starting),a
    1526/    C985 : 2A CC CA            	ld	hl,(params)	;get the maximum buffer space.
    1527/    C988 : 4E                  	ld	c,(hl)
    1528/    C989 : 23                  	inc	hl		;point to first available space.
    1529/    C98A : E5                  	push	hl		;and save.
    1530/    C98B : 06 00               	ld	b,0		;keep a character count.
    1531/    C98D : C5                  rdbuf1	push	bc
    1532/    C98E : E5                  	push	hl
    1533/    C98F : CD A1 C8            rdbuf2	call	getchar		;get the next input character.
    1534/    C992 : E6 7F               	and	7fh		;strip bit 7.
    1535/    C994 : E1                  	pop	hl		;reset registers.
    1536/    C995 : C1                  	pop	bc
    1537/    C996 : FE 0D               	cp	cr		;en of the line?
    1538/    C998 : CA 4C CA            	jp	z,rdbuf17
    1539/    C99B : FE 0A               	cp	lf
    1540/    C99D : CA 4C CA            	jp	z,rdbuf17
    1541/    C9A0 : FE 08               	cp	bs		;how about a backspace?
    1542/    C9A2 : 20 0D               	jr	nz,rdbuf3
    1543/    C9A4 : 78                  	ld	a,b		;yes, but ignore at the beginning of the line.
    1544/    C9A5 : B7                  	or	a
    1545/    C9A6 : 28 E5               	jr	z,rdbuf1
    1546/    C9A8 : 05                  	dec	b		;ok, update counter.
    1547/    C9A9 : 3A 95 CA            	ld	a,(curpos)	;if we backspace to the start of the line,
    1548/    C9AC : 32 93 CA            	ld	(outflag),a	;treat as a cancel (control-x).
    1549/    C9AF : 18 4E               	jr	rdbuf10
    1550/    C9B1 : FE 7F               rdbuf3	cp	del		;user typed a rubout?
    1551/    C9B3 : 20 0A               	jr	nz,rdbuf4
    1552/    C9B5 : 78                  	ld	a,b		;ignore at the start of the line.
    1553/    C9B6 : B7                  	or	a
    1554/    C9B7 : 28 D4               	jr	z,rdbuf1
    1555/    C9B9 : 7E                  	ld	a,(hl)		;ok, echo the prevoius character.
    1556/    C9BA : 05                  	dec	b		;and reset pointers (counters).
    1557/    C9BB : 2B                  	dec	hl
    1558/    C9BC : C3 35 CA            	jp	rdbuf15
    1559/    C9BF : FE 05               rdbuf4	cp	cntrle		;physical end of line?
    1560/    C9C1 : 20 0B               	jr	nz,rdbuf5
    1561/    C9C3 : C5                  	push	bc		;yes, do it.
    1562/    C9C4 : E5                  	push	hl
    1563/    C9C5 : CD 68 C9            	call	outcrlf
    1564/    C9C8 : AF                  	xor	a		;and update starting position.
    1565/    C9C9 : 32 94 CA            	ld	(starting),a
    1566/    C9CC : 18 C1               	jr	rdbuf2
    1567/    C9CE : FE 10               rdbuf5	cp	cntrlp		;control-p?
    1568/    C9D0 : 20 0B               	jr	nz,rdbuf6
    1569/    C9D2 : E5                  	push	hl		;yes, flip the print flag filp-flop byte.
    1570/    C9D3 : 21 96 CA            	ld	hl,prtflag
    1571/    C9D6 : 3E 01               	ld	a,1		;PRTFLAG=1-PRTFLAG
    1572/    C9D8 : 96                  	sub	(hl)
    1573/    C9D9 : 77                  	ld	(hl),a
    1574/    C9DA : E1                  	pop	hl
    1575/    C9DB : 18 B0               	jr	rdbuf1
    1576/    C9DD : FE 18               rdbuf6	cp	cntrlx		;control-x (cancel)?
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 28 - 2/2/2018 12:56:16


    1577/    C9DF : 20 10               	jr	nz,rdbuf8
    1578/    C9E1 : E1                  	pop	hl
    1579/    C9E2 : 3A 94 CA            rdbuf7	ld	a,(starting)	;yes, backup the cursor to here.
    1580/    C9E5 : 21 95 CA            	ld	hl,curpos
    1581/    C9E8 : BE                  	cp	(hl)
    1582/    C9E9 : 30 94               	jr	nc,rdbuff	;done yet?
    1583/    C9EB : 35                  	dec	(hl)		;no, decrement pointer and output back up one space.
    1584/    C9EC : CD 44 C9            	call	backup
    1585/    C9EF : 18 F1               	jr	rdbuf7
    1586/    C9F1 : FE 15               rdbuf8	cp	cntrlu		;cntrol-u (cancel line)?
    1587/    C9F3 : 20 06               	jr	nz,rdbuf9
    1588/    C9F5 : CD 51 C9            	call	newline		;start a new line.
    1589/    C9F8 : E1                  	pop	hl
    1590/    C9F9 : 18 84               	jr	rdbuff
    1591/    C9FB : FE 12               rdbuf9	cp	cntrlr		;control-r?
    1592/    C9FD : 20 33               	jr	nz,rdbuf14
    1593/    C9FF : C5                  rdbuf10 push	bc		;yes, start a new line and retype the old one.
    1594/    CA00 : CD 51 C9            	call	newline
    1595/    CA03 : C1                  	pop	bc
    1596/    CA04 : E1                  	pop	hl
    1597/    CA05 : E5                  	push	hl
    1598/    CA06 : C5                  	push	bc
    1599/    CA07 : 78                  rdbuf11 ld	a,b		;done whole line yet?
    1600/    CA08 : B7                  	or	a
    1601/    CA09 : 28 0C               	jr	z,rdbuf12
    1602/    CA0B : 23                  	inc	hl		;nope, get next character.
    1603/    CA0C : 4E                  	ld	c,(hl)
    1604/    CA0D : 05                  	dec	b		;count it.
    1605/    CA0E : C5                  	push	bc
    1606/    CA0F : E5                  	push	hl
    1607/    CA10 : CD 21 C9            	call	showit		;and display it.
    1608/    CA13 : E1                  	pop	hl
    1609/    CA14 : C1                  	pop	bc
    1610/    CA15 : 18 F0               	jr	rdbuf11
    1611/    CA17 : E5                  RDBUF12 push	hl		;done with line. If we were displaying
    1612/    CA18 : 3A 93 CA            	ld	a,(outflag)	;then update cursor position.
    1613/    CA1B : B7                  	or	a
    1614/    CA1C : CA 8F C9            	jp	z,rdbuf2
    1615/    CA1F : 21 95 CA            	ld	hl,curpos	;because this line is shorter, we must
    1616/    CA22 : 96                  	sub	(hl)		;back up the cursor (not the screen however)
    1617/    CA23 : 32 93 CA            	ld	(outflag),A	;some number of positions.
    1618/    CA26 : CD 44 C9            RDBUF13 call	backup		;note that as long as (OUTFLAG) is non
    1619/    CA29 : 21 93 CA            	ld	hl,outflag	;zero, the screen will not be changed.
    1620/    CA2C : 35                  	dec	(hl)
    1621/    CA2D : 20 F7               	jr	nz,rdbuf13
    1622/    CA2F : C3 8F C9            	jp	rdbuf2		;now just get the next character.
    1623/    CA32 :                     ;
    1624/    CA32 :                     ;   Just a normal character, put this in our buffer and echo.
    1625/    CA32 :                     ;
    1626/    CA32 : 23                  rdbuf14 inc	hl
    1627/    CA33 : 77                  	ld	(hl),a		;store character.
    1628/    CA34 : 04                  	inc	b		;and count it.
    1629/    CA35 : C5                  rdbuf15 push	bc
    1630/    CA36 : E5                  	push	hl
    1631/    CA37 : 4F                  	ld	c,a		;echo it now.
    1632/    CA38 : CD 21 C9            	call	showit
    1633/    CA3B : E1                  	pop	hl
    1634/    CA3C : C1                  	pop	bc
    1635/    CA3D : 7E                  	ld	a,(hl)		;was it an abort request?
    1636/    CA3E : FE 03               	cp	cntrlc		;control-c abort?
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 29 - 2/2/2018 12:56:16


    1637/    CA40 : 78                  	ld	a,b
    1638/    CA41 : 20 05               	jr	nz,rdbuf16
    1639/    CA43 : FE 01               	cp	1		;only if at start of line.
    1640/    CA45 : CA 00 00            	jp	z,0
    1641/    CA48 : B9                  rdbuf16 cp	c		;nope, have we filled the buffer?
    1642/    CA49 : DA 8D C9            	jp	c,rdbuf1
    1643/    CA4C : E1                  rdbuf17 pop	hl		;yes end the line and return.
    1644/    CA4D : 70                  	ld	(hl),b
    1645/    CA4E : 0E 0D               	ld	c,cr
    1646/    CA50 : C3 EC C8            	jp	outchar		;output (cr) and return.
    1647/    CA53 :                     ;
    1648/    CA53 :                     ;   Function to get a character from the console device.
    1649/    CA53 :                     ;
    1650/    CA53 : CD AC C8            getcon	call	getecho		;get and echo.
    1651/    CA56 : C3 8B CA            	jp	setstat		;save status and return.
    1652/    CA59 :                     ;
    1653/    CA59 :                     ;   Function to get a character from the tape reader device.
    1654/    CA59 :                     ;
    1655/    CA59 : CD 38 D5            getrdr	call	reader		;get a character from reader, set status and return.
    1656/    CA5C : C3 8B CA            	jp	setstat
    1657/    CA5F :                     ;
    1658/    CA5F :                     ;  Function to perform direct console i/o. If (C) contains (FF)
    1659/    CA5F :                     ; then this is an input request. If (C) contains (FE) then
    1660/    CA5F :                     ; this is a status request. Otherwise we are to output (C).
    1661/    CA5F :                     ;
    1662/    CA5F : 79                  dircio	ld	a,c		;test for (FF).
    1663/    CA60 : 3C                  	inc	a
    1664/    CA61 : 28 07               	jr	z,dirc1
    1665/    CA63 : 3C                  	inc	a		;test for (FE).
    1666/    CA64 : CA 29 D5            	jp	z,const
    1667/    CA67 : C3 2F D5            	jp	conout		;just output (C).
    1668/    CA6A : CD 29 D5            dirc1	call	const		;this is an input request.
    1669/    CA6D : B7                  	or	a
    1670/    CA6E : CA B4 D4            	jp	z,goback1	;not ready? Just return (directly).
    1671/    CA71 : CD 2C D5            	call	conin		;yes, get character.
    1672/    CA74 : C3 8B CA            	jp	setstat		;set status and return.
    1673/    CA77 :                     ;
    1674/    CA77 :                     ;   Function to return the i/o byte.
    1675/    CA77 :                     ;
    1676/    CA77 : 3A 03 00            getiob	ld	a,(iobyte)
    1677/    CA7A : C3 8B CA            	jp	setstat
    1678/    CA7D :                     ;
    1679/    CA7D :                     ;   Function to set the i/o byte.
    1680/    CA7D :                     ;
    1681/    CA7D : 21 03 00            setiob	ld	hl,iobyte
    1682/    CA80 : 71                  	ld	(hl),c
    1683/    CA81 : C9                  	ret	
    1684/    CA82 :                     ;
    1685/    CA82 :                     ;   Function to print the character string pointed to by (DE)
    1686/    CA82 :                     ; on the console device. The string ends with a '$'.
    1687/    CA82 :                     ;
    1688/    CA82 : EB                  prtstr	ex	de,hl
    1689/    CA83 : 4D                  	ld	c,l
    1690/    CA84 : 44                  	ld	b,h		;now (BC) points to it.
    1691/    CA85 : C3 72 C9            	jp	prtmesg
    1692/    CA88 :                     ;
    1693/    CA88 :                     ;   Function to interigate the console device.
    1694/    CA88 :                     ;
    1695/    CA88 : CD C9 C8            getcsts call	ckconsol
    1696/    CA8B :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 30 - 2/2/2018 12:56:16


    1697/    CA8B :                     ;   Get here to set the status and return to the cleanup
    1698/    CA8B :                     ; section. Then back to the user.
    1699/    CA8B :                     ;
    1700/    CA8B : 32 CE CA            setstat ld	(status),a
    1701/    CA8E : C9                  rtn	ret	
    1702/    CA8F :                     ;
    1703/    CA8F :                     ;   Set the status to 1 (read or write error code).
    1704/    CA8F :                     ;
    1705/    CA8F : 3E 01               ioerr1	ld	a,1
    1706/    CA91 : 18 F8               	jr	setstat
    1707/    CA93 :                     ;
    1708/    CA93 : 00                  outflag		db	0	;output flag (non zero means no output).
    1709/    CA94 : 02                  starting	db	2	;starting position for cursor.
    1710/    CA95 : 00                  curpos		db	0	;cursor position (0=start of line).
    1711/    CA96 : 00                  prtflag		db	0	;printer flag (control-p toggle). List if non zero.
    1712/    CA97 : 00                  charbuf		db	0	;single input character buffer.
    1713/    CA98 :                     ;
    1714/    CA98 :                     ;   Stack area for BDOS calls.
    1715/    CA98 :                     ;
    1716/    CA98 : 00 00               usrstack	dw	0		;save users stack pointer here.
    1717/    CA9A :                     ;
    1718/    CA9A : 00 00 00 00 00 00   		db	0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 
    1719/    CAA7 : 00 00 00 00 00 00   		db	0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 
    1720/    CAB2 : 00 00 00 00 00 00   		db	0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 
    1721/    CABF : 00 00 00 00 00 00   		db	0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 
    1722/    CACA :                     
    1723/    CACA : =CACAH              stkarea  equ	$		;end of stack area.
    1724/    CACA :                     ;
    1725/    CACA : 00                  userno	db	0		;current user number.
    1726/    CACB : 00                  active	db	0		;currently active drive.
    1727/    CACC : 00 00               params	dw	0		;save (DE) parameters here on entry.
    1728/    CACE : 00 00               status	dw	0		;status returned from bdos function.
    1729/    CAD0 :                     ;
    1730/    CAD0 :                     ;   Select error occured, jump to error routine.
    1731/    CAD0 :                     ;
    1732/    CAD0 : 21 B3 C7            slcterr ld	hl,badslct
    1733/    CAD3 :                     ;
    1734/    CAD3 :                     ;   Jump to (HL) indirectly.
    1735/    CAD3 :                     ;
    1736/    CAD3 : 5E                  jumphl	ld	e,(hl)
    1737/    CAD4 : 23                  	inc	hl
    1738/    CAD5 : 56                  	ld	d,(hl)		;now (DE) contain the desired address.
    1739/    CAD6 : EB                  	ex	de,hl
    1740/    CAD7 : E9                  	jp	(hl)
    1741/    CAD8 :                     ;
    1742/    CAD8 :                     ;   Block move. (DE) to (HL), (C) bytes total.
    1743/    CAD8 :                     ;
    1744/    CAD8 : 0C                  de2hl	inc	c		;is count down to zero?
    1745/    CAD9 : 0D                  de2hl1	dec	c
    1746/    CADA : C8                  	ret	z		;yes, we are done.
    1747/    CADB : 1A                  	ld	a,(de)		;no, move one more byte.
    1748/    CADC : 77                  	ld	(hl),a
    1749/    CADD : 13                  	inc	de
    1750/    CADE : 23                  	inc	hl
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 31 - 2/2/2018 12:56:16


    1751/    CADF : 18 F8               	jr	de2hl1		;and repeat.
    1752/    CAE1 :                     ;
    1753/    CAE1 :                     ;   Select the desired drive.
    1754/    CAE1 :                     ;
    1755/    CAE1 : 3A CB CA            select	ld	a,(active)	;get active disk.
    1756/    CAE4 : 4F                  	ld	c,a
    1757/    CAE5 : CD 3E D5            	call	seldsk		;select it.
    1758/    CAE8 : 7C                  	ld	a,h		;valid drive?
    1759/    CAE9 : B5                  	or	l		;valid drive?
    1760/    CAEA : C8                  	ret	z		;return if not.
    1761/    CAEB :                     ;
    1762/    CAEB :                     ;   Here, the BIOS returned the address of the parameter block
    1763/    CAEB :                     ; in (HL). We will extract the necessary pointers and save them.
    1764/    CAEB :                     ;
    1765/    CAEB : 5E                  	ld	e,(hl)		;yes, get address of translation table into (DE).
    1766/    CAEC : 23                  	inc	hl
    1767/    CAED : 56                  	ld	d,(hl)
    1768/    CAEE : 23                  	inc	hl
    1769/    CAEF : 22 D6 D4            	ld	(scratch1),hl	;save pointers to scratch areas.
    1770/    CAF2 : 23                  	inc	hl
    1771/    CAF3 : 23                  	inc	hl
    1772/    CAF4 : 22 D8 D4            	ld	(scratch2),hl	;ditto.
    1773/    CAF7 : 23                  	inc	hl
    1774/    CAF8 : 23                  	inc	hl
    1775/    CAF9 : 22 DA D4            	ld	(scratch3),hl	;ditto.
    1776/    CAFC : 23                  	inc	hl
    1777/    CAFD : 23                  	inc	hl
    1778/    CAFE : EB                  	ex	de,hl		;now save the translation table address.
    1779/    CAFF : 22 F3 D4            	ld	(xlate),hl
    1780/    CB02 : 21 DC D4            	ld	hl,dirbuf	;put the next 8 bytes here.
    1781/    CB05 : 0E 08               	ld	c,8		;they consist of the directory buffer
    1782/    CB07 : CD D8 CA            	call	de2hl		;pointer, parameter block pointer,
    1783/    CB0A : 2A DE D4            	ld	hl,(diskpb)	;check and allocation vectors.
    1784/    CB0D : EB                  	ex	de,hl
    1785/    CB0E : 21 E4 D4            	ld	hl,sectors	;move parameter block into our ram.
    1786/    CB11 : 0E 0F               	ld	c,15		;it is 15 bytes long.
    1787/    CB13 : CD D8 CA            	call	de2hl
    1788/    CB16 : 2A E9 D4            	ld	hl,(dsksize)	;check disk size.
    1789/    CB19 : 7C                  	ld	a,h		;more than 256 blocks on this?
    1790/    CB1A : 21 00 D5            	ld	hl,bigdisk
    1791/    CB1D : 36 FF               	ld	(hl),0ffh	;set to samll.
    1792/    CB1F : B7                  	or	a
    1793/    CB20 : 28 02               	jr	z,select1
    1794/    CB22 : 36 00               	ld	(hl),0		;wrong, set to large.
    1795/    CB24 : 3E FF               select1	ld	a,0ffh		;clear the zero flag.
    1796/    CB26 : B7                  	or	a
    1797/    CB27 : C9                  	ret	
    1798/    CB28 :                     ;
    1799/    CB28 :                     ;   Routine to home the disk track head and clear pointers.
    1800/    CB28 :                     ;
    1801/    CB28 : CD 3B D5            homedrv call	home		;home the head.
    1802/    CB2B : AF                  	xor	a
    1803/    CB2C : 2A D8 D4            	ld	hl,(scratch2)	;set our track pointer also.
    1804/    CB2F : 77                  	ld	(hl),a
    1805/    CB30 : 23                  	inc	hl
    1806/    CB31 : 77                  	ld	(hl),a
    1807/    CB32 : 2A DA D4            	ld	hl,(scratch3)	;and our sector pointer.
    1808/    CB35 : 77                  	ld	(hl),a
    1809/    CB36 : 23                  	inc	hl
    1810/    CB37 : 77                  	ld	(hl),a
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 32 - 2/2/2018 12:56:16


    1811/    CB38 : C9                  	ret	
    1812/    CB39 :                     ;
    1813/    CB39 :                     ;   Do the actual disk read and check the error return status.
    1814/    CB39 :                     ;
    1815/    CB39 : CD 4A D5            doread	call	read
    1816/    CB3C : 18 03               	jr	ioret
    1817/    CB3E :                     ;
    1818/    CB3E :                     ;   Do the actual disk write and handle any bios error.
    1819/    CB3E :                     ;
    1820/    CB3E : CD 4D D5            dowrite call	write
    1821/    CB41 : B7                  ioret	or	a
    1822/    CB42 : C8                  	ret	z		;return unless an error occured.
    1823/    CB43 : 21 B1 C7            	ld	hl,badsctr	;bad read/write on this sector.
    1824/    CB46 : C3 D3 CA            	jp	jumphl
    1825/    CB49 :                     ;
    1826/    CB49 :                     ;   Routine to select the track and sector that the desired
    1827/    CB49 :                     ; block number falls in.
    1828/    CB49 :                     ;
    1829/    CB49 : 2A 0D D5            trksec	ld	hl,(filepos)	;get position of last accessed file
    1830/    CB4C : 0E 02               	ld	c,2		;in directory and compute sector #.
    1831/    CB4E : CD 65 CC            	call	shiftr		;sector #=file-position/4.
    1832/    CB51 : 22 08 D5            	ld	(blknmbr),hl	;save this as the block number of interest.
    1833/    CB54 : 22 0F D5            	ld	(cksumtbl),hl	;what's it doing here too?
    1834/    CB57 :                     ;
    1835/    CB57 :                     ;   if the sector number has already been set (BLKNMBR), enter
    1836/    CB57 :                     ; at this point.
    1837/    CB57 :                     ;
    1838/    CB57 : 21 08 D5            trksec1 ld	hl,blknmbr
    1839/    CB5A : 4E                  	ld	c,(hl)		;move sector number into (BC).
    1840/    CB5B : 23                  	inc	hl
    1841/    CB5C : 46                  	ld	b,(hl)
    1842/    CB5D : 2A DA D4            	ld	hl,(scratch3)	;get current sector number and
    1843/    CB60 : 5E                  	ld	e,(hl)		;move this into (DE).
    1844/    CB61 : 23                  	inc	hl
    1845/    CB62 : 56                  	ld	d,(hl)
    1846/    CB63 : 2A D8 D4            	ld	hl,(scratch2)	;get current track number.
    1847/    CB66 : 7E                  	ld	a,(hl)		;and this into (HL).
    1848/    CB67 : 23                  	inc	hl
    1849/    CB68 : 66                  	ld	h,(hl)
    1850/    CB69 : 6F                  	ld	l,a
    1851/    CB6A : 79                  trksec2 ld	a,c		;is desired sector before current one?
    1852/    CB6B : 93                  	sub	e
    1853/    CB6C : 78                  	ld	a,b
    1854/    CB6D : 9A                  	sbc	a,d
    1855/    CB6E : 30 0E               	jr	nc,trksec3
    1856/    CB70 : E5                  	push	hl		;yes, decrement sectors by one track.
    1857/    CB71 : 2A E4 D4            	ld	hl,(sectors)	;get sectors per track.
    1858/    CB74 : 7B                  	ld	a,e
    1859/    CB75 : 95                  	sub	l
    1860/    CB76 : 5F                  	ld	e,a
    1861/    CB77 : 7A                  	ld	a,d
    1862/    CB78 : 9C                  	sbc	a,h
    1863/    CB79 : 57                  	ld	d,a		;now we have backed up one full track.
    1864/    CB7A : E1                  	pop	hl
    1865/    CB7B : 2B                  	dec	hl		;adjust track counter.
    1866/    CB7C : 18 EC               	jr	trksec2
    1867/    CB7E : E5                  trksec3 push	hl		;desired sector is after current one.
    1868/    CB7F : 2A E4 D4            	ld	hl,(sectors)	;get sectors per track.
    1869/    CB82 : 19                  	add	hl,de		;bump sector pointer to next track.
    1870/    CB83 : 38 0B               	jr	c,trksec4
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 33 - 2/2/2018 12:56:16


    1871/    CB85 : 79                  	ld	a,c		;is desired sector now before current one?
    1872/    CB86 : 95                  	sub	l
    1873/    CB87 : 78                  	ld	a,b
    1874/    CB88 : 9C                  	sbc	a,h
    1875/    CB89 : 38 05               	jr	c,trksec4
    1876/    CB8B : EB                  	ex	de,hl		;not yes, increment track counter
    1877/    CB8C : E1                  	pop	hl		;and continue until it is.
    1878/    CB8D : 23                  	inc	hl
    1879/    CB8E : 18 EE               	jr	trksec3
    1880/    CB90 :                     ;
    1881/    CB90 :                     ;   here we have determined the track number that contains the
    1882/    CB90 :                     ; desired sector.
    1883/    CB90 :                     ;
    1884/    CB90 : E1                  trksec4 pop	hl		;get track number (HL).
    1885/    CB91 : C5                  	push	bc
    1886/    CB92 : D5                  	push	de
    1887/    CB93 : E5                  	push	hl
    1888/    CB94 : EB                  	ex	de,hl
    1889/    CB95 : 2A F1 D4            	ld	hl,(offset)	;adjust for first track offset.
    1890/    CB98 : 19                  	add	hl,de
    1891/    CB99 : 44                  	ld	b,h
    1892/    CB9A : 4D                  	ld	c,l
    1893/    CB9B : CD 41 D5            	call	settrk		;select this track.
    1894/    CB9E : D1                  	pop	de		;reset current track pointer.
    1895/    CB9F : 2A D8 D4            	ld	hl,(scratch2)
    1896/    CBA2 : 73                  	ld	(hl),e
    1897/    CBA3 : 23                  	inc	hl
    1898/    CBA4 : 72                  	ld	(hl),d
    1899/    CBA5 : D1                  	pop	de
    1900/    CBA6 : 2A DA D4            	ld	hl,(scratch3)	;reset the first sector on this track.
    1901/    CBA9 : 73                  	ld	(hl),e
    1902/    CBAA : 23                  	inc	hl
    1903/    CBAB : 72                  	ld	(hl),d
    1904/    CBAC : C1                  	pop	bc
    1905/    CBAD : 79                  	ld	a,c		;now subtract the desired one.
    1906/    CBAE : 93                  	sub	e		;to make it relative (1-# sectors/track).
    1907/    CBAF : 4F                  	ld	c,a
    1908/    CBB0 : 78                  	ld	a,b
    1909/    CBB1 : 9A                  	sbc	a,d
    1910/    CBB2 : 47                  	ld	b,a
    1911/    CBB3 : 2A F3 D4            	ld	hl,(xlate)	;translate this sector according to this table.
    1912/    CBB6 : EB                  	ex	de,hl
    1913/    CBB7 : CD 53 D5            	call	sectrn		;let the bios translate it.
    1914/    CBBA : 4D                  	ld	c,l
    1915/    CBBB : 44                  	ld	b,h
    1916/    CBBC : C3 44 D5            	jp	setsec		;and select it.
    1917/    CBBF :                     ;
    1918/    CBBF :                     ;   Compute block number from record number (SAVNREC) and
    1919/    CBBF :                     ; extent number (SAVEXT).
    1920/    CBBF :                     ;
    1921/    CBBF :                     getblock
    1922/    CBBF : 21 E6 D4            	ld	hl,blkshft	;get logical to physical conversion.
    1923/    CBC2 : 4E                  	ld	c,(hl)		;note that this is base 2 log of ratio.
    1924/    CBC3 : 3A 06 D5            	ld	a,(savnrec)	;get record number.
    1925/    CBC6 : B7                  getblk1 or	a		;compute (A)=(A)/2^BLKSHFT.
    1926/    CBC7 : 1F                  	rra	
    1927/    CBC8 : 0D                  	dec	c
    1928/    CBC9 : 20 FB               	jr	nz,getblk1
    1929/    CBCB : 47                  	ld	b,a		;save result in (B).
    1930/    CBCC : 3E 08               	ld	a,8
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 34 - 2/2/2018 12:56:16


    1931/    CBCE : 96                  	sub	(hl)
    1932/    CBCF : 4F                  	ld	c,a		;compute (C)=8-BLKSHFT.
    1933/    CBD0 : 3A 05 D5            	ld	a,(savext)
    1934/    CBD3 : 0D                  getblk2 dec	c		;compute (A)=SAVEXT*2^(8-BLKSHFT).
    1935/    CBD4 : 28 04               	jr	z,getblk3
    1936/    CBD6 : B7                  	or	a
    1937/    CBD7 : 17                  	rla	
    1938/    CBD8 : 18 F9               	jr	getblk2
    1939/    CBDA : 80                  getblk3 add	a,b
    1940/    CBDB : C9                  	ret	
    1941/    CBDC :                     ;
    1942/    CBDC :                     ;   Routine to extract the (BC) block byte from the fcb pointed
    1943/    CBDC :                     ; to by (PARAMS). If this is a big-disk, then these are 16 bit
    1944/    CBDC :                     ; block numbers, else they are 8 bit numbers.
    1945/    CBDC :                     ; Number is returned in (HL).
    1946/    CBDC :                     ;
    1947/    CBDC : 2A CC CA            extblk	ld	hl,(params)	;get fcb address.
    1948/    CBDF : 11 10 00            	ld	de,16		;block numbers start 16 bytes into fcb.
    1949/    CBE2 : 19                  	add	hl,de
    1950/    CBE3 : 09                  	add	hl,bc
    1951/    CBE4 : 3A 00 D5            	ld	a,(bigdisk)	;are we using a big-disk?
    1952/    CBE7 : B7                  	or	a
    1953/    CBE8 : 28 04               	jr	z,extblk1
    1954/    CBEA : 6E                  	ld	l,(hl)		;no, extract an 8 bit number from the fcb.
    1955/    CBEB : 26 00               	ld	h,0
    1956/    CBED : C9                  	ret	
    1957/    CBEE : 09                  extblk1 add	hl,bc		;yes, extract a 16 bit number.
    1958/    CBEF : 5E                  	ld	e,(hl)
    1959/    CBF0 : 23                  	inc	hl
    1960/    CBF1 : 56                  	ld	d,(hl)
    1961/    CBF2 : EB                  	ex	de,hl		;return in (HL).
    1962/    CBF3 : C9                  	ret	
    1963/    CBF4 :                     ;
    1964/    CBF4 :                     ;   Compute block number.
    1965/    CBF4 :                     ;
    1966/    CBF4 : CD BF CB            comblk	call	getblock
    1967/    CBF7 : 4F                  	ld	c,a
    1968/    CBF8 : 06 00               	ld	b,0
    1969/    CBFA : CD DC CB            	call	extblk
    1970/    CBFD : 22 08 D5            	ld	(blknmbr),hl
    1971/    CC00 : C9                  	ret	
    1972/    CC01 :                     ;
    1973/    CC01 :                     ;   Check for a zero block number (unused).
    1974/    CC01 :                     ;
    1975/    CC01 : 2A 08 D5            chkblk	ld	hl,(blknmbr)
    1976/    CC04 : 7D                  	ld	a,l		;is it zero?
    1977/    CC05 : B4                  	or	h
    1978/    CC06 : C9                  	ret	
    1979/    CC07 :                     ;
    1980/    CC07 :                     ;   Adjust physical block (BLKNMBR) and convert to logical
    1981/    CC07 :                     ; sector (LOGSECT). This is the starting sector of this block.
    1982/    CC07 :                     ; The actual sector of interest is then added to this and the
    1983/    CC07 :                     ; resulting sector number is stored back in (BLKNMBR). This
    1984/    CC07 :                     ; will still have to be adjusted for the track number.
    1985/    CC07 :                     ;
    1986/    CC07 : 3A E6 D4            logical ld	a,(blkshft)	;get log2(physical/logical sectors).
    1987/    CC0A : 2A 08 D5            	ld	hl,(blknmbr)	;get physical sector desired.
    1988/    CC0D : 29                  logicl1 add	hl,hl		;compute logical sector number.
    1989/    CC0E : 3D                  	dec	a		;note logical sectors are 128 bytes long.
    1990/    CC0F : 20 FC               	jr	nz,logicl1
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 35 - 2/2/2018 12:56:16


    1991/    CC11 : 22 0A D5            	ld	(logsect),hl	;save logical sector.
    1992/    CC14 : 3A E7 D4            	ld	a,(blkmask)	;get block mask.
    1993/    CC17 : 4F                  	ld	c,a
    1994/    CC18 : 3A 06 D5            	ld	a,(savnrec)	;get next sector to access.
    1995/    CC1B : A1                  	and	c		;extract the relative position within physical block.
    1996/    CC1C : B5                  	or	l		;and add it too logical sector.
    1997/    CC1D : 6F                  	ld	l,a
    1998/    CC1E : 22 08 D5            	ld	(blknmbr),hl	;and store.
    1999/    CC21 : C9                  	ret	
    2000/    CC22 :                     ;
    2001/    CC22 :                     ;   Set (HL) to point to extent byte in fcb.
    2002/    CC22 :                     ;
    2003/    CC22 : 2A CC CA            setext	ld	hl,(params)
    2004/    CC25 : 11 0C 00            	ld	de,12		;it is the twelth byte.
    2005/    CC28 : 19                  	add	hl,de
    2006/    CC29 : C9                  	ret	
    2007/    CC2A :                     ;
    2008/    CC2A :                     ;   Set (HL) to point to record count byte in fcb and (DE) to
    2009/    CC2A :                     ; next record number byte.
    2010/    CC2A :                     ;
    2011/    CC2A : 2A CC CA            sethlde ld	hl,(params)
    2012/    CC2D : 11 0F 00            	ld	de,15		;record count byte (#15).
    2013/    CC30 : 19                  	add	hl,de
    2014/    CC31 : EB                  	ex	de,hl
    2015/    CC32 : 21 11 00            	ld	hl,17		;next record number (#32).
    2016/    CC35 : 19                  	add	hl,de
    2017/    CC36 : C9                  	ret	
    2018/    CC37 :                     ;
    2019/    CC37 :                     ;   Save current file data from fcb.
    2020/    CC37 :                     ;
    2021/    CC37 : CD 2A CC            strdata call	sethlde
    2022/    CC3A : 7E                  	ld	a,(hl)		;get and store record count byte.
    2023/    CC3B : 32 06 D5            	ld	(savnrec),a
    2024/    CC3E : EB                  	ex	de,hl
    2025/    CC3F : 7E                  	ld	a,(hl)		;get and store next record number byte.
    2026/    CC40 : 32 04 D5            	ld	(savnxt),a
    2027/    CC43 : CD 22 CC            	call	setext		;point to extent byte.
    2028/    CC46 : 3A E8 D4            	ld	a,(extmask)	;get extent mask.
    2029/    CC49 : A6                  	and	(hl)
    2030/    CC4A : 32 05 D5            	ld	(savext),a	;and save extent here.
    2031/    CC4D : C9                  	ret	
    2032/    CC4E :                     ;
    2033/    CC4E :                     ;   Set the next record to access. If (MODE) is set to 2, then
    2034/    CC4E :                     ; the last record byte (SAVNREC) has the correct number to access.
    2035/    CC4E :                     ; For sequential access, (MODE) will be equal to 1.
    2036/    CC4E :                     ;
    2037/    CC4E : CD 2A CC            setnrec call	sethlde
    2038/    CC51 : 3A F8 D4            	ld	a,(mode)	;get sequential flag (=1).
    2039/    CC54 : FE 02               	cp	2		;a 2 indicates that no adder is needed.
    2040/    CC56 : 20 01               	jr	nz,stnrec1
    2041/    CC58 : AF                  	xor	a		;clear adder (random access?).
    2042/    CC59 : 4F                  stnrec1 ld	c,a
    2043/    CC5A : 3A 06 D5            	ld	a,(savnrec)	;get last record number.
    2044/    CC5D : 81                  	add	a,c		;increment record count.
    2045/    CC5E : 77                  	ld	(hl),a		;and set fcb's next record byte.
    2046/    CC5F : EB                  	ex	de,hl
    2047/    CC60 : 3A 04 D5            	ld	a,(savnxt)	;get next record byte from storage.
    2048/    CC63 : 77                  	ld	(hl),a		;and put this into fcb as number of records used.
    2049/    CC64 : C9                  	ret	
    2050/    CC65 :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 36 - 2/2/2018 12:56:16


    2051/    CC65 :                     ;   Shift (HL) right (C) bits.
    2052/    CC65 :                     ;
    2053/    CC65 : 0C                  shiftr 	inc	c
    2054/    CC66 : 0D                  SHIFTR1 dec	c
    2055/    CC67 : C8                  	ret	z
    2056/    CC68 : 7C                  	ld	a,h
    2057/    CC69 : B7                  	or	a
    2058/    CC6A : 1F                  	rra	
    2059/    CC6B : 67                  	ld	h,a
    2060/    CC6C : 7D                  	ld	a,l
    2061/    CC6D : 1F                  	rra	
    2062/    CC6E : 6F                  	ld	l,a
    2063/    CC6F : 18 F5               	jr	shiftr1
    2064/    CC71 :                     ;
    2065/    CC71 :                     ;   Compute the check-sum for the directory buffer. Return
    2066/    CC71 :                     ; integer sum in (A).
    2067/    CC71 :                     ;
    2068/    CC71 :                     checksum
    2069/    CC71 : 0E 80               	ld	c,128		;length of buffer.
    2070/    CC73 : 2A DC D4            	ld	hl,(dirbuf)	;get its location.
    2071/    CC76 : AF                  	xor	a		;clear summation byte.
    2072/    CC77 : 86                  chksum1 add	a,(hl)		;and compute sum ignoring carries.
    2073/    CC78 : 23                  	inc	hl
    2074/    CC79 : 0D                  	dec	c
    2075/    CC7A : 20 FB               	jr	nz,chksum1
    2076/    CC7C : C9                  	ret	
    2077/    CC7D :                     ;
    2078/    CC7D :                     ;   Shift (HL) left (C) bits.
    2079/    CC7D :                     ;
    2080/    CC7D : 0C                  shiftl	inc	c
    2081/    CC7E : 0D                  shiftl1 dec	c
    2082/    CC7F : C8                  	ret	z
    2083/    CC80 : 29                  	add	hl,hl		;shift left 1 bit.
    2084/    CC81 : 18 FB               	jr	shiftl1
    2085/    CC83 :                     ;
    2086/    CC83 :                     ;   Routine to set a bit in a 16 bit value contained in (BC).
    2087/    CC83 :                     ; The bit set depends on the current drive selection.
    2088/    CC83 :                     ;
    2089/    CC83 : C5                  setbit	push	bc		;save 16 bit word.
    2090/    CC84 : 3A CB CA            	ld	a,(active)	;get active drive.
    2091/    CC87 : 4F                  	ld	c,a
    2092/    CC88 : 21 01 00            	ld	hl,1
    2093/    CC8B : CD 7D CC            	call	shiftl		;shift bit 0 into place.
    2094/    CC8E : C1                  	pop	bc		;now 'or' this with the original word.
    2095/    CC8F : 79                  	ld	a,c
    2096/    CC90 : B5                  	or	l
    2097/    CC91 : 6F                  	ld	l,a		;low byte done, do high byte.
    2098/    CC92 : 78                  	ld	a,b
    2099/    CC93 : B4                  	or	h
    2100/    CC94 : 67                  	ld	h,a
    2101/    CC95 : C9                  	ret	
    2102/    CC96 :                     ;
    2103/    CC96 :                     ;   Extract the write protect status bit for the current drive.
    2104/    CC96 :                     ; The result is returned in (A), bit 0.
    2105/    CC96 :                     ;
    2106/    CC96 : 2A D0 D4            getwprt ld	hl,(wrtprt)	;get status bytes.
    2107/    CC99 : 3A CB CA            	ld	a,(active)	;which drive is current?
    2108/    CC9C : 4F                  	ld	c,a
    2109/    CC9D : CD 65 CC            	call	shiftr		;shift status such that bit 0 is the
    2110/    CCA0 : 7D                  	ld	a,l		;one of interest for this drive.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 37 - 2/2/2018 12:56:16


    2111/    CCA1 : E6 01               	and	01h		;and isolate it.
    2112/    CCA3 : C9                  	ret	
    2113/    CCA4 :                     ;
    2114/    CCA4 :                     ;   Function to write protect the current disk.
    2115/    CCA4 :                     ;
    2116/    CCA4 : 21 D0 D4            wrtprtd ld	hl,wrtprt	;point to status word.
    2117/    CCA7 : 4E                  	ld	c,(hl)		;set (BC) equal to the status.
    2118/    CCA8 : 23                  	inc	hl
    2119/    CCA9 : 46                  	ld	b,(hl)
    2120/    CCAA : CD 83 CC            	call	setbit		;and set this bit according to current drive.
    2121/    CCAD : 22 D0 D4            	ld	(wrtprt),hl	;then save.
    2122/    CCB0 : 2A EB D4            	ld	hl,(dirsize)	;now save directory size limit.
    2123/    CCB3 : 23                  	inc	hl		;remember the last one.
    2124/    CCB4 : EB                  	ex	de,hl
    2125/    CCB5 : 2A D6 D4            	ld	hl,(scratch1)	;and store it here.
    2126/    CCB8 : 73                  	ld	(hl),e		;put low byte.
    2127/    CCB9 : 23                  	inc	hl
    2128/    CCBA : 72                  	ld	(hl),d		;then high byte.
    2129/    CCBB : C9                  	ret	
    2130/    CCBC :                     ;
    2131/    CCBC :                     ;   Check for a read only file.
    2132/    CCBC :                     ;
    2133/    CCBC : CD D6 CC            chkrofl call	fcb2hl		;set (HL) to file entry in directory buffer.
    2134/    CCBF : 11 09 00            ckrof1	ld	de,9		;look at bit 7 of the ninth byte.
    2135/    CCC2 : 19                  	add	hl,de
    2136/    CCC3 : 7E                  	ld	a,(hl)
    2137/    CCC4 : 17                  	rla	
    2138/    CCC5 : D0                  	ret	nc		;return if ok.
    2139/    CCC6 : 21 B7 C7            	ld	hl,rofile	;else, print error message and terminate.
    2140/    CCC9 : C3 D3 CA            	jp	jumphl
    2141/    CCCC :                     ;
    2142/    CCCC :                     ;   Check the write protect status of the active disk.
    2143/    CCCC :                     ;
    2144/    CCCC : CD 96 CC            chkwprt call	getwprt
    2145/    CCCF : C8                  	ret	z		;return if ok.
    2146/    CCD0 : 21 B5 C7            	ld	hl,rodisk	;else print message and terminate.
    2147/    CCD3 : C3 D3 CA            	jp	jumphl
    2148/    CCD6 :                     ;
    2149/    CCD6 :                     ;   Routine to set (HL) pointing to the proper entry in the
    2150/    CCD6 :                     ; directory buffer.
    2151/    CCD6 :                     ;
    2152/    CCD6 : 2A DC D4            fcb2hl	ld	hl,(dirbuf)	;get address of buffer.
    2153/    CCD9 : 3A 0C D5            	ld	a,(fcbpos)	;relative position of file.
    2154/    CCDC :                     ;
    2155/    CCDC :                     ;   Routine to add (A) to (HL).
    2156/    CCDC :                     ;
    2157/    CCDC : 85                  adda2hl add	a,l
    2158/    CCDD : 6F                  	ld	l,a
    2159/    CCDE : D0                  	ret	nc
    2160/    CCDF : 24                  	inc	h		;take care of any carry.
    2161/    CCE0 : C9                  	ret	
    2162/    CCE1 :                     ;
    2163/    CCE1 :                     ;   Routine to get the 's2' byte from the fcb supplied in
    2164/    CCE1 :                     ; the initial parameter specification.
    2165/    CCE1 :                     ;
    2166/    CCE1 : 2A CC CA            gets2	ld	hl,(params)	;get address of fcb.
    2167/    CCE4 : 11 0E 00            	ld	de,14		;relative position of 's2'.
    2168/    CCE7 : 19                  	add	hl,de
    2169/    CCE8 : 7E                  	ld	a,(hl)		;extract this byte.
    2170/    CCE9 : C9                  	ret	
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 38 - 2/2/2018 12:56:16


    2171/    CCEA :                     ;
    2172/    CCEA :                     ;   Clear the 's2' byte in the fcb.
    2173/    CCEA :                     ;
    2174/    CCEA : CD E1 CC            clears2 call	gets2		;this sets (HL) pointing to it.
    2175/    CCED : 36 00               	ld	(hl),0		;now clear it.
    2176/    CCEF : C9                  	ret	
    2177/    CCF0 :                     ;
    2178/    CCF0 :                     ;   Set bit 7 in the 's2' byte of the fcb.
    2179/    CCF0 :                     ;
    2180/    CCF0 : CD E1 CC            sets2b7 call	gets2		;get the byte.
    2181/    CCF3 : F6 80               	or	80h		;and set bit 7.
    2182/    CCF5 : 77                  	ld	(hl),a		;then store.
    2183/    CCF6 : C9                  	ret	
    2184/    CCF7 :                     ;
    2185/    CCF7 :                     ;   Compare (FILEPOS) with (SCRATCH1) and set flags based on
    2186/    CCF7 :                     ; the difference. This checks to see if there are more file
    2187/    CCF7 :                     ; names in the directory. We are at (FILEPOS) and there are
    2188/    CCF7 :                     ; (SCRATCH1) of them to check.
    2189/    CCF7 :                     ;
    2190/    CCF7 : 2A 0D D5            morefls ld	hl,(filepos)	;we are here.
    2191/    CCFA : EB                  	ex	de,hl
    2192/    CCFB : 2A D6 D4            	ld	hl,(scratch1)	;and don't go past here.
    2193/    CCFE : 7B                  	ld	a,e		;compute difference but don't keep.
    2194/    CCFF : 96                  	sub	(hl)
    2195/    CD00 : 23                  	inc	hl
    2196/    CD01 : 7A                  	ld	a,d
    2197/    CD02 : 9E                  	sbc	a,(hl)		;set carry if no more names.
    2198/    CD03 : C9                  	ret	
    2199/    CD04 :                     ;
    2200/    CD04 :                     ;   Call this routine to prevent (SCRATCH1) from being greater
    2201/    CD04 :                     ; than (FILEPOS).
    2202/    CD04 :                     ;
    2203/    CD04 : CD F7 CC            chknmbr call	morefls		;SCRATCH1 too big?
    2204/    CD07 : D8                  	ret	c
    2205/    CD08 : 13                  	inc	de		;yes, reset it to (FILEPOS).
    2206/    CD09 : 72                  	ld	(hl),d
    2207/    CD0A : 2B                  	dec	hl
    2208/    CD0B : 73                  	ld	(hl),e
    2209/    CD0C : C9                  	ret	
    2210/    CD0D :                     ;
    2211/    CD0D :                     ;   Compute (HL)=(DE)-(HL)
    2212/    CD0D :                     ;
    2213/    CD0D : 7B                  subhl	ld	a,e		;compute difference.
    2214/    CD0E : 95                  	sub	l
    2215/    CD0F : 6F                  	ld	l,a		;store low byte.
    2216/    CD10 : 7A                  	ld	a,d
    2217/    CD11 : 9C                  	sbc	a,h
    2218/    CD12 : 67                  	ld	h,a		;and then high byte.
    2219/    CD13 : C9                  	ret	
    2220/    CD14 :                     ;
    2221/    CD14 :                     ;   Set the directory checksum byte.
    2222/    CD14 :                     ;
    2223/    CD14 : 0E FF               setdir	ld	c,0ffh
    2224/    CD16 :                     ;
    2225/    CD16 :                     ;   Routine to set or compare the directory checksum byte. If
    2226/    CD16 :                     ; (C)=0ffh, then this will set the checksum byte. Else the byte
    2227/    CD16 :                     ; will be checked. If the check fails (the disk has been changed),
    2228/    CD16 :                     ; then this disk will be write protected.
    2229/    CD16 :                     ;
    2230/    CD16 :                     checkdir
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 39 - 2/2/2018 12:56:16


    2231/    CD16 : 2A 0F D5            	ld	hl,(cksumtbl)
    2232/    CD19 : EB                  	ex	de,hl
    2233/    CD1A : 2A EF D4            	ld	hl,(alloc1)
    2234/    CD1D : CD 0D CD            	call	subhl
    2235/    CD20 : D0                  	ret	nc		;ok if (CKSUMTBL) > (ALLOC1), so return.
    2236/    CD21 : C5                  	push	bc
    2237/    CD22 : CD 71 CC            	call	checksum	;else compute checksum.
    2238/    CD25 : 2A E0 D4            	ld	hl,(chkvect)	;get address of checksum table.
    2239/    CD28 : EB                  	ex	de,hl
    2240/    CD29 : 2A 0F D5            	ld	hl,(cksumtbl)
    2241/    CD2C : 19                  	add	hl,de		;set (HL) to point to byte for this drive.
    2242/    CD2D : C1                  	pop	bc
    2243/    CD2E : 0C                  	inc	c		;set or check ?
    2244/    CD2F : 28 0A               	jr	z,chkdir1
    2245/    CD31 : BE                  	cp	(hl)		;check them.
    2246/    CD32 : C8                  	ret	z		;return if they are the same.
    2247/    CD33 : CD F7 CC            	call	morefls		;not the same, do we care?
    2248/    CD36 : D0                  	ret	nc
    2249/    CD37 : CD A4 CC            	call	wrtprtd		;yes, mark this as write protected.
    2250/    CD3A : C9                  	ret	
    2251/    CD3B : 77                  chkdir1 ld	(hl),a		;just set the byte.
    2252/    CD3C : C9                  	ret	
    2253/    CD3D :                     ;
    2254/    CD3D :                     ;   Do a write to the directory of the current disk.
    2255/    CD3D :                     ;
    2256/    CD3D :                     dirwrite
    2257/    CD3D : CD 14 CD            	call	setdir		;set checksum byte.
    2258/    CD40 : CD 56 CD            	call	dirdma		;set directory dma address.
    2259/    CD43 : 0E 01               	ld	c,1		;tell the bios to actually write.
    2260/    CD45 : CD 3E CB            	call	dowrite		;then do the write.
    2261/    CD48 : C3 51 CD            	jp	defdma
    2262/    CD4B :                     ;
    2263/    CD4B :                     ;   Read from the directory.
    2264/    CD4B :                     ;
    2265/    CD4B : CD 56 CD            dirread call	dirdma		;set the directory dma address.
    2266/    CD4E : CD 39 CB            	call	doread		;and read it.
    2267/    CD51 :                     ;
    2268/    CD51 :                     ;   Routine to set the dma address to the users choice.
    2269/    CD51 :                     ;
    2270/    CD51 : 21 D4 D4            defdma	ld	hl,userdma	;reset the default dma address and return.
    2271/    CD54 : 18 03               	jr	dirdma1
    2272/    CD56 :                     ;
    2273/    CD56 :                     ;   Routine to set the dma address for directory work.
    2274/    CD56 :                     ;
    2275/    CD56 : 21 DC D4            dirdma	ld	hl,dirbuf
    2276/    CD59 :                     ;
    2277/    CD59 :                     ;   Set the dma address. On entry, (HL) points to
    2278/    CD59 :                     ; word containing the desired dma address.
    2279/    CD59 :                     ;
    2280/    CD59 : 4E                  dirdma1 ld	c,(hl)
    2281/    CD5A : 23                  	inc	hl
    2282/    CD5B : 46                  	ld	b,(hl)		;setup (BC) and go to the bios to set it.
    2283/    CD5C : C3 47 D5            	jp	setdma
    2284/    CD5F :                     ;
    2285/    CD5F :                     ;   Move the directory buffer into user's dma space.
    2286/    CD5F :                     ;
    2287/    CD5F : 2A DC D4            movedir ld	hl,(dirbuf)	;buffer is located here, and
    2288/    CD62 : EB                  	ex	de,hl
    2289/    CD63 : 2A D4 D4            	ld	hl,(userdma)	; put it here.
    2290/    CD66 : 0E 80               	ld	c,128		;this is its length.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 40 - 2/2/2018 12:56:16


    2291/    CD68 : C3 D8 CA            	jp	de2hl		;move it now and return.
    2292/    CD6B :                     ;
    2293/    CD6B :                     ;   Check (FILEPOS) and set the zero flag if it equals 0ffffh.
    2294/    CD6B :                     ;
    2295/    CD6B :                     ckfilpos
    2296/    CD6B : 21 0D D5            	ld	hl,filepos
    2297/    CD6E : 7E                  	ld	a,(hl)
    2298/    CD6F : 23                  	inc	hl
    2299/    CD70 : BE                  	cp	(hl)		;are both bytes the same?
    2300/    CD71 : C0                  	ret	nz
    2301/    CD72 : 3C                  	inc	a		;yes, but are they each 0ffh?
    2302/    CD73 : C9                  	ret	
    2303/    CD74 :                     ;
    2304/    CD74 :                     ;   Set location (FILEPOS) to 0ffffh.
    2305/    CD74 :                     ;
    2306/    CD74 :                     stfilpos
    2307/    CD74 : 21 FF FF            	ld	hl,0ffffh
    2308/    CD77 : 22 0D D5            	ld	(filepos),hl
    2309/    CD7A : C9                  	ret	
    2310/    CD7B :                     ;
    2311/    CD7B :                     ;   Move on to the next file position within the current
    2312/    CD7B :                     ; directory buffer. If no more exist, set pointer to 0ffffh
    2313/    CD7B :                     ; and the calling routine will check for this. Enter with (C)
    2314/    CD7B :                     ; equal to 0ffh to cause the checksum byte to be set, else we
    2315/    CD7B :                     ; will check this disk and set write protect if checksums are
    2316/    CD7B :                     ; not the same (applies only if another directory sector must
    2317/    CD7B :                     ; be read).
    2318/    CD7B :                     ;
    2319/    CD7B : 2A EB D4            nxentry ld	hl,(dirsize)	;get directory entry size limit.
    2320/    CD7E : EB                  	ex	de,hl
    2321/    CD7F : 2A 0D D5            	ld	hl,(filepos)	;get current count.
    2322/    CD82 : 23                  	inc	hl		;go on to the next one.
    2323/    CD83 : 22 0D D5            	ld	(filepos),hl
    2324/    CD86 : CD 0D CD            	call	subhl		;(HL)=(DIRSIZE)-(FILEPOS)
    2325/    CD89 : 30 03               	jr	nc,nxent1	;is there more room left?
    2326/    CD8B : C3 74 CD            	jp	stfilpos	;no. Set this flag and return.
    2327/    CD8E : 3A 0D D5            nxent1	ld	a,(filepos)	;get file position within directory.
    2328/    CD91 : E6 03               	and	03h		;only look within this sector (only 4 entries fit).
    2329/    CD93 : 06 05               	ld	b,5		;convert to relative position (32 bytes each).
    2330/    CD95 : 87                  nxent2	add	a,a		;note that this is not efficient code.
    2331/    CD96 : 05                  	dec	b		;5 'ADD A's would be better.
    2332/    CD97 : 20 FC               	jr	nz,nxent2
    2333/    CD99 : 32 0C D5            	ld	(fcbpos),a	;save it as position of fcb.
    2334/    CD9C : B7                  	or	a
    2335/    CD9D : C0                  	ret	nz		;return if we are within buffer.
    2336/    CD9E : C5                  	push	bc
    2337/    CD9F : CD 49 CB            	call	trksec		;we need the next directory sector.
    2338/    CDA2 : CD 4B CD            	call	dirread
    2339/    CDA5 : C1                  	pop	bc
    2340/    CDA6 : C3 16 CD            	jp	checkdir
    2341/    CDA9 :                     ;
    2342/    CDA9 :                     ;   Routine to to get a bit from the disk space allocation
    2343/    CDA9 :                     ; map. It is returned in (A), bit position 0. On entry to here,
    2344/    CDA9 :                     ; set (BC) to the block number on the disk to check.
    2345/    CDA9 :                     ; On return, (D) will contain the original bit position for
    2346/    CDA9 :                     ; this block number and (HL) will point to the address for it.
    2347/    CDA9 :                     ;
    2348/    CDA9 :                     ckbitmap
    2349/    CDA9 : 79                  	ld	a,c		;determine bit number of interest.
    2350/    CDAA : E6 07               	and	07h		;compute (D)=(E)=(C and 7)+1.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 41 - 2/2/2018 12:56:16


    2351/    CDAC : 3C                  	inc	a
    2352/    CDAD : 5F                  	ld	e,a		;save particular bit number.
    2353/    CDAE : 57                  	ld	d,a
    2354/    CDAF :                     ;
    2355/    CDAF :                     ;   compute (BC)=(BC)/8.
    2356/    CDAF :                     ;
    2357/    CDAF : 79                  	ld	a,c
    2358/    CDB0 : 0F                  	rrca			;now shift right 3 bits.
    2359/    CDB1 : 0F                  	rrca	
    2360/    CDB2 : 0F                  	rrca	
    2361/    CDB3 : E6 1F               	and	1fh		;and clear bits 7,6,5.
    2362/    CDB5 : 4F                  	ld	c,a
    2363/    CDB6 : 78                  	ld	a,b
    2364/    CDB7 : 87                  	add	a,a		;now shift (B) into bits 7,6,5.
    2365/    CDB8 : 87                  	add	a,a
    2366/    CDB9 : 87                  	add	a,a
    2367/    CDBA : 87                  	add	a,a
    2368/    CDBB : 87                  	add	a,a
    2369/    CDBC : B1                  	or	c		;and add in (C).
    2370/    CDBD : 4F                  	ld	c,a		;ok, (C) ha been completed.
    2371/    CDBE : 78                  	ld	a,b		;is there a better way of doing this?
    2372/    CDBF : 0F                  	rrca	
    2373/    CDC0 : 0F                  	rrca	
    2374/    CDC1 : 0F                  	rrca	
    2375/    CDC2 : E6 1F               	and	1fh
    2376/    CDC4 : 47                  	ld	b,a		;and now (B) is completed.
    2377/    CDC5 :                     ;
    2378/    CDC5 :                     ;   use this as an offset into the disk space allocation
    2379/    CDC5 :                     ; table.
    2380/    CDC5 :                     ;
    2381/    CDC5 : 2A E2 D4            	ld	hl,(alocvect)
    2382/    CDC8 : 09                  	add	hl,bc
    2383/    CDC9 : 7E                  	ld	a,(hl)		;now get correct byte.
    2384/    CDCA : 07                  ckbmap1 rlca			;get correct bit into position 0.
    2385/    CDCB : 1D                  	dec	e
    2386/    CDCC : 20 FC               	jr	nz,ckbmap1
    2387/    CDCE : C9                  	ret	
    2388/    CDCF :                     ;
    2389/    CDCF :                     ;   Set or clear the bit map such that block number (BC) will be marked
    2390/    CDCF :                     ; as used. On entry, if (E)=0 then this bit will be cleared, if it equals
    2391/    CDCF :                     ; 1 then it will be set (don't use anyother values).
    2392/    CDCF :                     ;
    2393/    CDCF :                     stbitmap
    2394/    CDCF :                     
    2395/    CDCF : D5                  	push	de
    2396/    CDD0 : CD A9 CD            	call	ckbitmap	;get the byte of interest.
    2397/    CDD3 : E6 FE               	and	0feh		;clear the affected bit.
    2398/    CDD5 : C1                  	pop	bc
    2399/    CDD6 : B1                  	or	c		;and now set it acording to (C).
    2400/    CDD7 :                     ;
    2401/    CDD7 :                     ;  entry to restore the original bit position and then store
    2402/    CDD7 :                     ; in table. (A) contains the value, (D) contains the bit
    2403/    CDD7 :                     ; position (1-8), and (HL) points to the address within the
    2404/    CDD7 :                     ; space allocation table for this byte.
    2405/    CDD7 :                     ;
    2406/    CDD7 : 0F                  stbmap1:rrca			;restore original bit position.
    2407/    CDD8 : 15                  	dec	d
    2408/    CDD9 : 20 FC               	jr	nz,stbmap1
    2409/    CDDB : 77                  	ld	(hl),a		;and stor byte in table.
    2410/    CDDC : C9                  	ret	
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 42 - 2/2/2018 12:56:16


    2411/    CDDD :                     ;
    2412/    CDDD :                     ;   Set/clear space used bits in allocation map for this file.
    2413/    CDDD :                     ; On entry, (C)=1 to set the map and (C)=0 to clear it.
    2414/    CDDD :                     ;
    2415/    CDDD : CD D6 CC            setfile call	fcb2hl		;get address of fcb
    2416/    CDE0 : 11 10 00            	ld	de,16
    2417/    CDE3 : 19                  	add	hl,de		;get to block number bytes.
    2418/    CDE4 : C5                  	push	bc
    2419/    CDE5 : 0E 11               	ld	c,17		;check all 17 bytes (max) of table.
    2420/    CDE7 : D1                  setfl1 	pop	de
    2421/    CDE8 : 0D                  	dec	c		;done all bytes yet?
    2422/    CDE9 : C8                  	ret	z
    2423/    CDEA : D5                  	push	de
    2424/    CDEB : 3A 00 D5            	ld	a,(bigdisk)	;check disk size for 16 bit block numbers.
    2425/    CDEE : B7                  	or	a
    2426/    CDEF : 28 08               	jr	z,setfl2
    2427/    CDF1 : C5                  	push	bc		;only 8 bit numbers. set (BC) to this one.
    2428/    CDF2 : E5                  	push	hl
    2429/    CDF3 : 4E                  	ld	c,(hl)		;get low byte from table, always
    2430/    CDF4 : 06 00               	ld	b,0		;set high byte to zero.
    2431/    CDF6 : C3 FF CD            	jp	setfl3
    2432/    CDF9 : 0D                  setfl2	dec	c		;for 16 bit block numbers, adjust counter.
    2433/    CDFA : C5                  	push	bc
    2434/    CDFB : 4E                  	ld	c,(hl)		;now get both the low and high bytes.
    2435/    CDFC : 23                  	inc	hl
    2436/    CDFD : 46                  	ld	b,(hl)
    2437/    CDFE : E5                  	push	hl
    2438/    CDFF : 79                  setfl3	ld	a,c		;block used?
    2439/    CE00 : B0                  	or	b
    2440/    CE01 : 28 0A               	jr	z,setfl4
    2441/    CE03 : 2A E9 D4            	ld	hl,(dsksize)	;is this block number within the
    2442/    CE06 : 7D                  	ld	a,l		;space on the disk?
    2443/    CE07 : 91                  	sub	c
    2444/    CE08 : 7C                  	ld	a,h
    2445/    CE09 : 98                  	sbc	a,b
    2446/    CE0A : D4 CF CD            	call	nc,stbitmap	;yes, set the proper bit.
    2447/    CE0D : E1                  SETFL4	pop	hl		;point to next block number in fcb.
    2448/    CE0E : 23                  	inc	hl
    2449/    CE0F : C1                  	pop	bc
    2450/    CE10 : 18 D5               	jr	setfl1
    2451/    CE12 :                     ;
    2452/    CE12 :                     ;   Construct the space used allocation bit map for the active
    2453/    CE12 :                     ; drive. If a file name starts with '$' and it is under the
    2454/    CE12 :                     ; current user number, then (STATUS) is set to minus 1. Otherwise
    2455/    CE12 :                     ; it is not set at all.
    2456/    CE12 :                     ;
    2457/    CE12 : 2A E9 D4            bitmap	ld	hl,(dsksize)	;compute size of allocation table.
    2458/    CE15 : 0E 03               	ld	c,3
    2459/    CE17 : CD 65 CC            	call	shiftr		;(HL)=(HL)/8.
    2460/    CE1A : 23                  	inc	hl		;at lease 1 byte.
    2461/    CE1B : 44                  	ld	b,h
    2462/    CE1C : 4D                  	ld	c,l		;set (BC) to the allocation table length.
    2463/    CE1D :                     ;
    2464/    CE1D :                     ;   Initialize the bitmap for this drive. Right now, the first
    2465/    CE1D :                     ; two bytes are specified by the disk parameter block. However
    2466/    CE1D :                     ; a patch could be entered here if it were necessary to setup
    2467/    CE1D :                     ; this table in a special mannor. For example, the bios could
    2468/    CE1D :                     ; determine locations of 'bad blocks' and set them as already
    2469/    CE1D :                     ; 'used' in the map.
    2470/    CE1D :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 43 - 2/2/2018 12:56:16


    2471/    CE1D : 2A E2 D4            	ld	hl,(alocvect)	;now zero out the table now.
    2472/    CE20 : 36 00               bitmap1 ld	(hl),0
    2473/    CE22 : 23                  	inc	hl
    2474/    CE23 : 0B                  	dec	bc
    2475/    CE24 : 78                  	ld	a,b
    2476/    CE25 : B1                  	or	c
    2477/    CE26 : 20 F8               	jr	nz,bitmap1
    2478/    CE28 : 2A ED D4            	ld	hl,(alloc0)	;get initial space used by directory.
    2479/    CE2B : EB                  	ex	de,hl
    2480/    CE2C : 2A E2 D4            	ld	hl,(alocvect)	;and put this into map.
    2481/    CE2F : 73                  	ld	(hl),e
    2482/    CE30 : 23                  	inc	hl
    2483/    CE31 : 72                  	ld	(hl),d
    2484/    CE32 :                     ;
    2485/    CE32 :                     ;   End of initialization portion.
    2486/    CE32 :                     ;
    2487/    CE32 : CD 28 CB            	call	homedrv		;now home the drive.
    2488/    CE35 : 2A D6 D4            	ld	hl,(scratch1)
    2489/    CE38 : 36 03               	ld	(hl),3		;force next directory request to read
    2490/    CE3A : 23                  	inc	hl		;in a sector.
    2491/    CE3B : 36 00               	ld	(hl),0
    2492/    CE3D : CD 74 CD            	call	stfilpos	;clear initial file position also.
    2493/    CE40 : 0E FF               bitmap2 ld	c,0ffh		;read next file name in directory
    2494/    CE42 : CD 7B CD            	call	nxentry		;and set checksum byte.
    2495/    CE45 : CD 6B CD            	call	ckfilpos	;is there another file?
    2496/    CE48 : C8                  	ret	z
    2497/    CE49 : CD D6 CC            	call	fcb2hl		;yes, get its address.
    2498/    CE4C : 3E E5               	ld	a,0e5h
    2499/    CE4E : BE                  	cp	(hl)		;empty file entry?
    2500/    CE4F : 28 EF               	jr	z,bitmap2
    2501/    CE51 : 3A CA CA            	ld	a,(userno)	;no, correct user number?
    2502/    CE54 : BE                  	cp	(hl)
    2503/    CE55 : 20 0A               	jr	nz,bitmap3
    2504/    CE57 : 23                  	inc	hl
    2505/    CE58 : 7E                  	ld	a,(hl)		;yes, does name start with a '$'?
    2506/    CE59 : D6 24               	sub	'$'
    2507/    CE5B : 20 04               	jr	nz,bitmap3
    2508/    CE5D : 3D                  	dec	a		;yes, set atatus to minus one.
    2509/    CE5E : 32 CE CA            	ld	(status),a
    2510/    CE61 : 0E 01               bitmap3 ld	c,1		;now set this file's space as used in bit map.
    2511/    CE63 : CD DD CD            	call	setfile
    2512/    CE66 : CD 04 CD            	call	chknmbr		;keep (SCRATCH1) in bounds.
    2513/    CE69 : 18 D5               	jr	bitmap2
    2514/    CE6B :                     ;
    2515/    CE6B :                     ;   Set the status (STATUS) and return.
    2516/    CE6B :                     ;
    2517/    CE6B :                     ststatus
    2518/    CE6B : 3A F7 D4            	ld	a,(fndstat)
    2519/    CE6E : C3 8B CA            	jp	setstat
    2520/    CE71 :                     ;
    2521/    CE71 :                     ;   Check extents in (A) and (C). Set the zero flag if they
    2522/    CE71 :                     ; are the same. The number of 16k chunks of disk space that
    2523/    CE71 :                     ; the directory extent covers is expressad is (EXTMASK+1).
    2524/    CE71 :                     ; No registers are modified.
    2525/    CE71 :                     ;
    2526/    CE71 : C5                  samext	push	bc
    2527/    CE72 : F5                  	push	af
    2528/    CE73 : 3A E8 D4            	ld	a,(extmask)	;get extent mask and use it to
    2529/    CE76 : 2F                  	cpl			;to compare both extent numbers.
    2530/    CE77 : 47                  	ld	b,a		;save resulting mask here.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 44 - 2/2/2018 12:56:16


    2531/    CE78 : 79                  	ld	a,c		;mask first extent and save in (C).
    2532/    CE79 : A0                  	and	b
    2533/    CE7A : 4F                  	ld	c,a
    2534/    CE7B : F1                  	pop	af		;now mask second extent and compare
    2535/    CE7C : A0                  	and	b		;with the first one.
    2536/    CE7D : 91                  	sub	c
    2537/    CE7E : E6 1F               	and	1fh		;(* only check buts 0-4 *)
    2538/    CE80 : C1                  	pop	bc		;the zero flag is set if they are the same.
    2539/    CE81 : C9                  	ret			;restore (BC) and return.
    2540/    CE82 :                     ;
    2541/    CE82 :                     ;   Search for the first occurence of a file name. On entry,
    2542/    CE82 :                     ; register (C) should contain the number of bytes of the fcb
    2543/    CE82 :                     ; that must match.
    2544/    CE82 :                     ;
    2545/    CE82 : 3E FF               findfst ld	a,0ffh
    2546/    CE84 : 32 F7 D4            	ld	(fndstat),a
    2547/    CE87 : 21 FB D4            	ld	hl,counter	;save character count.
    2548/    CE8A : 71                  	ld	(hl),c
    2549/    CE8B : 2A CC CA            	ld	hl,(params)	;get filename to match.
    2550/    CE8E : 22 FC D4            	ld	(savefcb),hl	;and save.
    2551/    CE91 : CD 74 CD            	call	stfilpos	;clear initial file position (set to 0ffffh).
    2552/    CE94 : CD 28 CB            	call	homedrv		;home the drive.
    2553/    CE97 :                     ;
    2554/    CE97 :                     ;   Entry to locate the next occurence of a filename within the
    2555/    CE97 :                     ; directory. The disk is not expected to have been changed. If
    2556/    CE97 :                     ; it was, then it will be write protected.
    2557/    CE97 :                     ;
    2558/    CE97 : 0E 00               findnxt ld	c,0		;write protect the disk if changed.
    2559/    CE99 : CD 7B CD            	call	nxentry		;get next filename entry in directory.
    2560/    CE9C : CD 6B CD            	call	ckfilpos	;is file position = 0ffffh?
    2561/    CE9F : 28 52               	jr	z,fndnxt6	;yes, exit now then.
    2562/    CEA1 : 2A FC D4            	ld	hl,(savefcb)	;set (DE) pointing to filename to match.
    2563/    CEA4 : EB                  	ex	de,hl
    2564/    CEA5 : 1A                  	ld	a,(de)
    2565/    CEA6 : FE E5               	cp	0e5h		;empty directory entry?
    2566/    CEA8 : 28 07               	jr	z,fndnxt1	;(* are we trying to reserect erased entries? *)
    2567/    CEAA : D5                  	push	de
    2568/    CEAB : CD F7 CC            	call	morefls		;more files in directory?
    2569/    CEAE : D1                  	pop	de
    2570/    CEAF : 30 42               	jr	nc,fndnxt6	;no more. Exit now.
    2571/    CEB1 : CD D6 CC            fndnxt1 call	fcb2hl		;get address of this fcb in directory.
    2572/    CEB4 : 3A FB D4            	ld	a,(counter)	;get number of bytes (characters) to check.
    2573/    CEB7 : 4F                  	ld	c,a
    2574/    CEB8 : 06 00               	ld	b,0		;initialize byte position counter.
    2575/    CEBA : 79                  fndnxt2 ld	a,c		;are we done with the compare?
    2576/    CEBB : B7                  	or	a
    2577/    CEBC : 28 24               	jr	z,fndnxt5
    2578/    CEBE : 1A                  	ld	a,(de)		;no, check next byte.
    2579/    CEBF : FE 3F               	cp	'?'		;don't care about this character?
    2580/    CEC1 : 28 19               	jr	z,fndnxt4
    2581/    CEC3 : 78                  	ld	a,b		;get bytes position in fcb.
    2582/    CEC4 : FE 0D               	cp	13		;don't care about the thirteenth byte either.
    2583/    CEC6 : 28 14               	jr	z,fndnxt4
    2584/    CEC8 : FE 0C               	cp	12		;extent byte?
    2585/    CECA : 1A                  	ld	a,(de)
    2586/    CECB : 28 07               	jr	z,fndnxt3
    2587/    CECD : 96                  	sub	(hl)		;otherwise compare characters.
    2588/    CECE : E6 7F               	and	7fh
    2589/    CED0 : 20 C5               	jr	nz,findnxt	;not the same, check next entry.
    2590/    CED2 : 18 08               	jr	fndnxt4		;so far so good, keep checking.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 45 - 2/2/2018 12:56:16


    2591/    CED4 : C5                  fndnxt3 push	bc		;check the extent byte here.
    2592/    CED5 : 4E                  	ld	c,(hl)
    2593/    CED6 : CD 71 CE            	call	samext
    2594/    CED9 : C1                  	pop	bc
    2595/    CEDA : 20 BB               	jr	nz,findnxt	;not the same, look some more.
    2596/    CEDC :                     ;
    2597/    CEDC :                     ;   So far the names compare. Bump pointers to the next byte
    2598/    CEDC :                     ; and continue until all (C) characters have been checked.
    2599/    CEDC :                     ;
    2600/    CEDC : 13                  fndnxt4 inc	de		;bump pointers.
    2601/    CEDD : 23                  	inc	hl
    2602/    CEDE : 04                  	inc	b
    2603/    CEDF : 0D                  	dec	c		;adjust character counter.
    2604/    CEE0 : 18 D8               	jr	fndnxt2
    2605/    CEE2 : 3A 0D D5            fndnxt5 ld	a,(filepos)	;return the position of this entry.
    2606/    CEE5 : E6 03               	and	03h
    2607/    CEE7 : 32 CE CA            	ld	(status),a
    2608/    CEEA : 21 F7 D4            	ld	hl,fndstat
    2609/    CEED : 7E                  	ld	a,(hl)
    2610/    CEEE : 17                  	rla	
    2611/    CEEF : D0                  	ret	nc
    2612/    CEF0 : AF                  	xor	a
    2613/    CEF1 : 77                  	ld	(hl),a
    2614/    CEF2 : C9                  	ret	
    2615/    CEF3 :                     ;
    2616/    CEF3 :                     ;   Filename was not found. Set appropriate status.
    2617/    CEF3 :                     ;
    2618/    CEF3 : CD 74 CD            fndnxt6	call	stfilpos	;set (FILEPOS) to 0ffffh.
    2619/    CEF6 : 3E FF               	ld	a,0ffh		;say not located.
    2620/    CEF8 : C3 8B CA            	jp	setstat
    2621/    CEFB :                     ;
    2622/    CEFB :                     ;   Erase files from the directory. Only the first byte of the
    2623/    CEFB :                     ; fcb will be affected. It is set to (E5).
    2624/    CEFB :                     ;
    2625/    CEFB : CD CC CC            erafile call	chkwprt		;is disk write protected?
    2626/    CEFE : 0E 0C               	ld	c,12		;only compare file names.
    2627/    CF00 : CD 82 CE            	call	findfst		;get first file name.
    2628/    CF03 : CD 6B CD            erafil1 call	ckfilpos	;any found?
    2629/    CF06 : C8                  	ret	z		;nope, we must be done.
    2630/    CF07 : CD BC CC            	call	chkrofl		;is file read only?
    2631/    CF0A : CD D6 CC            	call	fcb2hl		;nope, get address of fcb and
    2632/    CF0D : 36 E5               	ld	(hl),0e5h	;set first byte to 'empty'.
    2633/    CF0F : 0E 00               	ld	c,0		;clear the space from the bit map.
    2634/    CF11 : CD DD CD            	call	setfile
    2635/    CF14 : CD 3D CD            	call	dirwrite	;now write the directory sector back out.
    2636/    CF17 : CD 97 CE            	call	findnxt		;find the next file name.
    2637/    CF1A : 18 E7               	jr	erafil1		;and repeat process.
    2638/    CF1C :                     ;
    2639/    CF1C :                     ;   Look through the space allocation map (bit map) for the
    2640/    CF1C :                     ; next available block. Start searching at block number (BC-1).
    2641/    CF1C :                     ; The search procedure is to look for an empty block that is
    2642/    CF1C :                     ; before the starting block. If not empty, look at a later
    2643/    CF1C :                     ; block number. In this way, we return the closest empty block
    2644/    CF1C :                     ; on either side of the 'target' block number. This will speed
    2645/    CF1C :                     ; access on random devices. For serial devices, this should be
    2646/    CF1C :                     ; changed to look in the forward direction first and then start
    2647/    CF1C :                     ; at the front and search some more.
    2648/    CF1C :                     ;
    2649/    CF1C :                     ;   On return, (DE)= block number that is empty and (HL) =0
    2650/    CF1C :                     ; if no empry block was found.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 46 - 2/2/2018 12:56:16


    2651/    CF1C :                     ;
    2652/    CF1C :                     fndspace
    2653/    CF1C : 50                  	ld	d,b		;set (DE) as the block that is checked.
    2654/    CF1D : 59                  	ld	e,c
    2655/    CF1E :                     ;
    2656/    CF1E :                     ;   Look before target block. Registers (BC) are used as the lower
    2657/    CF1E :                     ; pointer and (DE) as the upper pointer.
    2658/    CF1E :                     ;
    2659/    CF1E : 79                  fndspa1 ld	a,c		;is block 0 specified?
    2660/    CF1F : B0                  	or	b
    2661/    CF20 : 28 0B               	jr	z,fndspa2
    2662/    CF22 : 0B                  	dec	bc		;nope, check previous block.
    2663/    CF23 : D5                  	push	de
    2664/    CF24 : C5                  	push	bc
    2665/    CF25 : CD A9 CD            	call	ckbitmap
    2666/    CF28 : 1F                  	rra			;is this block empty?
    2667/    CF29 : 30 1A               	jr	nc,fndspa3	;yes. use this.
    2668/    CF2B :                     ;
    2669/    CF2B :                     ;   Note that the above logic gets the first block that it finds
    2670/    CF2B :                     ; that is empty. Thus a file could be written 'backward' making
    2671/    CF2B :                     ; it very slow to access. This could be changed to look for the
    2672/    CF2B :                     ; first empty block and then continue until the start of this
    2673/    CF2B :                     ; empty space is located and then used that starting block.
    2674/    CF2B :                     ; This should help speed up access to some files especially on
    2675/    CF2B :                     ; a well used disk with lots of fairly small 'holes'.
    2676/    CF2B :                     ;
    2677/    CF2B : C1                  	pop	bc		;nope, check some more.
    2678/    CF2C : D1                  	pop	de
    2679/    CF2D :                     ;
    2680/    CF2D :                     ;   Now look after target block.
    2681/    CF2D :                     ;
    2682/    CF2D : 2A E9 D4            fndspa2 ld	hl,(dsksize)	;is block (DE) within disk limits?
    2683/    CF30 : 7B                  	ld	a,e
    2684/    CF31 : 95                  	sub	l
    2685/    CF32 : 7A                  	ld	a,d
    2686/    CF33 : 9C                  	sbc	a,h
    2687/    CF34 : 30 17               	jr	nc,fndspa4
    2688/    CF36 : 13                  	inc	de		;yes, move on to next one.
    2689/    CF37 : C5                  	push	bc
    2690/    CF38 : D5                  	push	de
    2691/    CF39 : 42                  	ld	b,d
    2692/    CF3A : 4B                  	ld	c,e
    2693/    CF3B : CD A9 CD            	call	ckbitmap	;check it.
    2694/    CF3E : 1F                  	rra			;empty?
    2695/    CF3F : 30 04               	jr	nc,fndspa3
    2696/    CF41 : D1                  	pop	de		;nope, continue searching.
    2697/    CF42 : C1                  	pop	bc
    2698/    CF43 : 18 D9               	jr	fndspa1
    2699/    CF45 :                     ;
    2700/    CF45 :                     ;   Empty block found. Set it as used and return with (HL)
    2701/    CF45 :                     ; pointing to it (true?).
    2702/    CF45 :                     ;
    2703/    CF45 : 17                  fndspa3 rla			;reset byte.
    2704/    CF46 : 3C                  	inc	a		;and set bit 0.
    2705/    CF47 : CD D7 CD            	call	stbmap1		;update bit map.
    2706/    CF4A : E1                  	pop	hl		;set return registers.
    2707/    CF4B : D1                  	pop	de
    2708/    CF4C : C9                  	ret	
    2709/    CF4D :                     ;
    2710/    CF4D :                     ;   Free block was not found. If (BC) is not zero, then we have
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 47 - 2/2/2018 12:56:16


    2711/    CF4D :                     ; not checked all of the disk space.
    2712/    CF4D :                     ;
    2713/    CF4D : 79                  fndspa4 ld	a,c
    2714/    CF4E : B0                  	or	b
    2715/    CF4F : 20 CD               	jr	nz,fndspa1
    2716/    CF51 : 21 00 00            	ld	hl,0		;set 'not found' status.
    2717/    CF54 : C9                  	ret	
    2718/    CF55 :                     ;
    2719/    CF55 :                     ;   Move a complete fcb entry into the directory and write it.
    2720/    CF55 :                     ;
    2721/    CF55 : 0E 00               fcbset	ld	c,0
    2722/    CF57 : 1E 20               	ld	e,32		;length of each entry.
    2723/    CF59 :                     ;
    2724/    CF59 :                     ;   Move (E) bytes from the fcb pointed to by (PARAMS) into
    2725/    CF59 :                     ; fcb in directory starting at relative byte (C). This updated
    2726/    CF59 :                     ; directory buffer is then written to the disk.
    2727/    CF59 :                     ;
    2728/    CF59 : D5                  update	push	de
    2729/    CF5A : 06 00               	ld	b,0		;set (BC) to relative byte position.
    2730/    CF5C : 2A CC CA            	ld	hl,(params)	;get address of fcb.
    2731/    CF5F : 09                  	add	hl,bc		;compute starting byte.
    2732/    CF60 : EB                  	ex	de,hl
    2733/    CF61 : CD D6 CC            	call	fcb2hl		;get address of fcb to update in directory.
    2734/    CF64 : C1                  	pop	bc		;set (C) to number of bytes to change.
    2735/    CF65 : CD D8 CA            	call	de2hl
    2736/    CF68 : CD 49 CB            update1 call	trksec		;determine the track and sector affected.
    2737/    CF6B : C3 3D CD            	jp	dirwrite	;then write this sector out.
    2738/    CF6E :                     ;
    2739/    CF6E :                     ;   Routine to change the name of all files on the disk with a
    2740/    CF6E :                     ; specified name. The fcb contains the current name as the
    2741/    CF6E :                     ; first 12 characters and the new name 16 bytes into the fcb.
    2742/    CF6E :                     ;
    2743/    CF6E :                     chgnames
    2744/    CF6E : CD CC CC            	call	chkwprt		;check for a write protected disk.
    2745/    CF71 : 0E 0C               	ld	c,12		;match first 12 bytes of fcb only.
    2746/    CF73 : CD 82 CE            	call	findfst		;get first name.
    2747/    CF76 : 2A CC CA            	ld	hl,(params)	;get address of fcb.
    2748/    CF79 : 7E                  	ld	a,(hl)		;get user number.
    2749/    CF7A : 11 10 00            	ld	de,16		;move over to desired name.
    2750/    CF7D : 19                  	add	hl,de
    2751/    CF7E : 77                  	ld	(hl),a		;keep same user number.
    2752/    CF7F : CD 6B CD            chgnam1 call	ckfilpos	;any matching file found?
    2753/    CF82 : C8                  	ret	z		;no, we must be done.
    2754/    CF83 : CD BC CC            	call	chkrofl		;check for read only file.
    2755/    CF86 : 0E 10               	ld	c,16		;start 16 bytes into fcb.
    2756/    CF88 : 1E 0C               	ld	e,12		;and update the first 12 bytes of directory.
    2757/    CF8A : CD 59 CF            	call	update
    2758/    CF8D : CD 97 CE            	call	findnxt		;get te next file name.
    2759/    CF90 : 18 ED               	jr	chgnam1		;and continue.
    2760/    CF92 :                     ;
    2761/    CF92 :                     ;   Update a files attributes. The procedure is to search for
    2762/    CF92 :                     ; every file with the same name as shown in fcb (ignoring bit 7)
    2763/    CF92 :                     ; and then to update it (which includes bit 7). No other changes
    2764/    CF92 :                     ; are made.
    2765/    CF92 :                     ;
    2766/    CF92 :                     saveattr
    2767/    CF92 : 0E 0C               	ld	c,12		;match first 12 bytes.
    2768/    CF94 : CD 82 CE            	call	findfst		;look for first filename.
    2769/    CF97 : CD 6B CD            savatr1 call	ckfilpos	;was one found?
    2770/    CF9A : C8                  	ret	z		;nope, we must be done.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 48 - 2/2/2018 12:56:16


    2771/    CF9B : 0E 00               	ld	c,0		;yes, update the first 12 bytes now.
    2772/    CF9D : 1E 0C               	ld	e,12
    2773/    CF9F : CD 59 CF            	call	update		;update filename and write directory.
    2774/    CFA2 : CD 97 CE            	call	findnxt		;and get the next file.
    2775/    CFA5 : 18 F0               	jr	savatr1		;then continue until done.
    2776/    CFA7 :                     ;
    2777/    CFA7 :                     ;  Open a file (name specified in fcb).
    2778/    CFA7 :                     ;
    2779/    CFA7 : 0E 0F               openit 	ld	c,15		;compare the first 15 bytes.
    2780/    CFA9 : CD 82 CE            	call	findfst		;get the first one in directory.
    2781/    CFAC : CD 6B CD            	call	ckfilpos	;any at all?
    2782/    CFAF : C8                  	ret	z
    2783/    CFB0 : CD 22 CC            openit1 call	setext		;point to extent byte within users fcb.
    2784/    CFB3 : 7E                  	ld	a,(hl)		;and get it.
    2785/    CFB4 : F5                  	push	af		;save it and address.
    2786/    CFB5 : E5                  	push	hl
    2787/    CFB6 : CD D6 CC            	call	fcb2hl		;point to fcb in directory.
    2788/    CFB9 : EB                  	ex	de,hl
    2789/    CFBA : 2A CC CA            	ld	hl,(params)	;this is the users copy.
    2790/    CFBD : 0E 20               	ld	c,32		;move it into users space.
    2791/    CFBF : D5                  	push	de
    2792/    CFC0 : CD D8 CA            	call	de2hl
    2793/    CFC3 : CD F0 CC            	call	sets2b7		;set bit 7 in 's2' byte (unmodified).
    2794/    CFC6 : D1                  	pop	de		;now get the extent byte from this fcb.
    2795/    CFC7 : 21 0C 00            	ld	hl,12
    2796/    CFCA : 19                  	add	hl,de
    2797/    CFCB : 4E                  	ld	c,(hl)		;into (C).
    2798/    CFCC : 21 0F 00            	ld	hl,15		;now get the record count byte into (B).
    2799/    CFCF : 19                  	add	hl,de
    2800/    CFD0 : 46                  	ld	b,(hl)
    2801/    CFD1 : E1                  	pop	hl		;keep the same extent as the user had originally.
    2802/    CFD2 : F1                  	pop	af
    2803/    CFD3 : 77                  	ld	(hl),a
    2804/    CFD4 : 79                  	ld	a,c		;is it the same as in the directory fcb?
    2805/    CFD5 : BE                  	cp	(hl)
    2806/    CFD6 : 78                  	ld	a,b		;if yes, then use the same record count.
    2807/    CFD7 : 28 06               	jr	z,openit2
    2808/    CFD9 : 3E 00               	ld	a,0		;if the user specified an extent greater than
    2809/    CFDB : 38 02               	jr	c,openit2	;the one in the directory, then set record count to 0.
    2810/    CFDD : 3E 80               	ld	a,128		;otherwise set to maximum.
    2811/    CFDF : 2A CC CA            openit2 ld	hl,(params)	;set record count in users fcb to (A).
    2812/    CFE2 : 11 0F 00            	ld	de,15
    2813/    CFE5 : 19                  	add	hl,de		;compute relative position.
    2814/    CFE6 : 77                  	ld	(hl),a		;and set the record count.
    2815/    CFE7 : C9                  	ret	
    2816/    CFE8 :                     ;
    2817/    CFE8 :                     ;   Move two bytes from (DE) to (HL) if (and only if) (HL)
    2818/    CFE8 :                     ; point to a zero value (16 bit).
    2819/    CFE8 :                     ;   Return with zero flag set it (DE) was moved. Registers (DE)
    2820/    CFE8 :                     ; and (HL) are not changed. However (A) is.
    2821/    CFE8 :                     ;
    2822/    CFE8 :                     moveword
    2823/    CFE8 : 7E                  	ld	a,(hl)		;check for a zero word.
    2824/    CFE9 : 23                  	inc	hl
    2825/    CFEA : B6                  	or	(hl)		;both bytes zero?
    2826/    CFEB : 2B                  	dec	hl
    2827/    CFEC : C0                  	ret	nz		;nope, just return.
    2828/    CFED : 1A                  	ld	a,(de)		;yes, move two bytes from (DE) into
    2829/    CFEE : 77                  	ld	(hl),a		;this zero space.
    2830/    CFEF : 13                  	inc	de
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 49 - 2/2/2018 12:56:16


    2831/    CFF0 : 23                  	inc	hl
    2832/    CFF1 : 1A                  	ld	a,(de)
    2833/    CFF2 : 77                  	ld	(hl),a
    2834/    CFF3 : 1B                  	dec	de		;don't disturb these registers.
    2835/    CFF4 : 2B                  	dec	hl
    2836/    CFF5 : C9                  	ret	
    2837/    CFF6 :                     ;
    2838/    CFF6 :                     ;   Get here to close a file specified by (fcb).
    2839/    CFF6 :                     ;
    2840/    CFF6 : AF                  closeit xor	a		;clear status and file position bytes.
    2841/    CFF7 : 32 CE CA            	ld	(status),a
    2842/    CFFA : 32 0D D5            	ld	(filepos),a
    2843/    CFFD : 32 0E D5            	ld	(filepos+1),a
    2844/    D000 : CD 96 CC            	call	getwprt		;get write protect bit for this drive.
    2845/    D003 : C0                  	ret	nz		;just return if it is set.
    2846/    D004 : CD E1 CC            	call	gets2		;else get the 's2' byte.
    2847/    D007 : E6 80               	and	80h		;and look at bit 7 (file unmodified?).
    2848/    D009 : C0                  	ret	nz		;just return if set.
    2849/    D00A : 0E 0F               	ld	c,15		;else look up this file in directory.
    2850/    D00C : CD 82 CE            	call	findfst
    2851/    D00F : CD 6B CD            	call	ckfilpos	;was it found?
    2852/    D012 : C8                  	ret	z		;just return if not.
    2853/    D013 : 01 10 00            	ld	bc,16		;set (HL) pointing to records used section.
    2854/    D016 : CD D6 CC            	call	fcb2hl
    2855/    D019 : 09                  	add	hl,bc
    2856/    D01A : EB                  	ex	de,hl
    2857/    D01B : 2A CC CA            	ld	hl,(params)	;do the same for users specified fcb.
    2858/    D01E : 09                  	add	hl,bc
    2859/    D01F : 0E 10               	ld	c,16		;this many bytes are present in this extent.
    2860/    D021 :                     closeit1
    2861/    D021 : 3A 00 D5            	ld	a,(bigdisk)	;8 or 16 bit record numbers?
    2862/    D024 : B7                  	or	a
    2863/    D025 : 28 10               	jr	z,closeit4
    2864/    D027 : 7E                  	ld	a,(hl)		;just 8 bit. Get one from users fcb.
    2865/    D028 : B7                  	or	a
    2866/    D029 : 1A                  	ld	a,(de)		;now get one from directory fcb.
    2867/    D02A : 20 01               	jr	nz,closeit2
    2868/    D02C : 77                  	ld	(hl),a		;users byte was zero. Update from directory.
    2869/    D02D :                     closeit2
    2870/    D02D : B7                  	or	a
    2871/    D02E : 20 02               	jr	nz,closeit3
    2872/    D030 : 7E                  	ld	a,(hl)		;directories byte was zero, update from users fcb.
    2873/    D031 : 12                  	ld	(de),a
    2874/    D032 :                     closeit3
    2875/    D032 : BE                  	cp	(hl)		;if neither one of these bytes were zero,
    2876/    D033 : 20 35               	jr	nz,closeit7	;then close error if they are not the same.
    2877/    D035 : 18 13               	jr	closeit5	;ok so far, get to next byte in fcbs.
    2878/    D037 :                     closeit4
    2879/    D037 : CD E8 CF            	call	moveword	;update users fcb if it is zero.
    2880/    D03A : EB                  	ex	de,hl
    2881/    D03B : CD E8 CF            	call	moveword	;update directories fcb if it is zero.
    2882/    D03E : EB                  	ex	de,hl
    2883/    D03F : 1A                  	ld	a,(de)		;if these two values are no different,
    2884/    D040 : BE                  	cp	(hl)		;then a close error occured.
    2885/    D041 : 20 27               	jr	nz,closeit7
    2886/    D043 : 13                  	inc	de		;check second byte.
    2887/    D044 : 23                  	inc	hl
    2888/    D045 : 1A                  	ld	a,(de)
    2889/    D046 : BE                  	cp	(hl)
    2890/    D047 : 20 21               	jr	nz,closeit7
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 50 - 2/2/2018 12:56:16


    2891/    D049 : 0D                  	dec	c		;remember 16 bit values.
    2892/    D04A :                     closeit5
    2893/    D04A : 13                  	inc	de		;bump to next item in table.
    2894/    D04B : 23                  	inc	hl
    2895/    D04C : 0D                  	dec	c		;there are 16 entries only.
    2896/    D04D : 20 D2               	jr	nz,closeit1	;continue if more to do.
    2897/    D04F : 01 EC FF            	ld	bc,0ffech	;backup 20 places (extent byte).
    2898/    D052 : 09                  	add	hl,bc
    2899/    D053 : EB                  	ex	de,hl
    2900/    D054 : 09                  	add	hl,bc
    2901/    D055 : 1A                  	ld	a,(de)
    2902/    D056 : BE                  	cp	(hl)		;directory's extent already greater than the
    2903/    D057 : 38 09               	jr	c,closeit6	;users extent?
    2904/    D059 : 77                  	ld	(hl),a		;no, update directory extent.
    2905/    D05A : 01 03 00            	ld	bc,3		;and update the record count byte in
    2906/    D05D : 09                  	add	hl,bc		;directories fcb.
    2907/    D05E : EB                  	ex	de,hl
    2908/    D05F : 09                  	add	hl,bc
    2909/    D060 : 7E                  	ld	a,(hl)		;get from user.
    2910/    D061 : 12                  	ld	(de),a		;and put in directory.
    2911/    D062 :                     closeit6
    2912/    D062 : 3E FF               	ld	a,0ffh		;set 'was open and is now closed' byte.
    2913/    D064 : 32 F5 D4            	ld	(closeflg),a
    2914/    D067 : C3 68 CF            	jp	update1		;update the directory now.
    2915/    D06A :                     closeit7
    2916/    D06A : 21 CE CA            	ld	hl,status	;set return status and then return.
    2917/    D06D : 35                  	dec	(hl)
    2918/    D06E : C9                  	ret	
    2919/    D06F :                     ;
    2920/    D06F :                     ;   Routine to get the next empty space in the directory. It
    2921/    D06F :                     ; will then be cleared for use.
    2922/    D06F :                     ;
    2923/    D06F :                     getempty
    2924/    D06F : CD CC CC            	call	chkwprt		;make sure disk is not write protected.
    2925/    D072 : 2A CC CA            	ld	hl,(params)	;save current parameters (fcb).
    2926/    D075 : E5                  	push	hl
    2927/    D076 : 21 CF D4            	ld	hl,emptyfcb	;use special one for empty space.
    2928/    D079 : 22 CC CA            	ld	(params),hl
    2929/    D07C : 0E 01               	ld	c,1		;search for first empty spot in directory.
    2930/    D07E : CD 82 CE            	call	findfst		;(* only check first byte *)
    2931/    D081 : CD 6B CD            	call	ckfilpos	;none?
    2932/    D084 : E1                  	pop	hl
    2933/    D085 : 22 CC CA            	ld	(params),hl	;restore original fcb address.
    2934/    D088 : C8                  	ret	z		;return if no more space.
    2935/    D089 : EB                  	ex	de,hl
    2936/    D08A : 21 0F 00            	ld	hl,15		;point to number of records for this file.
    2937/    D08D : 19                  	add	hl,de
    2938/    D08E : 0E 11               	ld	c,17		;and clear all of this space.
    2939/    D090 : AF                  	xor	a
    2940/    D091 : 77                  getmt1	ld	(hl),a
    2941/    D092 : 23                  	inc	hl
    2942/    D093 : 0D                  	dec	c
    2943/    D094 : 20 FB               	jr	nz,getmt1
    2944/    D096 : 21 0D 00            	ld	hl,13		;clear the 's1' byte also.
    2945/    D099 : 19                  	add	hl,de
    2946/    D09A : 77                  	ld	(hl),a
    2947/    D09B : CD 04 CD            	call	chknmbr		;keep (SCRATCH1) within bounds.
    2948/    D09E : CD 55 CF            	call	fcbset		;write out this fcb entry to directory.
    2949/    D0A1 : C3 F0 CC            	jp	sets2b7		;set 's2' byte bit 7 (unmodified at present).
    2950/    D0A4 :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 51 - 2/2/2018 12:56:16


    2951/    D0A4 :                     ;   Routine to close the current extent and open the next one
    2952/    D0A4 :                     ; for reading.
    2953/    D0A4 :                     ;
    2954/    D0A4 : AF                  getnext xor	a
    2955/    D0A5 : 32 F5 D4            	ld	(closeflg),a	;clear close flag.
    2956/    D0A8 : CD F6 CF            	call	closeit		;close this extent.
    2957/    D0AB : CD 6B CD            	call	ckfilpos
    2958/    D0AE : C8                  	ret	z		;not there???
    2959/    D0AF : 2A CC CA            	ld	hl,(params)	;get extent byte.
    2960/    D0B2 : 01 0C 00            	ld	bc,12
    2961/    D0B5 : 09                  	add	hl,bc
    2962/    D0B6 : 7E                  	ld	a,(hl)		;and increment it.
    2963/    D0B7 : 3C                  	inc	a
    2964/    D0B8 : E6 1F               	and	1fh		;keep within range 0-31.
    2965/    D0BA : 77                  	ld	(hl),a
    2966/    D0BB : 28 0D               	jr	z,gtnext1	;overflow?
    2967/    D0BD : 47                  	ld	b,a		;mask extent byte.
    2968/    D0BE : 3A E8 D4            	ld	a,(extmask)
    2969/    D0C1 : A0                  	and	b
    2970/    D0C2 : 21 F5 D4            	ld	hl,closeflg	;check close flag (0ffh is ok).
    2971/    D0C5 : A6                  	and	(hl)
    2972/    D0C6 : 28 0C               	jr	z,gtnext2	;if zero, we must read in next extent.
    2973/    D0C8 : 18 24               	jr	gtnext3		;else, it is already in memory.
    2974/    D0CA : 01 02 00            gtnext1 ld	bc,2		;Point to the 's2' byte.
    2975/    D0CD : 09                  	add	hl,bc
    2976/    D0CE : 34                  	inc	(hl)		;and bump it.
    2977/    D0CF : 7E                  	ld	a,(hl)		;too many extents?
    2978/    D0D0 : E6 0F               	and	0fh
    2979/    D0D2 : 28 24               	jr	z,gtnext5	;yes, set error code.
    2980/    D0D4 :                     ;
    2981/    D0D4 :                     ;   Get here to open the next extent.
    2982/    D0D4 :                     ;
    2983/    D0D4 : 0E 0F               gtnext2 ld	c,15		;set to check first 15 bytes of fcb.
    2984/    D0D6 : CD 82 CE            	call	findfst		;find the first one.
    2985/    D0D9 : CD 6B CD            	call	ckfilpos	;none available?
    2986/    D0DC : 20 10               	jr	nz,gtnext3
    2987/    D0DE : 3A F6 D4            	ld	a,(rdwrtflg)	;no extent present. Can we open an empty one?
    2988/    D0E1 : 3C                  	inc	a		;0ffh means reading (so not possible).
    2989/    D0E2 : 28 14               	jr	z,gtnext5	;or an error.
    2990/    D0E4 : CD 6F D0            	call	getempty	;we are writing, get an empty entry.
    2991/    D0E7 : CD 6B CD            	call	ckfilpos	;none?
    2992/    D0EA : 28 0C               	jr	z,gtnext5	;error if true.
    2993/    D0EC : 18 03               	jr	gtnext4		;else we are almost done.
    2994/    D0EE : CD B0 CF            gtnext3 call	openit1		;open this extent.
    2995/    D0F1 : CD 37 CC            gtnext4 call	strdata		;move in updated data (rec #, extent #, etc.)
    2996/    D0F4 : AF                  	xor	a		;clear status and return.
    2997/    D0F5 : C3 8B CA            	jp	setstat
    2998/    D0F8 :                     ;
    2999/    D0F8 :                     ;   Error in extending the file. Too many extents were needed
    3000/    D0F8 :                     ; or not enough space on the disk.
    3001/    D0F8 :                     ;
    3002/    D0F8 : CD 8F CA            gtnext5 call	ioerr1		;set error code, clear bit 7 of 's2'
    3003/    D0FB : C3 F0 CC            	jp	sets2b7		;so this is not written on a close.
    3004/    D0FE :                     ;
    3005/    D0FE :                     ;   Read a sequential file.
    3006/    D0FE :                     ;
    3007/    D0FE : 3E 01               rdseq	ld	a,1		;set sequential access mode.
    3008/    D100 : 32 F8 D4            	ld	(mode),a
    3009/    D103 : 3E FF               rdseq1	ld	a,0ffh		;don't allow reading unwritten space.
    3010/    D105 : 32 F6 D4            	ld	(rdwrtflg),a
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 52 - 2/2/2018 12:56:16


    3011/    D108 : CD 37 CC            	call	strdata		;put rec# and ext# into fcb.
    3012/    D10B : 3A 06 D5            	ld	a,(savnrec)	;get next record to read.
    3013/    D10E : 21 04 D5            	ld	hl,savnxt	;get number of records in extent.
    3014/    D111 : BE                  	cp	(hl)		;within this extent?
    3015/    D112 : 38 11               	jr	c,rdseq2
    3016/    D114 : FE 80               	cp	128		;no. Is this extent fully used?
    3017/    D116 : 20 21               	jr	nz,rdseq3	;no. End-of-file.
    3018/    D118 : CD A4 D0            	call	getnext		;yes, open the next one.
    3019/    D11B : AF                  	xor	a		;reset next record to read.
    3020/    D11C : 32 06 D5            	ld	(savnrec),a
    3021/    D11F : 3A CE CA            	ld	a,(status)	;check on open, successful?
    3022/    D122 : B7                  	or	a
    3023/    D123 : 20 14               	jr	nz,rdseq3	;no, error.
    3024/    D125 : CD F4 CB            rdseq2	call	comblk		;ok. compute block number to read.
    3025/    D128 : CD 01 CC            	call	chkblk		;check it. Within bounds?
    3026/    D12B : 28 0C               	jr	z,rdseq3	;no, error.
    3027/    D12D : CD 07 CC            	call	logical		;convert (BLKNMBR) to logical sector (128 byte).
    3028/    D130 : CD 57 CB            	call	trksec1		;set the track and sector for this block #.
    3029/    D133 : CD 39 CB            	call	doread		;and read it.
    3030/    D136 : C3 4E CC            	jp	setnrec		;and set the next record to be accessed.
    3031/    D139 :                     ;
    3032/    D139 :                     ;   Read error occured. Set status and return.
    3033/    D139 :                     ;
    3034/    D139 : C3 8F CA            rdseq3	jp	ioerr1
    3035/    D13C :                     ;
    3036/    D13C :                     ;   Write the next sequential record.
    3037/    D13C :                     ;
    3038/    D13C : 3E 01               wtseq	ld	a,1		;set sequential access mode.
    3039/    D13E : 32 F8 D4            	ld	(mode),a
    3040/    D141 : 3E 00               wtseq1	ld	a,0		;allow an addition empty extent to be opened.
    3041/    D143 : 32 F6 D4            	ld	(rdwrtflg),a
    3042/    D146 : CD CC CC            	call	chkwprt		;check write protect status.
    3043/    D149 : 2A CC CA            	ld	hl,(params)
    3044/    D14C : CD BF CC            	call	ckrof1		;check for read only file, (HL) already set to fcb.
    3045/    D14F : CD 37 CC            	call	strdata		;put updated data into fcb.
    3046/    D152 : 3A 06 D5            	ld	a,(savnrec)	;get record number to write.
    3047/    D155 : FE 80               	cp	128		;within range?
    3048/    D157 : D2 8F CA            	jp	nc,ioerr1	;no, error(?).
    3049/    D15A : CD F4 CB            	call	comblk		;compute block number.
    3050/    D15D : CD 01 CC            	call	chkblk		;check number.
    3051/    D160 : 0E 00               	ld	c,0		;is there one to write to?
    3052/    D162 : 20 43               	jr	nz,wtseq6	;yes, go do it.
    3053/    D164 : CD BF CB            	call	getblock	;get next block number within fcb to use.
    3054/    D167 : 32 FA D4            	ld	(relblock),a	;and save.
    3055/    D16A : 01 00 00            	ld	bc,0		;start looking for space from the start
    3056/    D16D : B7                  	or	a		;if none allocated as yet.
    3057/    D16E : 28 07               	jr	z,wtseq2
    3058/    D170 : 4F                  	ld	c,a		;extract previous block number from fcb
    3059/    D171 : 0B                  	dec	bc		;so we can be closest to it.
    3060/    D172 : CD DC CB            	call	extblk
    3061/    D175 : 44                  	ld	b,h
    3062/    D176 : 4D                  	ld	c,l
    3063/    D177 : CD 1C CF            wtseq2	call	fndspace	;find the next empty block nearest number (BC).
    3064/    D17A : 7D                  	ld	a,l		;check for a zero number.
    3065/    D17B : B4                  	or	h
    3066/    D17C : 20 05               	jr	nz,wtseq3
    3067/    D17E : 3E 02               	ld	a,2		;no more space?
    3068/    D180 : C3 8B CA            	jp	setstat
    3069/    D183 : 22 08 D5            wtseq3	ld	(blknmbr),hl	;save block number to access.
    3070/    D186 : EB                  	ex	de,hl		;put block number into (DE).
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 53 - 2/2/2018 12:56:16


    3071/    D187 : 2A CC CA            	ld	hl,(params)	;now we must update the fcb for this
    3072/    D18A : 01 10 00            	ld	bc,16		;newly allocated block.
    3073/    D18D : 09                  	add	hl,bc
    3074/    D18E : 3A 00 D5            	ld	a,(bigdisk)	;8 or 16 bit block numbers?
    3075/    D191 : B7                  	or	a
    3076/    D192 : 3A FA D4            	ld	a,(relblock)	;(* update this entry *)
    3077/    D195 : 28 06               	jr	z,wtseq4	;zero means 16 bit ones.
    3078/    D197 : CD DC CC            	call	adda2hl		;(HL)=(HL)+(A)
    3079/    D19A : 73                  	ld	(hl),e		;store new block number.
    3080/    D19B : 18 08               	jr	wtseq5
    3081/    D19D : 4F                  wtseq4	ld	c,a		;compute spot in this 16 bit table.
    3082/    D19E : 06 00               	ld	b,0
    3083/    D1A0 : 09                  	add	hl,bc
    3084/    D1A1 : 09                  	add	hl,bc
    3085/    D1A2 : 73                  	ld	(hl),e		;stuff block number (DE) there.
    3086/    D1A3 : 23                  	inc	hl
    3087/    D1A4 : 72                  	ld	(hl),d
    3088/    D1A5 : 0E 02               wtseq5	ld	c,2		;set (C) to indicate writing to un-used disk space.
    3089/    D1A7 : 3A CE CA            wtseq6	ld	a,(status)	;are we ok so far?
    3090/    D1AA : B7                  	or	a
    3091/    D1AB : C0                  	ret	nz
    3092/    D1AC : C5                  	push	bc		;yes, save write flag for bios (register C).
    3093/    D1AD : CD 07 CC            	call	logical		;convert (BLKNMBR) over to loical sectors.
    3094/    D1B0 : 3A F8 D4            	ld	a,(mode)	;get access mode flag (1=sequential,
    3095/    D1B3 : 3D                  	dec	a		;0=random, 2=special?).
    3096/    D1B4 : 3D                  	dec	a
    3097/    D1B5 : 20 3A               	jr	nz,wtseq9
    3098/    D1B7 :                     ;
    3099/    D1B7 :                     ;   Special random i/o from function #40. Maybe for M/PM, but the
    3100/    D1B7 :                     ; current block, if it has not been written to, will be zeroed
    3101/    D1B7 :                     ; out and then written (reason?).
    3102/    D1B7 :                     ;
    3103/    D1B7 : C1                  	pop	bc
    3104/    D1B8 : C5                  	push	bc
    3105/    D1B9 : 79                  	ld	a,c		;get write status flag (2=writing unused space).
    3106/    D1BA : 3D                  	dec	a
    3107/    D1BB : 3D                  	dec	a
    3108/    D1BC : 20 33               	jr	nz,wtseq9
    3109/    D1BE : E5                  	push	hl
    3110/    D1BF : 2A DC D4            	ld	hl,(dirbuf)	;zero out the directory buffer.
    3111/    D1C2 : 57                  	ld	d,a		;note that (A) is zero here.
    3112/    D1C3 : 77                  wtseq7	ld	(hl),a
    3113/    D1C4 : 23                  	inc	hl
    3114/    D1C5 : 14                  	inc	d		;do 128 bytes.
    3115/    D1C6 : F2 C3 D1            	jp	p,wtseq7
    3116/    D1C9 : CD 56 CD            	call	dirdma		;tell the bios the dma address for directory access.
    3117/    D1CC : 2A 0A D5            	ld	hl,(logsect)	;get sector that starts current block.
    3118/    D1CF : 0E 02               	ld	c,2		;set 'writing to unused space' flag.
    3119/    D1D1 : 22 08 D5            wtseq8	ld	(blknmbr),hL	;save sector to write.
    3120/    D1D4 : C5                  	push	bc
    3121/    D1D5 : CD 57 CB            	call	trksec1		;determine its track and sector numbers.
    3122/    D1D8 : C1                  	pop	bc
    3123/    D1D9 : CD 3E CB            	call	dowrite		;now write out 128 bytes of zeros.
    3124/    D1DC : 2A 08 D5            	ld	hl,(blknmbr)	;get sector number.
    3125/    D1DF : 0E 00               	ld	c,0		;set normal write flag.
    3126/    D1E1 : 3A E7 D4            	ld	a,(blkmask)	;determine if we have written the entire
    3127/    D1E4 : 47                  	ld	b,a		;physical block.
    3128/    D1E5 : A5                  	and	l
    3129/    D1E6 : B8                  	cp	b
    3130/    D1E7 : 23                  	inc	hl		;prepare for the next one.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 54 - 2/2/2018 12:56:16


    3131/    D1E8 : 20 E7               	jR	nz,wtseq8	;continue until (BLKMASK+1) sectors written.
    3132/    D1EA : E1                  	pop	hl		;reset next sector number.
    3133/    D1EB : 22 08 D5            	ld	(blknmbr),hl
    3134/    D1EE : CD 51 CD            	call	defdma		;and reset dma address.
    3135/    D1F1 :                     ;
    3136/    D1F1 :                     ;   Normal disk write. Set the desired track and sector then
    3137/    D1F1 :                     ; do the actual write.
    3138/    D1F1 :                     ;
    3139/    D1F1 : CD 57 CB            wtseq9	call	trksec1		;determine track and sector for this write.
    3140/    D1F4 : C1                  	pop	bc		;get write status flag.
    3141/    D1F5 : C5                  	push	bc
    3142/    D1F6 : CD 3E CB            	call	dowrite		;and write this out.
    3143/    D1F9 : C1                  	pop	bc
    3144/    D1FA : 3A 06 D5            	ld	a,(savnrec)	;get number of records in file.
    3145/    D1FD : 21 04 D5            	ld	hl,savnxt	;get last record written.
    3146/    D200 : BE                  	cp	(hl)
    3147/    D201 : 38 04               	jr	c,wtseq10
    3148/    D203 : 77                  	ld	(hl),a		;we have to update record count.
    3149/    D204 : 34                  	inc	(hl)
    3150/    D205 : 0E 02               	ld	c,2
    3151/    D207 :                     ;
    3152/    D207 :                     ;*   This area has been patched to correct disk update problem
    3153/    D207 :                     ;* when using blocking and de-blocking in the BIOS.
    3154/    D207 :                     ;
    3155/    D207 : 21 00 00            wtseq10	ld	hl,0		;was 'jnz wtseq99'
    3156/    D20A :                     ;
    3157/    D20A :                     ; *   End of patch.
    3158/    D20A :                     ;
    3159/    D20A : F5                  	push	af
    3160/    D20B : CD E1 CC            	call	gets2		;set 'extent written to' flag.
    3161/    D20E : E6 7F               	and	7fh		;(* clear bit 7 *)
    3162/    D210 : 77                  	ld	(hl),a
    3163/    D211 : F1                  	pop	af		;get record count for this extent.
    3164/    D212 : FE 7F               wtseq99 cp	127		;is it full?
    3165/    D214 : 20 1C               	jr	nz,wtseq12
    3166/    D216 : 3A F8 D4            	ld	a,(mode)	;yes, are we in sequential mode?
    3167/    D219 : FE 01               	cp	1
    3168/    D21B : C2 32 D2            	jp	nz,wtseq12
    3169/    D21E : CD 4E CC            	call	setnrec		;yes, set next record number.
    3170/    D221 : CD A4 D0            	call	getnext		;and get next empty space in directory.
    3171/    D224 : 21 CE CA            	ld	hl,status	;ok?
    3172/    D227 : 7E                  	ld	a,(hl)
    3173/    D228 : B7                  	or	a
    3174/    D229 : C2 30 D2            	jp	nz,wtseq11
    3175/    D22C : 3D                  	dec	a		;yes, set record count to -1.
    3176/    D22D : 32 06 D5            	ld	(savnrec),a
    3177/    D230 : 36 00               wtseq11 ld	(hl),0		;clear status.
    3178/    D232 : C3 4E CC            wtseq12 jp	setnrec		;set next record to access.
    3179/    D235 :                     ;
    3180/    D235 :                     ;   For random i/o, set the fcb for the desired record number
    3181/    D235 :                     ; based on the 'r0,r1,r2' bytes. These bytes in the fcb are
    3182/    D235 :                     ; used as follows:
    3183/    D235 :                     ;
    3184/    D235 :                     ;       fcb+35            fcb+34            fcb+33
    3185/    D235 :                     ;  |     'r-2'      |      'r-1'      |      'r-0'     |
    3186/    D235 :                     ;  |7             0 | 7             0 | 7             0|
    3187/    D235 :                     ;  |0 0 0 0 0 0 0 0 | 0 0 0 0 0 0 0 0 | 0 0 0 0 0 0 0 0|
    3188/    D235 :                     ;  |    overflow   | | extra |  extent   |   record #  |
    3189/    D235 :                     ;  | ______________| |_extent|__number___|_____________|
    3190/    D235 :                     ;                     also 's2'
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 55 - 2/2/2018 12:56:16


    3191/    D235 :                     ;
    3192/    D235 :                     ;   On entry, register (C) contains 0ffh if this is a read
    3193/    D235 :                     ; and thus we can not access unwritten disk space. Otherwise,
    3194/    D235 :                     ; another extent will be opened (for writing) if required.
    3195/    D235 :                     ;
    3196/    D235 :                     position
    3197/    D235 : AF                  	xor	a		;set random i/o flag.
    3198/    D236 : 32 F8 D4            	ld	(mode),a
    3199/    D239 :                     ;
    3200/    D239 :                     ;   Special entry (function #40). M/PM ?
    3201/    D239 :                     ;
    3202/    D239 : C5                  positn1 push	bc		;save read/write flag.
    3203/    D23A : 2A CC CA            	ld	hl,(params)	;get address of fcb.
    3204/    D23D : EB                  	ex	de,hl
    3205/    D23E : 21 21 00            	ld	hl,33		;now get byte 'r0'.
    3206/    D241 : 19                  	add	hl,de
    3207/    D242 : 7E                  	ld	a,(hl)
    3208/    D243 : E6 7F               	and	7fh		;keep bits 0-6 for the record number to access.
    3209/    D245 : F5                  	push	af
    3210/    D246 : 7E                  	ld	a,(hl)		;now get bit 7 of 'r0' and bits 0-3 of 'r1'.
    3211/    D247 : 17                  	rla	
    3212/    D248 : 23                  	inc	hl
    3213/    D249 : 7E                  	ld	a,(hl)
    3214/    D24A : 17                  	rla	
    3215/    D24B : E6 1F               	and	1fh		;and save this in bits 0-4 of (C).
    3216/    D24D : 4F                  	ld	c,a		;this is the extent byte.
    3217/    D24E : 7E                  	ld	a,(hl)		;now get the extra extent byte.
    3218/    D24F : 1F                  	rra	
    3219/    D250 : 1F                  	rra	
    3220/    D251 : 1F                  	rra	
    3221/    D252 : 1F                  	rra	
    3222/    D253 : E6 0F               	and	0fh
    3223/    D255 : 47                  	ld	b,a		;and save it in (B).
    3224/    D256 : F1                  	pop	af		;get record number back to (A).
    3225/    D257 : 23                  	inc	hl		;check overflow byte 'r2'.
    3226/    D258 : 6E                  	ld	l,(hl)
    3227/    D259 : 2C                  	inc	l
    3228/    D25A : 2D                  	dec	l
    3229/    D25B : 2E 06               	ld	l,6		;prepare for error.
    3230/    D25D : 20 57               	jr	nz,positn5	;out of disk space error.
    3231/    D25F : 21 20 00            	ld	hl,32		;store record number into fcb.
    3232/    D262 : 19                  	add	hl,de
    3233/    D263 : 77                  	ld	(hl),a
    3234/    D264 : 21 0C 00            	ld	hl,12		;and now check the extent byte.
    3235/    D267 : 19                  	add	hl,de
    3236/    D268 : 79                  	ld	a,c
    3237/    D269 : 96                  	sub	(hl)		;same extent as before?
    3238/    D26A : 20 0A               	jr	nz,positn2
    3239/    D26C : 21 0E 00            	ld	hl,14		;yes, check extra extent byte 's2' also.
    3240/    D26F : 19                  	add	hl,de
    3241/    D270 : 78                  	ld	a,b
    3242/    D271 : 96                  	sub	(hl)
    3243/    D272 : E6 7F               	and	7fh
    3244/    D274 : 28 34               	jr	z,positn3	;same, we are almost done then.
    3245/    D276 :                     ;
    3246/    D276 :                     ;  Get here when another extent is required.
    3247/    D276 :                     ;
    3248/    D276 : C5                  positn2 push	bc
    3249/    D277 : D5                  	push	de
    3250/    D278 : CD F6 CF            	call	closeit		;close current extent.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 56 - 2/2/2018 12:56:16


    3251/    D27B : D1                  	pop	de
    3252/    D27C : C1                  	pop	bc
    3253/    D27D : 2E 03               	ld	l,3		;prepare for error.
    3254/    D27F : 3A CE CA            	ld	a,(status)
    3255/    D282 : 3C                  	inc	a
    3256/    D283 : 28 2A               	jr	z,positn4	;close error.
    3257/    D285 : 21 0C 00            	ld	hl,12		;put desired extent into fcb now.
    3258/    D288 : 19                  	add	hl,de
    3259/    D289 : 71                  	ld	(hl),c
    3260/    D28A : 21 0E 00            	ld	hl,14		;and store extra extent byte 's2'.
    3261/    D28D : 19                  	add	hl,de
    3262/    D28E : 70                  	ld	(hl),b
    3263/    D28F : CD A7 CF            	call	openit		;try and get this extent.
    3264/    D292 : 3A CE CA            	ld	a,(status)	;was it there?
    3265/    D295 : 3C                  	inc	a
    3266/    D296 : 20 12               	jr	nz,positn3
    3267/    D298 : C1                  	pop	bc		;no. can we create a new one (writing?).
    3268/    D299 : C5                  	push	bc
    3269/    D29A : 2E 04               	ld	l,4		;prepare for error.
    3270/    D29C : 0C                  	inc	c
    3271/    D29D : 28 10               	jr	z,positn4	;nope, reading unwritten space error.
    3272/    D29F : CD 6F D0            	call	getempty	;yes we can, try to find space.
    3273/    D2A2 : 2E 05               	ld	l,5		;prepare for error.
    3274/    D2A4 : 3A CE CA            	ld	a,(status)
    3275/    D2A7 : 3C                  	inc	a
    3276/    D2A8 : 28 05               	jr	z,positn4	;out of space?
    3277/    D2AA :                     ;
    3278/    D2AA :                     ;   Normal return location. Clear error code and return.
    3279/    D2AA :                     ;
    3280/    D2AA : C1                  positn3 pop	bc		;restore stack.
    3281/    D2AB : AF                  	xor	a		;and clear error code byte.
    3282/    D2AC : C3 8B CA            	jp	setstat
    3283/    D2AF :                     ;
    3284/    D2AF :                     ;   Error. Set the 's2' byte to indicate this (why?).
    3285/    D2AF :                     ;
    3286/    D2AF : E5                  positn4 push	hl
    3287/    D2B0 : CD E1 CC            	call	gets2
    3288/    D2B3 : 36 C0               	ld	(hl),0c0h
    3289/    D2B5 : E1                  	pop	hl
    3290/    D2B6 :                     ;
    3291/    D2B6 :                     ;   Return with error code (presently in L).
    3292/    D2B6 :                     ;
    3293/    D2B6 : C1                  positn5 pop	bc
    3294/    D2B7 : 7D                  	ld	a,l		;get error code.
    3295/    D2B8 : 32 CE CA            	ld	(status),a
    3296/    D2BB : C3 F0 CC            	jp	sets2b7
    3297/    D2BE :                     ;
    3298/    D2BE :                     ;   Read a random record.
    3299/    D2BE :                     ;
    3300/    D2BE : 0E FF               readran ld	c,0ffh		;set 'read' status.
    3301/    D2C0 : CD 35 D2            	call	position	;position the file to proper record.
    3302/    D2C3 : CC 03 D1            	call	z,rdseq1	;and read it as usual (if no errors).
    3303/    D2C6 : C9                  	ret	
    3304/    D2C7 :                     ;
    3305/    D2C7 :                     ;   Write to a random record.
    3306/    D2C7 :                     ;
    3307/    D2C7 :                     writeran
    3308/    D2C7 : 0E 00               	ld	c,0		;set 'writing' flag.
    3309/    D2C9 : CD 35 D2            	call	position	;position the file to proper record.
    3310/    D2CC : CC 41 D1            	call	z,wtseq1	;and write as usual (if no errors).
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 57 - 2/2/2018 12:56:16


    3311/    D2CF : C9                  	ret	
    3312/    D2D0 :                     ;
    3313/    D2D0 :                     ;   Compute the random record number. Enter with (HL) pointing
    3314/    D2D0 :                     ; to a fcb an (DE) contains a relative location of a record
    3315/    D2D0 :                     ; number. On exit, (C) contains the 'r0' byte, (B) the 'r1'
    3316/    D2D0 :                     ; byte, and (A) the 'r2' byte.
    3317/    D2D0 :                     ;
    3318/    D2D0 :                     ;   On return, the zero flag is set if the record is within
    3319/    D2D0 :                     ; bounds. Otherwise, an overflow occured.
    3320/    D2D0 :                     ;
    3321/    D2D0 :                     comprand
    3322/    D2D0 : EB                  	ex	de,hl		;save fcb pointer in (DE).
    3323/    D2D1 : 19                  	add	hl,de		;compute relative position of record #.
    3324/    D2D2 : 4E                  	ld	c,(hl)		;get record number into (BC).
    3325/    D2D3 : 06 00               	ld	b,0
    3326/    D2D5 : 21 0C 00            	ld	hl,12		;now get extent.
    3327/    D2D8 : 19                  	add	hl,de
    3328/    D2D9 : 7E                  	ld	a,(hl)		;compute (BC)=(record #)+(extent)*128.
    3329/    D2DA : 0F                  	rrca			;move lower bit into bit 7.
    3330/    D2DB : E6 80               	and	80h		;and ignore all other bits.
    3331/    D2DD : 81                  	add	a,c		;add to our record number.
    3332/    D2DE : 4F                  	ld	c,a
    3333/    D2DF : 3E 00               	ld	a,0		;take care of any carry.
    3334/    D2E1 : 88                  	adc	a,b
    3335/    D2E2 : 47                  	ld	b,a
    3336/    D2E3 : 7E                  	ld	a,(hl)		;now get the upper bits of extent into
    3337/    D2E4 : 0F                  	rrca			;bit positions 0-3.
    3338/    D2E5 : E6 0F               	and	0fh		;and ignore all others.
    3339/    D2E7 : 80                  	add	a,b		;add this in to 'r1' byte.
    3340/    D2E8 : 47                  	ld	b,a
    3341/    D2E9 : 21 0E 00            	ld	hl,14		;get the 's2' byte (extra extent).
    3342/    D2EC : 19                  	add	hl,de
    3343/    D2ED : 7E                  	ld	a,(hl)
    3344/    D2EE : 87                  	add	a,a		;and shift it left 4 bits (bits 4-7).
    3345/    D2EF : 87                  	add	a,a
    3346/    D2F0 : 87                  	add	a,a
    3347/    D2F1 : 87                  	add	a,a
    3348/    D2F2 : F5                  	push	af		;save carry flag (bit 0 of flag byte).
    3349/    D2F3 : 80                  	add	a,b		;now add extra extent into 'r1'.
    3350/    D2F4 : 47                  	ld	b,a
    3351/    D2F5 : F5                  	push	af		;and save carry (overflow byte 'r2').
    3352/    D2F6 : E1                  	pop	hl		;bit 0 of (L) is the overflow indicator.
    3353/    D2F7 : 7D                  	ld	a,l
    3354/    D2F8 : E1                  	pop	hl		;and same for first carry flag.
    3355/    D2F9 : B5                  	or	l		;either one of these set?
    3356/    D2FA : E6 01               	and	01h		;only check the carry flags.
    3357/    D2FC : C9                  	ret	
    3358/    D2FD :                     ;
    3359/    D2FD :                     ;   Routine to setup the fcb (bytes 'r0', 'r1', 'r2') to
    3360/    D2FD :                     ; reflect the last record used for a random (or other) file.
    3361/    D2FD :                     ; This reads the directory and looks at all extents computing
    3362/    D2FD :                     ; the largerst record number for each and keeping the maximum
    3363/    D2FD :                     ; value only. Then 'r0', 'r1', and 'r2' will reflect this
    3364/    D2FD :                     ; maximum record number. This is used to compute the space used
    3365/    D2FD :                     ; by a random file.
    3366/    D2FD :                     ;
    3367/    D2FD : 0E 0C               ransize ld	c,12		;look thru directory for first entry with
    3368/    D2FF : CD 82 CE            	call	findfst		;this name.
    3369/    D302 : 2A CC CA            	ld	hl,(params)	;zero out the 'r0, r1, r2' bytes.
    3370/    D305 : 11 21 00            	ld	de,33
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 58 - 2/2/2018 12:56:16


    3371/    D308 : 19                  	add	hl,de
    3372/    D309 : E5                  	push	hl
    3373/    D30A : 72                  	ld	(hl),d		;note that (D)=0.
    3374/    D30B : 23                  	inc	hl
    3375/    D30C : 72                  	ld	(hl),d
    3376/    D30D : 23                  	inc	hl
    3377/    D30E : 72                  	ld	(hl),d
    3378/    D30F : CD 6B CD            ransiz1 call	ckfilpos	;is there an extent to process?
    3379/    D312 : 28 20               	jr	z,ransiz3	;no, we are done.
    3380/    D314 : CD D6 CC            	call	fcb2hl		;set (HL) pointing to proper fcb in dir.
    3381/    D317 : 11 0F 00            	ld	de,15		;point to last record in extent.
    3382/    D31A : CD D0 D2            	call	comprand	;and compute random parameters.
    3383/    D31D : E1                  	pop	hl
    3384/    D31E : E5                  	push	hl		;now check these values against those
    3385/    D31F : 5F                  	ld	e,a		;already in fcb.
    3386/    D320 : 79                  	ld	a,c		;the carry flag will be set if those
    3387/    D321 : 96                  	sub	(hl)		;in the fcb represent a larger size than
    3388/    D322 : 23                  	inc	hl		;this extent does.
    3389/    D323 : 78                  	ld	a,b
    3390/    D324 : 9E                  	sbc	a,(hl)
    3391/    D325 : 23                  	inc	hl
    3392/    D326 : 7B                  	ld	a,e
    3393/    D327 : 9E                  	sbc	a,(hl)
    3394/    D328 : 38 05               	jr	c,ransiz2
    3395/    D32A : 73                  	ld	(hl),e		;we found a larger (in size) extent.
    3396/    D32B : 2B                  	dec	hl		;stuff these values into fcb.
    3397/    D32C : 70                  	ld	(hl),b
    3398/    D32D : 2B                  	dec	hl
    3399/    D32E : 71                  	ld	(hl),c
    3400/    D32F : CD 97 CE            ransiz2 call	findnxt		;now get the next extent.
    3401/    D332 : 18 DB               	jr	ransiz1		;continue til all done.
    3402/    D334 : E1                  ransiz3 pop	hl		;we are done, restore the stack and
    3403/    D335 : C9                  	ret			;return.
    3404/    D336 :                     ;
    3405/    D336 :                     ;   Function to return the random record position of a given
    3406/    D336 :                     ; file which has been read in sequential mode up to now.
    3407/    D336 :                     ;
    3408/    D336 : 2A CC CA            setran	ld	hl,(params)	;point to fcb.
    3409/    D339 : 11 20 00            	ld	de,32		;and to last used record.
    3410/    D33C : CD D0 D2            	call	comprand	;compute random position.
    3411/    D33F : 21 21 00            	ld	hl,33		;now stuff these values into fcb.
    3412/    D342 : 19                  	add	hl,de
    3413/    D343 : 71                  	ld	(hl),c		;move 'r0'.
    3414/    D344 : 23                  	inc	hl
    3415/    D345 : 70                  	ld	(hl),b		;and 'r1'.
    3416/    D346 : 23                  	inc	hl
    3417/    D347 : 77                  	ld	(hl),a		;and lastly 'r2'.
    3418/    D348 : C9                  	ret	
    3419/    D349 :                     ;
    3420/    D349 :                     ;   This routine select the drive specified in (ACTIVE) and
    3421/    D349 :                     ; update the login vector and bitmap table if this drive was
    3422/    D349 :                     ; not already active.
    3423/    D349 :                     ;
    3424/    D349 :                     logindrv
    3425/    D349 : 2A D2 D4            	ld	hl,(login)	;get the login vector.
    3426/    D34C : 3A CB CA            	ld	a,(active)	;get the default drive.
    3427/    D34F : 4F                  	ld	c,a
    3428/    D350 : CD 65 CC            	call	shiftr		;position active bit for this drive
    3429/    D353 : E5                  	push	hl		;into bit 0.
    3430/    D354 : EB                  	ex	de,hl
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 59 - 2/2/2018 12:56:16


    3431/    D355 : CD E1 CA            	call	select		;select this drive.
    3432/    D358 : E1                  	pop	hl
    3433/    D359 : CC D0 CA            	call	z,slcterr	;valid drive?
    3434/    D35C : 7D                  	ld	a,l		;is this a newly activated drive?
    3435/    D35D : 1F                  	rra	
    3436/    D35E : D8                  	ret	c
    3437/    D35F : 2A D2 D4            	ld	hl,(login)	;yes, update the login vector.
    3438/    D362 : 4D                  	ld	c,l
    3439/    D363 : 44                  	ld	b,h
    3440/    D364 : CD 83 CC            	call	setbit
    3441/    D367 : 22 D2 D4            	ld	(login),hl	;and save.
    3442/    D36A : C3 12 CE            	jp	bitmap		;now update the bitmap.
    3443/    D36D :                     ;
    3444/    D36D :                     ;   Function to set the active disk number.
    3445/    D36D :                     ;
    3446/    D36D : 3A F9 D4            setdsk	ld	a,(eparam)	;get parameter passed and see if this
    3447/    D370 : 21 CB CA            	ld	hl,active	;represents a change in drives.
    3448/    D373 : BE                  	cp	(hl)
    3449/    D374 : C8                  	ret	z
    3450/    D375 : 77                  	ld	(hl),a		;yes it does, log it in.
    3451/    D376 : C3 49 D3            	jp	logindrv
    3452/    D379 :                     ;
    3453/    D379 :                     ;   This is the 'auto disk select' routine. The firsst byte
    3454/    D379 :                     ; of the fcb is examined for a drive specification. If non
    3455/    D379 :                     ; zero then the drive will be selected and loged in.
    3456/    D379 :                     ;
    3457/    D379 : 3E FF               autosel ld	a,0ffh		;say 'auto-select activated'.
    3458/    D37B : 32 01 D5            	ld	(auto),a
    3459/    D37E : 2A CC CA            	ld	hl,(params)	;get drive specified.
    3460/    D381 : 7E                  	ld	a,(hl)
    3461/    D382 : E6 1F               	and	1fh		;look at lower 5 bits.
    3462/    D384 : 3D                  	dec	a		;adjust for (1=A, 2=B) etc.
    3463/    D385 : 32 F9 D4            	ld	(eparam),a	;and save for the select routine.
    3464/    D388 : FE 1E               	cp	1eh		;check for 'no change' condition.
    3465/    D38A : 30 10               	jr	nc,autosl1	;yes, don't change.
    3466/    D38C : 3A CB CA            	ld	a,(active)	;we must change, save currently active
    3467/    D38F : 32 02 D5            	ld	(olddrv),a	;drive.
    3468/    D392 : 7E                  	ld	a,(hl)		;and save first byte of fcb also.
    3469/    D393 : 32 03 D5            	ld	(autoflag),a	;this must be non-zero.
    3470/    D396 : E6 E0               	and	0e0h		;whats this for (bits 6,7 are used for
    3471/    D398 : 77                  	ld	(hl),a		;something)?
    3472/    D399 : CD 6D D3            	call	setdsk		;select and log in this drive.
    3473/    D39C : 3A CA CA            autosl1 ld	a,(userno)	;move user number into fcb.
    3474/    D39F : 2A CC CA            	ld	hl,(params)	;(* upper half of first byte *)
    3475/    D3A2 : B6                  	or	(hl)
    3476/    D3A3 : 77                  	ld	(hl),a
    3477/    D3A4 : C9                  	ret			;and return (all done).
    3478/    D3A5 :                     ;
    3479/    D3A5 :                     ;   Function to return the current cp/m version number.
    3480/    D3A5 :                     ;
    3481/    D3A5 : 3E 22               getver	ld	a,022h		;version 2.2
    3482/    D3A7 : C3 8B CA            	jp	setstat
    3483/    D3AA :                     ;
    3484/    D3AA :                     ;   Function to reset the disk system.
    3485/    D3AA :                     ;
    3486/    D3AA : 21 00 00            rstdsk	ld	hl,0		;clear write protect status and log
    3487/    D3AD : 22 D0 D4            	ld	(wrtprt),hl	;in vector.
    3488/    D3B0 : 22 D2 D4            	ld	(login),hl
    3489/    D3B3 : AF                  	xor	a		;select drive 'A'.
    3490/    D3B4 : 32 CB CA            	ld	(active),a
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 60 - 2/2/2018 12:56:16


    3491/    D3B7 : 21 80 00            	ld	hl,tbuff	;setup default dma address.
    3492/    D3BA : 22 D4 D4            	ld	(userdma),hl
    3493/    D3BD : CD 51 CD            	call	defdma
    3494/    D3C0 : C3 49 D3            	jp	logindrv	;now log in drive 'A'.
    3495/    D3C3 :                     ;
    3496/    D3C3 :                     ;   Function to open a specified file.
    3497/    D3C3 :                     ;
    3498/    D3C3 : CD EA CC            openfil call	clears2		;clear 's2' byte.
    3499/    D3C6 : CD 79 D3            	call	autosel		;select proper disk.
    3500/    D3C9 : C3 A7 CF            	jp	openit		;and open the file.
    3501/    D3CC :                     ;
    3502/    D3CC :                     ;   Function to close a specified file.
    3503/    D3CC :                     ;
    3504/    D3CC :                     closefil
    3505/    D3CC : CD 79 D3            	call	autosel		;select proper disk.
    3506/    D3CF : C3 F6 CF            	jp	closeit		;and close the file.
    3507/    D3D2 :                     ;
    3508/    D3D2 :                     ;   Function to return the first occurence of a specified file
    3509/    D3D2 :                     ; name. If the first byte of the fcb is '?' then the name will
    3510/    D3D2 :                     ; not be checked (get the first entry no matter what).
    3511/    D3D2 :                     ;
    3512/    D3D2 : 0E 00               getfst	ld	c,0		;prepare for special search.
    3513/    D3D4 : EB                  	ex	de,hl
    3514/    D3D5 : 7E                  	ld	a,(hl)		;is first byte a '?'?
    3515/    D3D6 : FE 3F               	cp	'?'
    3516/    D3D8 : 28 0E               	jr	z,getfst1	;yes, just get very first entry (zero length match).
    3517/    D3DA : CD 22 CC            	call	setext		;get the extension byte from fcb.
    3518/    D3DD : 7E                  	ld	a,(hl)		;is it '?'? if yes, then we want
    3519/    D3DE : FE 3F               	cp	'?'		;an entry with a specific 's2' byte.
    3520/    D3E0 : C4 EA CC            	call	nz,clears2	;otherwise, look for a zero 's2' byte.
    3521/    D3E3 : CD 79 D3            	call	autosel		;select proper drive.
    3522/    D3E6 : 0E 0F               	ld	c,15		;compare bytes 0-14 in fcb (12&13 excluded).
    3523/    D3E8 : CD 82 CE            getfst1 call	findfst		;find an entry and then move it into
    3524/    D3EB : C3 5F CD            	jp	movedir		;the users dma space.
    3525/    D3EE :                     ;
    3526/    D3EE :                     ;   Function to return the next occurence of a file name.
    3527/    D3EE :                     ;
    3528/    D3EE : 2A FC D4            getnxt	ld	hl,(savefcb)	;restore pointers. note that no
    3529/    D3F1 : 22 CC CA            	ld	(params),hl	;other dbos calls are allowed.
    3530/    D3F4 : CD 79 D3            	call	autosel		;no error will be returned, but the
    3531/    D3F7 : CD 97 CE            	call	findnxt		;results will be wrong.
    3532/    D3FA : C3 5F CD            	jp	movedir
    3533/    D3FD :                     ;
    3534/    D3FD :                     ;   Function to delete a file by name.
    3535/    D3FD :                     ;
    3536/    D3FD : CD 79 D3            delfile call	autosel		;select proper drive.
    3537/    D400 : CD FB CE            	call	erafile		;erase the file.
    3538/    D403 : C3 6B CE            	jp	ststatus	;set status and return.
    3539/    D406 :                     ;
    3540/    D406 :                     ;   Function to execute a sequential read of the specified
    3541/    D406 :                     ; record number.
    3542/    D406 :                     ;
    3543/    D406 : CD 79 D3            readseq call	autosel		;select proper drive then read.
    3544/    D409 : C3 FE D0            	jp	rdseq
    3545/    D40C :                     ;
    3546/    D40C :                     ;   Function to write the net sequential record.
    3547/    D40C :                     ;
    3548/    D40C : CD 79 D3            wrtseq	call	autosel		;select proper drive then write.
    3549/    D40F : C3 3C D1            	jp	wtseq
    3550/    D412 :                     ;
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 61 - 2/2/2018 12:56:16


    3551/    D412 :                     ;   Create a file function.
    3552/    D412 :                     ;
    3553/    D412 : CD EA CC            fcreate call	clears2		;clear the 's2' byte on all creates.
    3554/    D415 : CD 79 D3            	call	autosel		;select proper drive and get the next
    3555/    D418 : C3 6F D0            	jp	getempty	;empty directory space.
    3556/    D41B :                     ;
    3557/    D41B :                     ;   Function to rename a file.
    3558/    D41B :                     ;
    3559/    D41B : CD 79 D3            renfile call	autosel		;select proper drive and then switch
    3560/    D41E : CD 6E CF            	call	chgnames	;file names.
    3561/    D421 : C3 6B CE            	jp	ststatus
    3562/    D424 :                     ;
    3563/    D424 :                     ;   Function to return the login vector.
    3564/    D424 :                     ;
    3565/    D424 : 2A D2 D4            getlog	ld	hl,(login)
    3566/    D427 : C3 4F D4            	jp	getprm1
    3567/    D42A :                     ;
    3568/    D42A :                     ;   Function to return the current disk assignment.
    3569/    D42A :                     ;
    3570/    D42A : 3A CB CA            getcrnt ld	a,(active)
    3571/    D42D : C3 8B CA            	jp	setstat
    3572/    D430 :                     ;
    3573/    D430 :                     ;   Function to set the dma address.
    3574/    D430 :                     ;
    3575/    D430 : EB                  putdma	ex	de,hl
    3576/    D431 : 22 D4 D4            	ld	(userdma),hl	;save in our space and then get to
    3577/    D434 : C3 51 CD            	jp	defdma		;the bios with this also.
    3578/    D437 :                     ;
    3579/    D437 :                     ;   Function to return the allocation vector.
    3580/    D437 :                     ;
    3581/    D437 : 2A E2 D4            getaloc ld	hl,(alocvect)
    3582/    D43A : C3 4F D4            	jp	getprm1
    3583/    D43D :                     ;
    3584/    D43D :                     ;   Function to return the read-only status vector.
    3585/    D43D :                     ;
    3586/    D43D : 2A D0 D4            getrov	ld	hl,(wrtprt)
    3587/    D440 : C3 4F D4            	jp	getprm1
    3588/    D443 :                     ;
    3589/    D443 :                     ;   Function to set the file attributes (read-only, system).
    3590/    D443 :                     ;
    3591/    D443 : CD 79 D3            setattr call	autosel		;select proper drive then save attributes.
    3592/    D446 : CD 92 CF            	call	saveattr
    3593/    D449 : C3 6B CE            	jp	ststatus
    3594/    D44C :                     ;
    3595/    D44C :                     ;   Function to return the address of the disk parameter block
    3596/    D44C :                     ; for the current drive.
    3597/    D44C :                     ;
    3598/    D44C : 2A DE D4            getparm ld	hl,(diskpb)
    3599/    D44F : 22 CE CA            getprm1 ld	(status),hl
    3600/    D452 : C9                  	ret	
    3601/    D453 :                     ;
    3602/    D453 :                     ;   Function to get or set the user number. If (E) was (FF)
    3603/    D453 :                     ; then this is a request to return the current user number.
    3604/    D453 :                     ; Else set the user number from (E).
    3605/    D453 :                     ;
    3606/    D453 : 3A F9 D4            getuser ld	a,(eparam)	;get parameter.
    3607/    D456 : FE FF               	cp	0ffh		;get user number?
    3608/    D458 : 20 06               	jr	nz,setuser
    3609/    D45A : 3A CA CA            	ld	a,(userno)	;yes, just do it.
    3610/    D45D : C3 8B CA            	jp	setstat
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 62 - 2/2/2018 12:56:16


    3611/    D460 : E6 1F               setuser and	1fh		;no, we should set it instead. keep low
    3612/    D462 : 32 CA CA            	ld	(userno),a	;bits (0-4) only.
    3613/    D465 : C9                  	ret	
    3614/    D466 :                     ;
    3615/    D466 :                     ;   Function to read a random record from a file.
    3616/    D466 :                     ;
    3617/    D466 :                     rdrandom
    3618/    D466 : CD 79 D3            	call	autosel		;select proper drive and read.
    3619/    D469 : C3 BE D2            	jp	readran
    3620/    D46C :                     ;
    3621/    D46C :                     ;   Function to compute the file size for random files.
    3622/    D46C :                     ;
    3623/    D46C :                     wtrandom
    3624/    D46C : CD 79 D3            	call	autosel		;select proper drive and write.
    3625/    D46F : C3 C7 D2            	jp	writeran
    3626/    D472 :                     ;
    3627/    D472 :                     ;   Function to compute the size of a random file.
    3628/    D472 :                     ;
    3629/    D472 :                     filesize
    3630/    D472 : CD 79 D3            	call	autosel		;select proper drive and check file length
    3631/    D475 : C3 FD D2            	jp	ransize
    3632/    D478 :                     ;
    3633/    D478 :                     ;   Function #37. This allows a program to log off any drives.
    3634/    D478 :                     ; On entry, set (DE) to contain a word with bits set for those
    3635/    D478 :                     ; drives that are to be logged off. The log-in vector and the
    3636/    D478 :                     ; write protect vector will be updated. This must be a M/PM
    3637/    D478 :                     ; special function.
    3638/    D478 :                     ;
    3639/    D478 : 2A CC CA            logoff	ld	hl,(params)	;get drives to log off.
    3640/    D47B : 7D                  	ld	a,l		;for each bit that is set, we want
    3641/    D47C : 2F                  	cpl			;to clear that bit in (LOGIN)
    3642/    D47D : 5F                  	ld	e,a		;and (WRTPRT).
    3643/    D47E : 7C                  	ld	a,h
    3644/    D47F : 2F                  	cpl	
    3645/    D480 : 2A D2 D4            	ld	hl,(login)	;reset the login vector.
    3646/    D483 : A4                  	and	h
    3647/    D484 : 57                  	ld	d,a
    3648/    D485 : 7D                  	ld	a,l
    3649/    D486 : A3                  	and	e
    3650/    D487 : 5F                  	ld	e,a
    3651/    D488 : 2A D0 D4            	ld	hl,(wrtprt)
    3652/    D48B : EB                  	ex	de,hl
    3653/    D48C : 22 D2 D4            	ld	(login),hl	;and save.
    3654/    D48F : 7D                  	ld	a,l		;now do the write protect vector.
    3655/    D490 : A3                  	and	e
    3656/    D491 : 6F                  	ld	l,a
    3657/    D492 : 7C                  	ld	a,h
    3658/    D493 : A2                  	and	d
    3659/    D494 : 67                  	ld	h,a
    3660/    D495 : 22 D0 D4            	ld	(wrtprt),hl	;and save. all done.
    3661/    D498 : C9                  	ret	
    3662/    D499 :                     ;
    3663/    D499 :                     ;   Get here to return to the user.
    3664/    D499 :                     ;
    3665/    D499 : 3A 01 D5            goback	ld	a,(auto)	;was auto select activated?
    3666/    D49C : B7                  	or	a
    3667/    D49D : 28 15               	jr	z,goback1
    3668/    D49F : 2A CC CA            	ld	hl,(params)	;yes, but was a change made?
    3669/    D4A2 : 36 00               	ld	(hl),0		;(* reset first byte of fcb *)
    3670/    D4A4 : 3A 03 D5            	ld	a,(autoflag)
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 63 - 2/2/2018 12:56:16


    3671/    D4A7 : B7                  	or	a
    3672/    D4A8 : 28 0A               	jr	z,goback1
    3673/    D4AA : 77                  	ld	(hl),a		;yes, reset first byte properly.
    3674/    D4AB : 3A 02 D5            	ld	a,(olddrv)	;and get the old drive and select it.
    3675/    D4AE : 32 F9 D4            	ld	(eparam),a
    3676/    D4B1 : CD 6D D3            	call	setdsk
    3677/    D4B4 : 2A 98 CA            goback1 ld	hl,(usrstack)	;reset the users stack pointer.
    3678/    D4B7 : F9                  	ld	sp,hl
    3679/    D4B8 : 2A CE CA            	ld	hl,(status)	;get return status.
    3680/    D4BB : 7D                  	ld	a,l		;force version 1.4 compatability.
    3681/    D4BC : 44                  	ld	b,h
    3682/    D4BD : C9                  	ret			;and go back to user.
    3683/    D4BE :                     ;
    3684/    D4BE :                     ;   Function #40. This is a special entry to do random i/o.
    3685/    D4BE :                     ; For the case where we are writing to unused disk space, this
    3686/    D4BE :                     ; space will be zeroed out first. This must be a M/PM special
    3687/    D4BE :                     ; purpose function, because why would any normal program even
    3688/    D4BE :                     ; care about the previous contents of a sector about to be
    3689/    D4BE :                     ; written over.
    3690/    D4BE :                     ;
    3691/    D4BE : CD 79 D3            wtspecl call	autoseL		;select proper drive.
    3692/    D4C1 : 3E 02               	ld	a,2		;use special write mode.
    3693/    D4C3 : 32 F8 D4            	ld	(mode),a
    3694/    D4C6 : 0E 00               	ld	c,0		;set write indicator.
    3695/    D4C8 : CD 39 D2            	call	positn1		;position the file.
    3696/    D4CB : CC 41 D1            	call	z,wtseq1	;and write (if no errors).
    3697/    D4CE : C9                  	ret	
    3698/    D4CF :                     ;
    3699/    D4CF :                     ;**************************************************************
    3700/    D4CF :                     ;*
    3701/    D4CF :                     ;*     BDOS data storage pool.
    3702/    D4CF :                     ;*
    3703/    D4CF :                     ;**************************************************************
    3704/    D4CF :                     ;
    3705/    D4CF : E5                  emptyfcb	db	0e5h	;empty directory segment indicator.
    3706/    D4D0 : 00 00               wrtprt		dw	0	;write protect status for all 16 drives.
    3707/    D4D2 : 00 00               login		dw	0	;drive active word (1 bit per drive).
    3708/    D4D4 : 80 00               userdma		dw	080H	;user's dma address (defaults to 80h).
    3709/    D4D6 :                     ;
    3710/    D4D6 :                     ;   Scratch areas from parameter block.
    3711/    D4D6 :                     ;
    3712/    D4D6 : 00 00               scratch1	dw	0	;relative position within dir segment for file (0-3).
    3713/    D4D8 : 00 00               scratch2	dw	0	;last selected track number.
    3714/    D4DA : 00 00               scratch3	dw	0	;last selected sector number.
    3715/    D4DC :                     ;
    3716/    D4DC :                     ;   Disk storage areas from parameter block.
    3717/    D4DC :                     ;
    3718/    D4DC : 00 00               dirbuf		dw	0	;address of directory buffer to use.
    3719/    D4DE : 00 00               diskpb		dw	0	;contains address of disk parameter block.
    3720/    D4E0 : 00 00               chkvect		dw	0	;address of check vector.
    3721/    D4E2 : 00 00               alocvect	dw	0	;address of allocation vector (bit map).
    3722/    D4E4 :                     ;
    3723/    D4E4 :                     ;   Parameter block returned from the bios.
    3724/    D4E4 :                     ;
    3725/    D4E4 : 00 00               sectors		dw	0	;sectors per track from bios.
    3726/    D4E6 : 00                  blkshft		db	0	;block shift.
    3727/    D4E7 : 00                  blkmask		db	0	;block mask.
    3728/    D4E8 : 00                  extmask		db	0	;extent mask.
    3729/    D4E9 : 00 00               dsksize		dw	0	;disk size from bios (number of blocks-1).
    3730/    D4EB : 00 00               dirsize		dw	0	;directory size.
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 64 - 2/2/2018 12:56:16


    3731/    D4ED : 00 00               alloc0		dw	0	;storage for first bytes of bit map (dir space used).
    3732/    D4EF : 00 00               alloc1		dw	0
    3733/    D4F1 : 00 00               offset		dw	0	;first usable track number.
    3734/    D4F3 : 00 00               xlate		dw	0	;sector translation table address.
    3735/    D4F5 :                     ;
    3736/    D4F5 :                     ;
    3737/    D4F5 : 00                  closeflg	db	0	;close flag (=0ffh is extent written ok).
    3738/    D4F6 : 00                  rdwrtflg	db	0	;read/write flag (0ffh=read, 0=write).
    3739/    D4F7 : 00                  fndstat		db	0	;filename found status (0=found first entry).
    3740/    D4F8 : 00                  mode		db	0	;I/o mode select (0=random, 1=sequential, 2=special random).
    3741/    D4F9 : 00                  eparam		db	0	;storage for register (E) on entry to bdos.
    3742/    D4FA : 00                  relblock	db	0	;relative position within fcb of block number written.
    3743/    D4FB : 00                  counter		db	0	;byte counter for directory name searches.
    3744/    D4FC : 00 00 00 00         savefcb		dw	0,0	;save space for address of fcb (for directory searches).
    3745/    D500 : 00                  bigdisk		db	0	;if =0 then disk is > 256 blocks long.
    3746/    D501 : 00                  auto		db	0	;if non-zero, then auto select activated.
    3747/    D502 : 00                  olddrv		db	0	;on auto select, storage for previous drive.
    3748/    D503 : 00                  autoflag	db	0	;if non-zero, then auto select changed drives.
    3749/    D504 : 00                  savnxt		db	0	;storage for next record number to access.
    3750/    D505 : 00                  savext		db	0	;storage for extent number of file.
    3751/    D506 : 00 00               savnrec		dw	0	;storage for number of records in file.
    3752/    D508 : 00 00               blknmbr		dw	0	;block number (physical sector) used within a file or logical sect
    3753/    D50A : 00 00               logsect		dw	0	;starting logical (128 byte) sector of block (physical sector).
    3754/    D50C : 00                  fcbpos		db	0	;relative position within buffer for fcb of file of interest.
    3755/    D50D : 00 00               filepos		dw	0	;files position within directory (0 to max entries -1).
    3756/    D50F :                     ;
    3757/    D50F :                     ;   Disk directory buffer checksum bytes. One for each of the
    3758/    D50F :                     ; 16 possible drives.
    3759/    D50F :                     ;
    3760/    D50F : 00 00 00 00 00 00   cksumtbl	db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                    00 00 00 00 00 00 
                    00 00 00 00 
    3761/    D51F :                     ;
    3762/    D51F :                     ;   Extra space ?
    3763/    D51F :                     ;
    3764/    D51F : 00 00 00 00         		db	0,0,0,0
    3765/    D523 :                     ;
    3766/    D523 :                     ;**************************************************************
    3767/    D523 :                     ;*
    3768/    D523 :                     ;*        B I O S   J U M P   T A B L E
    3769/    D523 :                     ;*
    3770/    D523 :                     ;**************************************************************
    3771/    D523 :                     ;
    3772/    D523 : C3 00 00            boot	jp	0		;NOTE WE USE FAKE DESTINATIONS
    3773/    D526 : C3 00 00            wboot	jp	0
    3774/    D529 : C3 00 00            const	jp	0
    3775/    D52C : C3 00 00            conin	jp	0
    3776/    D52F : C3 00 00            conout	jp	0
    3777/    D532 : C3 00 00            list	jp	0
    3778/    D535 : C3 00 00            punch	jp	0
    3779/    D538 : C3 00 00            reader	jp	0
    3780/    D53B : C3 00 00            home	jp	0
    3781/    D53E : C3 00 00            seldsk	jp	0
    3782/    D541 : C3 00 00            settrk	jp	0
    3783/    D544 : C3 00 00            setsec	jp	0
    3784/    D547 : C3 00 00            setdma	jp	0
    3785/    D54A : C3 00 00            read	jp	0
    3786/    D54D : C3 00 00            write	jp	0
    3787/    D550 : C3 00 00            prstat	jp	0
    3788/    D553 : C3 00 00            sectrn	jp	0
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 65 - 2/2/2018 12:56:16


    3789/    D556 :                     ;
    3790/    D556 :                     ;*
    3791/    D556 :                     ;******************   E N D   O F   C P / M   *****************
    3792/    D556 :                     ;*
    3793/    D556 :                     
    3794/    D556 :                     	 end
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 66 - 2/2/2018 12:56:16


  symbol table (* = unused):
  ------------------------

 ACTIVE :                      CACB C |  ADDA2HL :                     CCDC C |
 ADDHL :                       C245 C |  ALLOC0 :                      D4ED C |
 ALLOC1 :                      D4EF C |  ALOCVECT :                    D4E2 C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
 AUTO :                        D501 C |  AUTOFLAG :                    D503 C |
 AUTOSEL :                     D379 C |  AUTOSL1 :                     D39C C |
 BACKUP :                      C944 C |  BACKUP1 :                     C94C C |
 BADLOAD :                     C722 C |  BADSCTR :                     C7B1 C |
 BADSEC :                      C870 C |  BADSEL :                      C87B C |
 BADSLCT :                     C7B3 C |  BATCH :                       C753 C |
 BATCHFCB :                    C754 C |  BDOSDRV :                     C86C C |
 BDOSERR :                     C860 C |  BIGDISK :                     D500 C |
*BIGENDIAN :                      0 - |  BITMAP :                      CE12 C |
 BITMAP1 :                     CE20 C |  BITMAP2 :                     CE40 C |
 BITMAP3 :                     CE61 C |  BLKMASK :                     D4E7 C |
 BLKNMBR :                     D508 C |  BLKSHFT :                     D4E6 C |
*BOOT :                        D523 C | *BRANCHEXT :                      0 - |
 BS :                             8 - | *CASESENSITIVE :                  0 - |
 CBASE :                       C000 C |  CCPSTACK :                    C753 - |
 CDRIVE :                      C797 C |  CHARBUF :                     CA97 C |
 CHECK :                       C21D C |  CHECKDIR :                    CD16 C |
 CHECKSUM :                    CC71 C |  CHGDRV :                      C798 C |
 CHGNAM1 :                     CF7F C |  CHGNAMES :                    CF6E C |
 CHKBLK :                      CC01 C |  CHKCHAR :                     C8BA C |
 CHKCON :                      C1B3 C |  CHKDIR1 :                     CD3B C |
 CHKNMBR :                     CD04 C |  CHKROFL :                     CCBC C |
 CHKSUM1 :                     CC77 C |  CHKVECT :                     D4E0 C |
 CHKWPRT :                     CCCC C |  CKBITMAP :                    CDA9 C |
 CKBMAP1 :                     CDCA C |  CKCON1 :                      C8E6 C |
 CKCON2 :                      C8E9 C |  CKCONSOL :                    C8C9 C |
 CKFILPOS :                    CD6B C |  CKROF1 :                      CCBF C |
 CKSUMTBL :                    D50F C |  CLEARBUF :                    C32B C |
 CLEARS2 :                     CCEA C |  CLOSE :                       C0D5 C |
 CLOSEFIL :                    D3CC C |  CLOSEFLG :                    D4F5 C |
 CLOSEIT :                     CFF6 C |  CLOSEIT1 :                    D021 C |
 CLOSEIT2 :                    D02D C |  CLOSEIT3 :                    D032 C |
 CLOSEIT4 :                    D037 C |  CLOSEIT5 :                    D04A C |
 CLOSEIT6 :                    D062 C |  CLOSEIT7 :                    D06A C |
 CMDADR :                      C393 C |  CMDTBL :                      C2E8 C |
 CMMND1 :                      C354 C |  CMMND2 :                      C36A C |
 CNTRLC :                         3 - |  CNTRLE :                         5 - |
 CNTRLP :                        10 - |  CNTRLR :                        12 - |
 CNTRLS :                        13 - |  CNTRLU :                        15 - |
 CNTRLX :                        18 - |  CNTRLZ :                        1A - |
 COMBLK :                      CBF4 C |  COMFILE :                     C72B C |
 COMMAND :                     C32F C |  COMPRAND :                    D2D0 C |
 CONIN :                       D52C C |  CONOUT :                      D52F C |
 CONST :                       D529 C | *CONSTPI :        3.141592653589793 - |
 CONVERT :                     C24C C |  CONVFST :                     C24A C |
 CONVRT1 :                     C273 C |  CONVRT2 :                     C279 C |
 CONVRT3 :                     C27F C |  CONVRT4 :                     C281 C |
 CONVRT5 :                     C28F C |  CONVRT6 :                     C291 C |
 CONVRT7 :                     C294 C |  CONVRT8 :                     C29C C |
 COUNTER :                     D4FB C |  CR :                             D - |
 CREATE :                      C0FD C |  CRLF :                        C098 C |
 CURPOS :                      CA95 C | *DATE :                    2/2/2018 - |
 DE2HL :                       CAD8 C |  DE2HL1 :                      CAD9 C |
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 67 - 2/2/2018 12:56:16


 DECODE :                      C3CA C |  DECODE1 :                     C3DA C |
*DECODE2 :                     C3FB C |  DECODE3 :                     C403 C |
*DECODE4 :                     C40A C |  DEFDMA :                      CD51 C |
 DEL :                           7F - |  DELBATCH :                    C1CE C |
 DELETE :                      C0E6 C |  DELFILE :                     D3FD C |
 DIRBUF :                      D4DC C |  DIRC1 :                       CA6A C |
 DIRCIO :                      CA5F C |  DIRDMA :                      CD56 C |
 DIRDMA1 :                     CD59 C |  DIRECT :                      C445 C |
 DIRECT1 :                     C455 C |  DIRECT2 :                     C45B C |
 DIRECT3 :                     C464 C |  DIRECT4 :                     C495 C |
 DIRECT5 :                     C49D C |  DIRECT6 :                     C4A2 C |
 DIRECT7 :                     C4D1 C |  DIRECT8 :                     C4D2 C |
 DIRECT9 :                     C4DC C |  DIRREAD :                     CD4B C |
 DIRSIZE :                     D4EB C |  DIRWRITE :                    CD3D C |
 DISKPB :                      D4DE C |  DISKRO :                      C887 C |
 DMASET :                      C1C9 C |  DOREAD :                      CB39 C |
 DOWRITE :                     CB3E C |  DRECT63 :                     C4BD C |
 DRECT65 :                     C4BF C |  DSELECT :                     C422 C |
 DSKSEL :                      C0BA C |  DSKSIZE :                     D4E9 C |
 EMPTYFCB :                    D4CF C |  ENTRY :                          5 - |
 ENTRY1 :                      C0C0 C |  ENTRY2 :                      C0EB C |
 EPARAM :                      D4F9 C |  ERAFIL1 :                     CF03 C |
 ERAFILE :                     CEFB C |  ERASE :                       C4E0 C |
 ERASE1 :                      C502 C |  ERROR1 :                      C841 C |
 ERROR2 :                      C84D C |  ERROR3 :                      C852 C |
 ERROR4 :                      C857 C |  ERROR5 :                      C85A C |
 EXISTS :                      C633 C |  EXTBLK :                      CBDC C |
 EXTBLK1 :                     CBEE C |  EXTMASK :                     D4E8 C |
 EXTRACT :                     C419 C | *FALSE :                          0 - |
*FBASE :                       C7AE C |  FBASE1 :                      C7B9 C |
 FCB :                         C775 C |  FCB2HL :                      CCD6 C |
 FCBPOS :                      D50C C |  FCBSET :                      CF55 C |
 FCREATE :                     D412 C | *FF :                             C - |
 FILEPOS :                     D50D C |  FILERO :                      C882 C |
 FILESIZE :                    D472 C |  FINDFST :                     CE82 C |
 FINDNXT :                     CE97 C |  FNDNXT1 :                     CEB1 C |
 FNDNXT2 :                     CEBA C |  FNDNXT3 :                     CED4 C |
 FNDNXT4 :                     CEDC C |  FNDNXT5 :                     CEE2 C |
 FNDNXT6 :                     CEF3 C |  FNDSPA1 :                     CF1E C |
 FNDSPA2 :                     CF2D C |  FNDSPA3 :                     CF45 C |
 FNDSPA4 :                     CF4D C |  FNDSPACE :                    CF1C C |
 FNDSTAT :                     D4F7 C | *FULLPMMU :                       1 - |
 FUNCTNS :                     C7EF C |  GETALOC :                     D437 C |
 GETBACK :                     C72E C |  GETBACK1 :                    C731 C |
 GETBLK1 :                     CBC6 C |  GETBLK2 :                     CBD3 C |
 GETBLK3 :                     CBDA C |  GETBLOCK :                    CBBF C |
 GETCHAR :                     C8A1 C |  GETCON :                      CA53 C |
 GETCRNT :                     D42A C |  GETCSTS :                     CA88 C |
 GETDSK :                      C1C1 C |  GETECHO :                     C8AC C |
 GETEMPTY :                    D06F C |  GETEXT :                      C2A2 C |
 GETEXT1 :                     C2A9 C |  GETEXT2 :                     C2B7 C |
 GETEXT3 :                     C2B9 C |  GETEXT4 :                     C2BC C |
 GETEXT5 :                     C2C5 C |  GETEXT6 :                     C2CB C |
 GETEXT7 :                     C2CD C |  GETEXT8 :                     C2DB C |
 GETEXT9 :                     C2E2 C |  GETFST :                      D3D2 C |
 GETFST1 :                     D3E8 C |  GETINP :                      C12D C |
 GETINP1 :                     C189 C |  GETINP2 :                     C19A C |
 GETINP3 :                     C19E C |  GETINP4 :                     C1AB C |
 GETIOB :                      CA77 C |  GETLOG :                      D424 C |
 GETMT1 :                      D091 C |  GETNEXT :                     D0A4 C |
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 68 - 2/2/2018 12:56:16


 GETNXT :                      D3EE C |  GETPARM :                     D44C C |
 GETPRM1 :                     D44F C |  GETRDR :                      CA59 C |
 GETROV :                      D43D C |  GETS2 :                       CCE1 C |
 GETSETUC :                    C109 C |  GETUSER :                     D453 C |
 GETUSR :                      C107 C |  GETVER :                      D3A5 C |
 GETWPRT :                     CC96 C |  GOBACK :                      D499 C |
 GOBACK1 :                     D4B4 C |  GTNEXT1 :                     D0CA C |
 GTNEXT2 :                     D0D4 C |  GTNEXT3 :                     D0EE C |
 GTNEXT4 :                     D0F1 C |  GTNEXT5 :                     D0F8 C |
 HALT :                        C3A1 C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HL2DE :                       C411 C |
 HOME :                        D53B C |  HOMEDRV :                     CB28 C |
 INBUFF :                      C006 C | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
 INPOINT :                     C088 C | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  IOBYTE :                         3 - |
 IOERR1 :                      CA8F C |  IORET :                       CB41 C |
 JUMPHL :                      CAD3 C |  LF :                             A - |
 LIST :                        D532 C | *LISTON :                         1 - |
 LOGICAL :                     CC07 C |  LOGICL1 :                     CC0D C |
 LOGIN :                       D4D2 C |  LOGINDRV :                    D349 C |
 LOGOFF :                      D478 C |  LOGSECT :                     D50A C |
*MACEXP :                         1 - |  MODE :                        D4F8 C |
*MOMCPU :                        80 - | *MOMCPUNAME :                   Z80 - |
 MOREFLS :                     CCF7 C |  MOVE3 :                       C40F C |
 MOVECD :                      C11D C |  MOVEDIR :                     CD5F C |
 MOVEWORD :                    CFE8 C |  NAMEPNT :                     C08A C |
 NBYTES :                      C799 C | *NESTMAX :                      100 - |
 NEWLINE :                     C951 C |  NEWLN1 :                      C959 C |
 NFUNCTS :                       29 - |  NOFILE :                      C3C2 C |
 NONBLANK :                    C23C C |  NONE :                        C3BC C |
 NOSPACE :                     C5BF C |  NUMCMDS :                        6 - |
 NXENT1 :                      CD8E C |  NXENT2 :                      CD95 C |
 NXENTRY :                     CD7B C |  OFFSET :                      D4F1 C |
 OLDDRV :                      D502 C |  OPEN :                        C0C8 C |
 OPENFCB :                     C0CC C |  OPENFIL :                     D3C3 C |
 OPENIT :                      CFA7 C |  OPENIT1 :                     CFB0 C |
 OPENIT2 :                     CFDF C |  OUTCHAR :                     C8EC C |
 OUTCHR1 :                     C905 C |  OUTCHR2 :                     C91B C |
 OUTCON :                      C931 C |  OUTCON1 :                     C937 C |
 OUTCRLF :                     C968 C |  OUTFLAG :                     CA93 C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PARAMS :                      CACC C |  PATTRN1 :                     C300 C |
 PATTRN2 :                     C7A8 C |  PLINE :                       C0A5 C |
 PLINE2 :                      C0AA C |  POSITION :                    D235 C |
 POSITN1 :                     D239 C |  POSITN2 :                     D276 C |
 POSITN3 :                     D2AA C |  POSITN4 :                     D2AF C |
 POSITN5 :                     D2B6 C |  PRINT :                       C08C C |
 PRINTB :                      C092 C | *PRSTAT :                      D550 C |
 PRTERR :                      C88B C |  PRTFLAG :                     CA96 C |
 PRTMESG :                     C972 C |  PRTSTR :                      CA82 C |
 PUNCH :                       D535 C |  PUTDMA :                      D430 C |
 RANSIZ1 :                     D30F C |  RANSIZ2 :                     D32F C |
 RANSIZ3 :                     D334 C |  RANSIZE :                     D2FD C |
 RDBUF1 :                      C98D C |  RDBUF10 :                     C9FF C |
 RDBUF11 :                     CA07 C |  RDBUF12 :                     CA17 C |
 RDBUF13 :                     CA26 C |  RDBUF14 :                     CA32 C |
 RDBUF15 :                     CA35 C |  RDBUF16 :                     CA48 C |
 RDBUF17 :                     CA4C C |  RDBUF2 :                      C98F C |
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 69 - 2/2/2018 12:56:16


 RDBUF3 :                      C9B1 C |  RDBUF4 :                      C9BF C |
 RDBUF5 :                      C9CE C |  RDBUF6 :                      C9DD C |
 RDBUF7 :                      C9E2 C |  RDBUF8 :                      C9F1 C |
 RDBUF9 :                      C9FB C |  RDBUFF :                      C97F C |
 RDERR :                       C3B1 C |  RDERROR :                     C3AB C |
 RDRANDOM :                    D466 C |  RDREC :                       C0F0 C |
 RDSEQ :                       D0FE C |  RDSEQ1 :                      D103 C |
 RDSEQ2 :                      D125 C |  RDSEQ3 :                      D139 C |
 RDWRTFLG :                    D4F6 C |  READ :                        D54A C |
 READER :                      D538 C |  READFCB :                     C0F4 C |
 READRAN :                     D2BE C |  READSEQ :                     D406 C |
*RELAXED :                        0 - |  RELBLOCK :                    D4FA C |
 RENAM :                       C102 C |  RENAME :                      C5C8 C |
 RENAME1 :                     C5F4 C |  RENAME2 :                     C60B C |
*RENAME3 :                     C610 C |  RENAME4 :                     C61E C |
 RENAME5 :                     C624 C |  RENAME6 :                     C62A C |
 RENFILE :                     D41B C |  RESDSK :                      C0B5 C |
 RESETDR :                     C434 C |  RODISK :                      C7B5 C |
 ROFILE :                      C7B7 C |  RSTDSK :                      D3AA C |
 RTN :                         CA8E C |  RTNCODE :                     C796 C |
 SAMEXT :                      CE71 C |  SAVATR1 :                     CF97 C |
 SAVE :                        C56A C |  SAVE1 :                       C590 C |
 SAVE2 :                       C5AA C |  SAVE3 :                       C5B3 C |
 SAVE4 :                       C5B9 C |  SAVEATTR :                    CF92 C |
 SAVEFCB :                     D4FC C |  SAVEXT :                      D505 C |
 SAVNREC :                     D506 C |  SAVNXT :                      D504 C |
 SCRATCH1 :                    D4D6 C |  SCRATCH2 :                    D4D8 C |
 SCRATCH3 :                    D4DA C |  SEARCH :                      C306 C |
 SEARCH1 :                     C30B C |  SEARCH2 :                     C314 C |
 SEARCH3 :                     C324 C |  SEARCH4 :                     C328 C |
 SECTORS :                     D4E4 C |  SECTRN :                      D553 C |
 SELDSK :                      D53E C |  SELECT :                      CAE1 C |
 SELECT1 :                     CB24 C |  SETATTR :                     D443 C |
 SETBIT :                      CC83 C |  SETCDRV :                     C10E C |
 SETDIR :                      CD14 C |  SETDMA :                      D547 C |
 SETDSK :                      D36D C |  SETEXT :                      CC22 C |
 SETFILE :                     CDDD C |  SETFL1 :                      CDE7 C |
 SETFL2 :                      CDF9 C |  SETFL3 :                      CDFF C |
 SETFL4 :                      CE0D C |  SETHLDE :                     CC2A C |
 SETIOB :                      CA7D C |  SETNREC :                     CC4E C |
 SETRAN :                      D336 C |  SETS2B7 :                     CCF0 C |
 SETSEC :                      D544 C |  SETSTAT :                     CA8B C |
 SETTRK :                      D541 C |  SETUSER :                     D460 C |
 SHIFTL :                      CC7D C |  SHIFTL1 :                     CC7E C |
 SHIFTR :                      CC65 C |  SHIFTR1 :                     CC66 C |
 SHOWIT :                      C921 C |  SLCTERR :                     CAD0 C |
 SPACE :                       C0A1 C |  SRCHFCB :                     C0E1 C |
 SRCHFST :                     C0D9 C |  SRCHNXT :                     C0DD C |
 STARTING :                    CA94 C |  STATUS :                      CACE C |
 STBITMAP :                    CDCF C |  STBMAP1 :                     CDD7 C |
 STDDMA :                      C1C6 C |  STFILPOS :                    CD74 C |
 STKAREA :                     CACA - |  STNREC1 :                     CC59 C |
 STRDATA :                     CC37 C |  STSTATUS :                    CE6B C |
 SUBHL :                       CD0D C |  SYNERR :                      C1F9 C |
 SYNERR1 :                     C1FF C |  SYNERR2 :                     C20F C |
 TAB :                            9 - |  TBASE :                        100 - |
 TBUFF :                         80 - |  TDRIVE :                         4 - |
 TFCB :                          5C - | *TIME :                    12:56:16 - |
 TRKSEC :                      CB49 C |  TRKSEC1 :                     CB57 C |
 TRKSEC2 :                     CB6A C |  TRKSEC3 :                     CB7E C |
 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 70 - 2/2/2018 12:56:16


 TRKSEC4 :                     CB90 C | *TRUE :                           1 - |
 TYPE :                        C51D C |  TYPE1 :                       C533 C |
*TYPE2 :                       C536 C |  TYPE3 :                       C545 C |
 TYPE4 :                       C55D C |  TYPE5 :                       C564 C |
 UNKNOWN :                     C656 C |  UNKWN0 :                      C719 C |
 UNKWN1 :                      C674 C | *UNKWN2 :                      C67D C |
 UNKWN3 :                      C691 C |  UNKWN4 :                      C6AE C |
 UNKWN5 :                      C6DD C |  UNKWN6 :                      C6E8 C |
 UNKWN7 :                      C6ED C |  UNKWN8 :                      C6F7 C |
 UNKWN9 :                      C713 C |  UPDATE :                      CF59 C |
 UPDATE1 :                     CF68 C |  UPPER :                       C124 C |
 USER :                        C63F C |  USERDMA :                     D4D4 C |
 USERNO :                      CACA C |  USRSTACK :                    CA98 C |
 VERIFY :                      C1E6 C |  VERIFY1 :                     C1EE C |
*VERSION :                     142F - |  WBOOT :                       D526 C |
 WRITE :                       D54D C |  WRITERAN :                    D2C7 C |
 WRTPRT :                      D4D0 C |  WRTPRTD :                     CCA4 C |
 WRTREC :                      C0F9 C |  WRTSEQ :                      D40C C |
 WTRANDOM :                    D46C C |  WTSEQ :                       D13C C |
 WTSEQ1 :                      D141 C |  WTSEQ10 :                     D207 C |
 WTSEQ11 :                     D230 C |  WTSEQ12 :                     D232 C |
 WTSEQ2 :                      D177 C |  WTSEQ3 :                      D183 C |
 WTSEQ4 :                      D19D C |  WTSEQ5 :                      D1A5 C |
 WTSEQ6 :                      D1A7 C |  WTSEQ7 :                      D1C3 C |
 WTSEQ8 :                      D1D1 C |  WTSEQ9 :                      D1F1 C |
*WTSEQ99 :                     D212 C |  WTSPECL :                     D4BE C |
 XLATE :                       D4F3 C |  YESNO :                       C512 C |

    527 symbols
     38 unused symbols

 AS V1.42 Beta [Bld 115] - source file zcpm22.asm - page 71 - 2/2/2018 12:56:16


  codepages:
  ----------

STANDARD (0 changed characters)


0.10 seconds assembly time

   3795 lines source file
      2 passes
      0 errors
      0 warnings
